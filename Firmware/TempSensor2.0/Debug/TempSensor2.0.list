
TempSensor2.0.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00007234  080000c0  080000c0  000100c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000410  080072f8  080072f8  000172f8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08007708  08007708  000201e8  2**0
                  CONTENTS
  4 .ARM          00000000  08007708  08007708  000201e8  2**0
                  CONTENTS
  5 .preinit_array 00000000  08007708  08007708  000201e8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08007708  08007708  00017708  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800770c  0800770c  0001770c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001e8  20000000  08007710  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000000b0  200001e8  080078f8  000201e8  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000298  080078f8  00020298  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  000201e8  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000715c  00000000  00000000  00020210  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 000016fa  00000000  00000000  0002736c  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000628  00000000  00000000  00028a68  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000550  00000000  00000000  00029090  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  0000ce52  00000000  00000000  000295e0  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00006f2d  00000000  00000000  00036432  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    00047c17  00000000  00000000  0003d35f  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  00084f76  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000200c  00000000  00000000  00084ff4  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	; (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	; (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	; (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	200001e8 	.word	0x200001e8
 80000e0:	00000000 	.word	0x00000000
 80000e4:	080072dc 	.word	0x080072dc

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	; (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	; (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	; (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			; (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	200001ec 	.word	0x200001ec
 8000104:	080072dc 	.word	0x080072dc

08000108 <strlen>:
 8000108:	2300      	movs	r3, #0
 800010a:	5cc2      	ldrb	r2, [r0, r3]
 800010c:	3301      	adds	r3, #1
 800010e:	2a00      	cmp	r2, #0
 8000110:	d1fb      	bne.n	800010a <strlen+0x2>
 8000112:	1e58      	subs	r0, r3, #1
 8000114:	4770      	bx	lr
	...

08000118 <__gnu_thumb1_case_uqi>:
 8000118:	b402      	push	{r1}
 800011a:	4671      	mov	r1, lr
 800011c:	0849      	lsrs	r1, r1, #1
 800011e:	0049      	lsls	r1, r1, #1
 8000120:	5c09      	ldrb	r1, [r1, r0]
 8000122:	0049      	lsls	r1, r1, #1
 8000124:	448e      	add	lr, r1
 8000126:	bc02      	pop	{r1}
 8000128:	4770      	bx	lr
 800012a:	46c0      	nop			; (mov r8, r8)

0800012c <__udivsi3>:
 800012c:	2200      	movs	r2, #0
 800012e:	0843      	lsrs	r3, r0, #1
 8000130:	428b      	cmp	r3, r1
 8000132:	d374      	bcc.n	800021e <__udivsi3+0xf2>
 8000134:	0903      	lsrs	r3, r0, #4
 8000136:	428b      	cmp	r3, r1
 8000138:	d35f      	bcc.n	80001fa <__udivsi3+0xce>
 800013a:	0a03      	lsrs	r3, r0, #8
 800013c:	428b      	cmp	r3, r1
 800013e:	d344      	bcc.n	80001ca <__udivsi3+0x9e>
 8000140:	0b03      	lsrs	r3, r0, #12
 8000142:	428b      	cmp	r3, r1
 8000144:	d328      	bcc.n	8000198 <__udivsi3+0x6c>
 8000146:	0c03      	lsrs	r3, r0, #16
 8000148:	428b      	cmp	r3, r1
 800014a:	d30d      	bcc.n	8000168 <__udivsi3+0x3c>
 800014c:	22ff      	movs	r2, #255	; 0xff
 800014e:	0209      	lsls	r1, r1, #8
 8000150:	ba12      	rev	r2, r2
 8000152:	0c03      	lsrs	r3, r0, #16
 8000154:	428b      	cmp	r3, r1
 8000156:	d302      	bcc.n	800015e <__udivsi3+0x32>
 8000158:	1212      	asrs	r2, r2, #8
 800015a:	0209      	lsls	r1, r1, #8
 800015c:	d065      	beq.n	800022a <__udivsi3+0xfe>
 800015e:	0b03      	lsrs	r3, r0, #12
 8000160:	428b      	cmp	r3, r1
 8000162:	d319      	bcc.n	8000198 <__udivsi3+0x6c>
 8000164:	e000      	b.n	8000168 <__udivsi3+0x3c>
 8000166:	0a09      	lsrs	r1, r1, #8
 8000168:	0bc3      	lsrs	r3, r0, #15
 800016a:	428b      	cmp	r3, r1
 800016c:	d301      	bcc.n	8000172 <__udivsi3+0x46>
 800016e:	03cb      	lsls	r3, r1, #15
 8000170:	1ac0      	subs	r0, r0, r3
 8000172:	4152      	adcs	r2, r2
 8000174:	0b83      	lsrs	r3, r0, #14
 8000176:	428b      	cmp	r3, r1
 8000178:	d301      	bcc.n	800017e <__udivsi3+0x52>
 800017a:	038b      	lsls	r3, r1, #14
 800017c:	1ac0      	subs	r0, r0, r3
 800017e:	4152      	adcs	r2, r2
 8000180:	0b43      	lsrs	r3, r0, #13
 8000182:	428b      	cmp	r3, r1
 8000184:	d301      	bcc.n	800018a <__udivsi3+0x5e>
 8000186:	034b      	lsls	r3, r1, #13
 8000188:	1ac0      	subs	r0, r0, r3
 800018a:	4152      	adcs	r2, r2
 800018c:	0b03      	lsrs	r3, r0, #12
 800018e:	428b      	cmp	r3, r1
 8000190:	d301      	bcc.n	8000196 <__udivsi3+0x6a>
 8000192:	030b      	lsls	r3, r1, #12
 8000194:	1ac0      	subs	r0, r0, r3
 8000196:	4152      	adcs	r2, r2
 8000198:	0ac3      	lsrs	r3, r0, #11
 800019a:	428b      	cmp	r3, r1
 800019c:	d301      	bcc.n	80001a2 <__udivsi3+0x76>
 800019e:	02cb      	lsls	r3, r1, #11
 80001a0:	1ac0      	subs	r0, r0, r3
 80001a2:	4152      	adcs	r2, r2
 80001a4:	0a83      	lsrs	r3, r0, #10
 80001a6:	428b      	cmp	r3, r1
 80001a8:	d301      	bcc.n	80001ae <__udivsi3+0x82>
 80001aa:	028b      	lsls	r3, r1, #10
 80001ac:	1ac0      	subs	r0, r0, r3
 80001ae:	4152      	adcs	r2, r2
 80001b0:	0a43      	lsrs	r3, r0, #9
 80001b2:	428b      	cmp	r3, r1
 80001b4:	d301      	bcc.n	80001ba <__udivsi3+0x8e>
 80001b6:	024b      	lsls	r3, r1, #9
 80001b8:	1ac0      	subs	r0, r0, r3
 80001ba:	4152      	adcs	r2, r2
 80001bc:	0a03      	lsrs	r3, r0, #8
 80001be:	428b      	cmp	r3, r1
 80001c0:	d301      	bcc.n	80001c6 <__udivsi3+0x9a>
 80001c2:	020b      	lsls	r3, r1, #8
 80001c4:	1ac0      	subs	r0, r0, r3
 80001c6:	4152      	adcs	r2, r2
 80001c8:	d2cd      	bcs.n	8000166 <__udivsi3+0x3a>
 80001ca:	09c3      	lsrs	r3, r0, #7
 80001cc:	428b      	cmp	r3, r1
 80001ce:	d301      	bcc.n	80001d4 <__udivsi3+0xa8>
 80001d0:	01cb      	lsls	r3, r1, #7
 80001d2:	1ac0      	subs	r0, r0, r3
 80001d4:	4152      	adcs	r2, r2
 80001d6:	0983      	lsrs	r3, r0, #6
 80001d8:	428b      	cmp	r3, r1
 80001da:	d301      	bcc.n	80001e0 <__udivsi3+0xb4>
 80001dc:	018b      	lsls	r3, r1, #6
 80001de:	1ac0      	subs	r0, r0, r3
 80001e0:	4152      	adcs	r2, r2
 80001e2:	0943      	lsrs	r3, r0, #5
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d301      	bcc.n	80001ec <__udivsi3+0xc0>
 80001e8:	014b      	lsls	r3, r1, #5
 80001ea:	1ac0      	subs	r0, r0, r3
 80001ec:	4152      	adcs	r2, r2
 80001ee:	0903      	lsrs	r3, r0, #4
 80001f0:	428b      	cmp	r3, r1
 80001f2:	d301      	bcc.n	80001f8 <__udivsi3+0xcc>
 80001f4:	010b      	lsls	r3, r1, #4
 80001f6:	1ac0      	subs	r0, r0, r3
 80001f8:	4152      	adcs	r2, r2
 80001fa:	08c3      	lsrs	r3, r0, #3
 80001fc:	428b      	cmp	r3, r1
 80001fe:	d301      	bcc.n	8000204 <__udivsi3+0xd8>
 8000200:	00cb      	lsls	r3, r1, #3
 8000202:	1ac0      	subs	r0, r0, r3
 8000204:	4152      	adcs	r2, r2
 8000206:	0883      	lsrs	r3, r0, #2
 8000208:	428b      	cmp	r3, r1
 800020a:	d301      	bcc.n	8000210 <__udivsi3+0xe4>
 800020c:	008b      	lsls	r3, r1, #2
 800020e:	1ac0      	subs	r0, r0, r3
 8000210:	4152      	adcs	r2, r2
 8000212:	0843      	lsrs	r3, r0, #1
 8000214:	428b      	cmp	r3, r1
 8000216:	d301      	bcc.n	800021c <__udivsi3+0xf0>
 8000218:	004b      	lsls	r3, r1, #1
 800021a:	1ac0      	subs	r0, r0, r3
 800021c:	4152      	adcs	r2, r2
 800021e:	1a41      	subs	r1, r0, r1
 8000220:	d200      	bcs.n	8000224 <__udivsi3+0xf8>
 8000222:	4601      	mov	r1, r0
 8000224:	4152      	adcs	r2, r2
 8000226:	4610      	mov	r0, r2
 8000228:	4770      	bx	lr
 800022a:	e7ff      	b.n	800022c <__udivsi3+0x100>
 800022c:	b501      	push	{r0, lr}
 800022e:	2000      	movs	r0, #0
 8000230:	f000 f8f0 	bl	8000414 <__aeabi_idiv0>
 8000234:	bd02      	pop	{r1, pc}
 8000236:	46c0      	nop			; (mov r8, r8)

08000238 <__aeabi_uidivmod>:
 8000238:	2900      	cmp	r1, #0
 800023a:	d0f7      	beq.n	800022c <__udivsi3+0x100>
 800023c:	e776      	b.n	800012c <__udivsi3>
 800023e:	4770      	bx	lr

08000240 <__divsi3>:
 8000240:	4603      	mov	r3, r0
 8000242:	430b      	orrs	r3, r1
 8000244:	d47f      	bmi.n	8000346 <__divsi3+0x106>
 8000246:	2200      	movs	r2, #0
 8000248:	0843      	lsrs	r3, r0, #1
 800024a:	428b      	cmp	r3, r1
 800024c:	d374      	bcc.n	8000338 <__divsi3+0xf8>
 800024e:	0903      	lsrs	r3, r0, #4
 8000250:	428b      	cmp	r3, r1
 8000252:	d35f      	bcc.n	8000314 <__divsi3+0xd4>
 8000254:	0a03      	lsrs	r3, r0, #8
 8000256:	428b      	cmp	r3, r1
 8000258:	d344      	bcc.n	80002e4 <__divsi3+0xa4>
 800025a:	0b03      	lsrs	r3, r0, #12
 800025c:	428b      	cmp	r3, r1
 800025e:	d328      	bcc.n	80002b2 <__divsi3+0x72>
 8000260:	0c03      	lsrs	r3, r0, #16
 8000262:	428b      	cmp	r3, r1
 8000264:	d30d      	bcc.n	8000282 <__divsi3+0x42>
 8000266:	22ff      	movs	r2, #255	; 0xff
 8000268:	0209      	lsls	r1, r1, #8
 800026a:	ba12      	rev	r2, r2
 800026c:	0c03      	lsrs	r3, r0, #16
 800026e:	428b      	cmp	r3, r1
 8000270:	d302      	bcc.n	8000278 <__divsi3+0x38>
 8000272:	1212      	asrs	r2, r2, #8
 8000274:	0209      	lsls	r1, r1, #8
 8000276:	d065      	beq.n	8000344 <__divsi3+0x104>
 8000278:	0b03      	lsrs	r3, r0, #12
 800027a:	428b      	cmp	r3, r1
 800027c:	d319      	bcc.n	80002b2 <__divsi3+0x72>
 800027e:	e000      	b.n	8000282 <__divsi3+0x42>
 8000280:	0a09      	lsrs	r1, r1, #8
 8000282:	0bc3      	lsrs	r3, r0, #15
 8000284:	428b      	cmp	r3, r1
 8000286:	d301      	bcc.n	800028c <__divsi3+0x4c>
 8000288:	03cb      	lsls	r3, r1, #15
 800028a:	1ac0      	subs	r0, r0, r3
 800028c:	4152      	adcs	r2, r2
 800028e:	0b83      	lsrs	r3, r0, #14
 8000290:	428b      	cmp	r3, r1
 8000292:	d301      	bcc.n	8000298 <__divsi3+0x58>
 8000294:	038b      	lsls	r3, r1, #14
 8000296:	1ac0      	subs	r0, r0, r3
 8000298:	4152      	adcs	r2, r2
 800029a:	0b43      	lsrs	r3, r0, #13
 800029c:	428b      	cmp	r3, r1
 800029e:	d301      	bcc.n	80002a4 <__divsi3+0x64>
 80002a0:	034b      	lsls	r3, r1, #13
 80002a2:	1ac0      	subs	r0, r0, r3
 80002a4:	4152      	adcs	r2, r2
 80002a6:	0b03      	lsrs	r3, r0, #12
 80002a8:	428b      	cmp	r3, r1
 80002aa:	d301      	bcc.n	80002b0 <__divsi3+0x70>
 80002ac:	030b      	lsls	r3, r1, #12
 80002ae:	1ac0      	subs	r0, r0, r3
 80002b0:	4152      	adcs	r2, r2
 80002b2:	0ac3      	lsrs	r3, r0, #11
 80002b4:	428b      	cmp	r3, r1
 80002b6:	d301      	bcc.n	80002bc <__divsi3+0x7c>
 80002b8:	02cb      	lsls	r3, r1, #11
 80002ba:	1ac0      	subs	r0, r0, r3
 80002bc:	4152      	adcs	r2, r2
 80002be:	0a83      	lsrs	r3, r0, #10
 80002c0:	428b      	cmp	r3, r1
 80002c2:	d301      	bcc.n	80002c8 <__divsi3+0x88>
 80002c4:	028b      	lsls	r3, r1, #10
 80002c6:	1ac0      	subs	r0, r0, r3
 80002c8:	4152      	adcs	r2, r2
 80002ca:	0a43      	lsrs	r3, r0, #9
 80002cc:	428b      	cmp	r3, r1
 80002ce:	d301      	bcc.n	80002d4 <__divsi3+0x94>
 80002d0:	024b      	lsls	r3, r1, #9
 80002d2:	1ac0      	subs	r0, r0, r3
 80002d4:	4152      	adcs	r2, r2
 80002d6:	0a03      	lsrs	r3, r0, #8
 80002d8:	428b      	cmp	r3, r1
 80002da:	d301      	bcc.n	80002e0 <__divsi3+0xa0>
 80002dc:	020b      	lsls	r3, r1, #8
 80002de:	1ac0      	subs	r0, r0, r3
 80002e0:	4152      	adcs	r2, r2
 80002e2:	d2cd      	bcs.n	8000280 <__divsi3+0x40>
 80002e4:	09c3      	lsrs	r3, r0, #7
 80002e6:	428b      	cmp	r3, r1
 80002e8:	d301      	bcc.n	80002ee <__divsi3+0xae>
 80002ea:	01cb      	lsls	r3, r1, #7
 80002ec:	1ac0      	subs	r0, r0, r3
 80002ee:	4152      	adcs	r2, r2
 80002f0:	0983      	lsrs	r3, r0, #6
 80002f2:	428b      	cmp	r3, r1
 80002f4:	d301      	bcc.n	80002fa <__divsi3+0xba>
 80002f6:	018b      	lsls	r3, r1, #6
 80002f8:	1ac0      	subs	r0, r0, r3
 80002fa:	4152      	adcs	r2, r2
 80002fc:	0943      	lsrs	r3, r0, #5
 80002fe:	428b      	cmp	r3, r1
 8000300:	d301      	bcc.n	8000306 <__divsi3+0xc6>
 8000302:	014b      	lsls	r3, r1, #5
 8000304:	1ac0      	subs	r0, r0, r3
 8000306:	4152      	adcs	r2, r2
 8000308:	0903      	lsrs	r3, r0, #4
 800030a:	428b      	cmp	r3, r1
 800030c:	d301      	bcc.n	8000312 <__divsi3+0xd2>
 800030e:	010b      	lsls	r3, r1, #4
 8000310:	1ac0      	subs	r0, r0, r3
 8000312:	4152      	adcs	r2, r2
 8000314:	08c3      	lsrs	r3, r0, #3
 8000316:	428b      	cmp	r3, r1
 8000318:	d301      	bcc.n	800031e <__divsi3+0xde>
 800031a:	00cb      	lsls	r3, r1, #3
 800031c:	1ac0      	subs	r0, r0, r3
 800031e:	4152      	adcs	r2, r2
 8000320:	0883      	lsrs	r3, r0, #2
 8000322:	428b      	cmp	r3, r1
 8000324:	d301      	bcc.n	800032a <__divsi3+0xea>
 8000326:	008b      	lsls	r3, r1, #2
 8000328:	1ac0      	subs	r0, r0, r3
 800032a:	4152      	adcs	r2, r2
 800032c:	0843      	lsrs	r3, r0, #1
 800032e:	428b      	cmp	r3, r1
 8000330:	d301      	bcc.n	8000336 <__divsi3+0xf6>
 8000332:	004b      	lsls	r3, r1, #1
 8000334:	1ac0      	subs	r0, r0, r3
 8000336:	4152      	adcs	r2, r2
 8000338:	1a41      	subs	r1, r0, r1
 800033a:	d200      	bcs.n	800033e <__divsi3+0xfe>
 800033c:	4601      	mov	r1, r0
 800033e:	4152      	adcs	r2, r2
 8000340:	4610      	mov	r0, r2
 8000342:	4770      	bx	lr
 8000344:	e05d      	b.n	8000402 <__divsi3+0x1c2>
 8000346:	0fca      	lsrs	r2, r1, #31
 8000348:	d000      	beq.n	800034c <__divsi3+0x10c>
 800034a:	4249      	negs	r1, r1
 800034c:	1003      	asrs	r3, r0, #32
 800034e:	d300      	bcc.n	8000352 <__divsi3+0x112>
 8000350:	4240      	negs	r0, r0
 8000352:	4053      	eors	r3, r2
 8000354:	2200      	movs	r2, #0
 8000356:	469c      	mov	ip, r3
 8000358:	0903      	lsrs	r3, r0, #4
 800035a:	428b      	cmp	r3, r1
 800035c:	d32d      	bcc.n	80003ba <__divsi3+0x17a>
 800035e:	0a03      	lsrs	r3, r0, #8
 8000360:	428b      	cmp	r3, r1
 8000362:	d312      	bcc.n	800038a <__divsi3+0x14a>
 8000364:	22fc      	movs	r2, #252	; 0xfc
 8000366:	0189      	lsls	r1, r1, #6
 8000368:	ba12      	rev	r2, r2
 800036a:	0a03      	lsrs	r3, r0, #8
 800036c:	428b      	cmp	r3, r1
 800036e:	d30c      	bcc.n	800038a <__divsi3+0x14a>
 8000370:	0189      	lsls	r1, r1, #6
 8000372:	1192      	asrs	r2, r2, #6
 8000374:	428b      	cmp	r3, r1
 8000376:	d308      	bcc.n	800038a <__divsi3+0x14a>
 8000378:	0189      	lsls	r1, r1, #6
 800037a:	1192      	asrs	r2, r2, #6
 800037c:	428b      	cmp	r3, r1
 800037e:	d304      	bcc.n	800038a <__divsi3+0x14a>
 8000380:	0189      	lsls	r1, r1, #6
 8000382:	d03a      	beq.n	80003fa <__divsi3+0x1ba>
 8000384:	1192      	asrs	r2, r2, #6
 8000386:	e000      	b.n	800038a <__divsi3+0x14a>
 8000388:	0989      	lsrs	r1, r1, #6
 800038a:	09c3      	lsrs	r3, r0, #7
 800038c:	428b      	cmp	r3, r1
 800038e:	d301      	bcc.n	8000394 <__divsi3+0x154>
 8000390:	01cb      	lsls	r3, r1, #7
 8000392:	1ac0      	subs	r0, r0, r3
 8000394:	4152      	adcs	r2, r2
 8000396:	0983      	lsrs	r3, r0, #6
 8000398:	428b      	cmp	r3, r1
 800039a:	d301      	bcc.n	80003a0 <__divsi3+0x160>
 800039c:	018b      	lsls	r3, r1, #6
 800039e:	1ac0      	subs	r0, r0, r3
 80003a0:	4152      	adcs	r2, r2
 80003a2:	0943      	lsrs	r3, r0, #5
 80003a4:	428b      	cmp	r3, r1
 80003a6:	d301      	bcc.n	80003ac <__divsi3+0x16c>
 80003a8:	014b      	lsls	r3, r1, #5
 80003aa:	1ac0      	subs	r0, r0, r3
 80003ac:	4152      	adcs	r2, r2
 80003ae:	0903      	lsrs	r3, r0, #4
 80003b0:	428b      	cmp	r3, r1
 80003b2:	d301      	bcc.n	80003b8 <__divsi3+0x178>
 80003b4:	010b      	lsls	r3, r1, #4
 80003b6:	1ac0      	subs	r0, r0, r3
 80003b8:	4152      	adcs	r2, r2
 80003ba:	08c3      	lsrs	r3, r0, #3
 80003bc:	428b      	cmp	r3, r1
 80003be:	d301      	bcc.n	80003c4 <__divsi3+0x184>
 80003c0:	00cb      	lsls	r3, r1, #3
 80003c2:	1ac0      	subs	r0, r0, r3
 80003c4:	4152      	adcs	r2, r2
 80003c6:	0883      	lsrs	r3, r0, #2
 80003c8:	428b      	cmp	r3, r1
 80003ca:	d301      	bcc.n	80003d0 <__divsi3+0x190>
 80003cc:	008b      	lsls	r3, r1, #2
 80003ce:	1ac0      	subs	r0, r0, r3
 80003d0:	4152      	adcs	r2, r2
 80003d2:	d2d9      	bcs.n	8000388 <__divsi3+0x148>
 80003d4:	0843      	lsrs	r3, r0, #1
 80003d6:	428b      	cmp	r3, r1
 80003d8:	d301      	bcc.n	80003de <__divsi3+0x19e>
 80003da:	004b      	lsls	r3, r1, #1
 80003dc:	1ac0      	subs	r0, r0, r3
 80003de:	4152      	adcs	r2, r2
 80003e0:	1a41      	subs	r1, r0, r1
 80003e2:	d200      	bcs.n	80003e6 <__divsi3+0x1a6>
 80003e4:	4601      	mov	r1, r0
 80003e6:	4663      	mov	r3, ip
 80003e8:	4152      	adcs	r2, r2
 80003ea:	105b      	asrs	r3, r3, #1
 80003ec:	4610      	mov	r0, r2
 80003ee:	d301      	bcc.n	80003f4 <__divsi3+0x1b4>
 80003f0:	4240      	negs	r0, r0
 80003f2:	2b00      	cmp	r3, #0
 80003f4:	d500      	bpl.n	80003f8 <__divsi3+0x1b8>
 80003f6:	4249      	negs	r1, r1
 80003f8:	4770      	bx	lr
 80003fa:	4663      	mov	r3, ip
 80003fc:	105b      	asrs	r3, r3, #1
 80003fe:	d300      	bcc.n	8000402 <__divsi3+0x1c2>
 8000400:	4240      	negs	r0, r0
 8000402:	b501      	push	{r0, lr}
 8000404:	2000      	movs	r0, #0
 8000406:	f000 f805 	bl	8000414 <__aeabi_idiv0>
 800040a:	bd02      	pop	{r1, pc}

0800040c <__aeabi_idivmod>:
 800040c:	2900      	cmp	r1, #0
 800040e:	d0f8      	beq.n	8000402 <__divsi3+0x1c2>
 8000410:	e716      	b.n	8000240 <__divsi3>
 8000412:	4770      	bx	lr

08000414 <__aeabi_idiv0>:
 8000414:	4770      	bx	lr
 8000416:	46c0      	nop			; (mov r8, r8)

08000418 <__aeabi_cdrcmple>:
 8000418:	4684      	mov	ip, r0
 800041a:	1c10      	adds	r0, r2, #0
 800041c:	4662      	mov	r2, ip
 800041e:	468c      	mov	ip, r1
 8000420:	1c19      	adds	r1, r3, #0
 8000422:	4663      	mov	r3, ip
 8000424:	e000      	b.n	8000428 <__aeabi_cdcmpeq>
 8000426:	46c0      	nop			; (mov r8, r8)

08000428 <__aeabi_cdcmpeq>:
 8000428:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800042a:	f001 fe27 	bl	800207c <__ledf2>
 800042e:	2800      	cmp	r0, #0
 8000430:	d401      	bmi.n	8000436 <__aeabi_cdcmpeq+0xe>
 8000432:	2100      	movs	r1, #0
 8000434:	42c8      	cmn	r0, r1
 8000436:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

08000438 <__aeabi_dcmpeq>:
 8000438:	b510      	push	{r4, lr}
 800043a:	f001 fd7f 	bl	8001f3c <__eqdf2>
 800043e:	4240      	negs	r0, r0
 8000440:	3001      	adds	r0, #1
 8000442:	bd10      	pop	{r4, pc}

08000444 <__aeabi_dcmplt>:
 8000444:	b510      	push	{r4, lr}
 8000446:	f001 fe19 	bl	800207c <__ledf2>
 800044a:	2800      	cmp	r0, #0
 800044c:	db01      	blt.n	8000452 <__aeabi_dcmplt+0xe>
 800044e:	2000      	movs	r0, #0
 8000450:	bd10      	pop	{r4, pc}
 8000452:	2001      	movs	r0, #1
 8000454:	bd10      	pop	{r4, pc}
 8000456:	46c0      	nop			; (mov r8, r8)

08000458 <__aeabi_dcmple>:
 8000458:	b510      	push	{r4, lr}
 800045a:	f001 fe0f 	bl	800207c <__ledf2>
 800045e:	2800      	cmp	r0, #0
 8000460:	dd01      	ble.n	8000466 <__aeabi_dcmple+0xe>
 8000462:	2000      	movs	r0, #0
 8000464:	bd10      	pop	{r4, pc}
 8000466:	2001      	movs	r0, #1
 8000468:	bd10      	pop	{r4, pc}
 800046a:	46c0      	nop			; (mov r8, r8)

0800046c <__aeabi_dcmpgt>:
 800046c:	b510      	push	{r4, lr}
 800046e:	f001 fda1 	bl	8001fb4 <__gedf2>
 8000472:	2800      	cmp	r0, #0
 8000474:	dc01      	bgt.n	800047a <__aeabi_dcmpgt+0xe>
 8000476:	2000      	movs	r0, #0
 8000478:	bd10      	pop	{r4, pc}
 800047a:	2001      	movs	r0, #1
 800047c:	bd10      	pop	{r4, pc}
 800047e:	46c0      	nop			; (mov r8, r8)

08000480 <__aeabi_dcmpge>:
 8000480:	b510      	push	{r4, lr}
 8000482:	f001 fd97 	bl	8001fb4 <__gedf2>
 8000486:	2800      	cmp	r0, #0
 8000488:	da01      	bge.n	800048e <__aeabi_dcmpge+0xe>
 800048a:	2000      	movs	r0, #0
 800048c:	bd10      	pop	{r4, pc}
 800048e:	2001      	movs	r0, #1
 8000490:	bd10      	pop	{r4, pc}
 8000492:	46c0      	nop			; (mov r8, r8)

08000494 <__aeabi_cfrcmple>:
 8000494:	4684      	mov	ip, r0
 8000496:	1c08      	adds	r0, r1, #0
 8000498:	4661      	mov	r1, ip
 800049a:	e7ff      	b.n	800049c <__aeabi_cfcmpeq>

0800049c <__aeabi_cfcmpeq>:
 800049c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800049e:	f000 fb7f 	bl	8000ba0 <__lesf2>
 80004a2:	2800      	cmp	r0, #0
 80004a4:	d401      	bmi.n	80004aa <__aeabi_cfcmpeq+0xe>
 80004a6:	2100      	movs	r1, #0
 80004a8:	42c8      	cmn	r0, r1
 80004aa:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

080004ac <__aeabi_fcmpeq>:
 80004ac:	b510      	push	{r4, lr}
 80004ae:	f000 fb01 	bl	8000ab4 <__eqsf2>
 80004b2:	4240      	negs	r0, r0
 80004b4:	3001      	adds	r0, #1
 80004b6:	bd10      	pop	{r4, pc}

080004b8 <__aeabi_fcmplt>:
 80004b8:	b510      	push	{r4, lr}
 80004ba:	f000 fb71 	bl	8000ba0 <__lesf2>
 80004be:	2800      	cmp	r0, #0
 80004c0:	db01      	blt.n	80004c6 <__aeabi_fcmplt+0xe>
 80004c2:	2000      	movs	r0, #0
 80004c4:	bd10      	pop	{r4, pc}
 80004c6:	2001      	movs	r0, #1
 80004c8:	bd10      	pop	{r4, pc}
 80004ca:	46c0      	nop			; (mov r8, r8)

080004cc <__aeabi_fcmple>:
 80004cc:	b510      	push	{r4, lr}
 80004ce:	f000 fb67 	bl	8000ba0 <__lesf2>
 80004d2:	2800      	cmp	r0, #0
 80004d4:	dd01      	ble.n	80004da <__aeabi_fcmple+0xe>
 80004d6:	2000      	movs	r0, #0
 80004d8:	bd10      	pop	{r4, pc}
 80004da:	2001      	movs	r0, #1
 80004dc:	bd10      	pop	{r4, pc}
 80004de:	46c0      	nop			; (mov r8, r8)

080004e0 <__aeabi_fcmpgt>:
 80004e0:	b510      	push	{r4, lr}
 80004e2:	f000 fb0f 	bl	8000b04 <__gesf2>
 80004e6:	2800      	cmp	r0, #0
 80004e8:	dc01      	bgt.n	80004ee <__aeabi_fcmpgt+0xe>
 80004ea:	2000      	movs	r0, #0
 80004ec:	bd10      	pop	{r4, pc}
 80004ee:	2001      	movs	r0, #1
 80004f0:	bd10      	pop	{r4, pc}
 80004f2:	46c0      	nop			; (mov r8, r8)

080004f4 <__aeabi_fcmpge>:
 80004f4:	b510      	push	{r4, lr}
 80004f6:	f000 fb05 	bl	8000b04 <__gesf2>
 80004fa:	2800      	cmp	r0, #0
 80004fc:	da01      	bge.n	8000502 <__aeabi_fcmpge+0xe>
 80004fe:	2000      	movs	r0, #0
 8000500:	bd10      	pop	{r4, pc}
 8000502:	2001      	movs	r0, #1
 8000504:	bd10      	pop	{r4, pc}
 8000506:	46c0      	nop			; (mov r8, r8)

08000508 <__aeabi_lmul>:
 8000508:	b5f0      	push	{r4, r5, r6, r7, lr}
 800050a:	46ce      	mov	lr, r9
 800050c:	4647      	mov	r7, r8
 800050e:	0415      	lsls	r5, r2, #16
 8000510:	0c2d      	lsrs	r5, r5, #16
 8000512:	002e      	movs	r6, r5
 8000514:	b580      	push	{r7, lr}
 8000516:	0407      	lsls	r7, r0, #16
 8000518:	0c14      	lsrs	r4, r2, #16
 800051a:	0c3f      	lsrs	r7, r7, #16
 800051c:	4699      	mov	r9, r3
 800051e:	0c03      	lsrs	r3, r0, #16
 8000520:	437e      	muls	r6, r7
 8000522:	435d      	muls	r5, r3
 8000524:	4367      	muls	r7, r4
 8000526:	4363      	muls	r3, r4
 8000528:	197f      	adds	r7, r7, r5
 800052a:	0c34      	lsrs	r4, r6, #16
 800052c:	19e4      	adds	r4, r4, r7
 800052e:	469c      	mov	ip, r3
 8000530:	42a5      	cmp	r5, r4
 8000532:	d903      	bls.n	800053c <__aeabi_lmul+0x34>
 8000534:	2380      	movs	r3, #128	; 0x80
 8000536:	025b      	lsls	r3, r3, #9
 8000538:	4698      	mov	r8, r3
 800053a:	44c4      	add	ip, r8
 800053c:	464b      	mov	r3, r9
 800053e:	4343      	muls	r3, r0
 8000540:	4351      	muls	r1, r2
 8000542:	0c25      	lsrs	r5, r4, #16
 8000544:	0436      	lsls	r6, r6, #16
 8000546:	4465      	add	r5, ip
 8000548:	0c36      	lsrs	r6, r6, #16
 800054a:	0424      	lsls	r4, r4, #16
 800054c:	19a4      	adds	r4, r4, r6
 800054e:	195b      	adds	r3, r3, r5
 8000550:	1859      	adds	r1, r3, r1
 8000552:	0020      	movs	r0, r4
 8000554:	bc0c      	pop	{r2, r3}
 8000556:	4690      	mov	r8, r2
 8000558:	4699      	mov	r9, r3
 800055a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800055c <__aeabi_fadd>:
 800055c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800055e:	4647      	mov	r7, r8
 8000560:	46ce      	mov	lr, r9
 8000562:	0243      	lsls	r3, r0, #9
 8000564:	0a5b      	lsrs	r3, r3, #9
 8000566:	0044      	lsls	r4, r0, #1
 8000568:	0fc2      	lsrs	r2, r0, #31
 800056a:	469c      	mov	ip, r3
 800056c:	0048      	lsls	r0, r1, #1
 800056e:	00dd      	lsls	r5, r3, #3
 8000570:	024b      	lsls	r3, r1, #9
 8000572:	0e24      	lsrs	r4, r4, #24
 8000574:	0a5b      	lsrs	r3, r3, #9
 8000576:	0e00      	lsrs	r0, r0, #24
 8000578:	b580      	push	{r7, lr}
 800057a:	4698      	mov	r8, r3
 800057c:	0026      	movs	r6, r4
 800057e:	4691      	mov	r9, r2
 8000580:	0fc9      	lsrs	r1, r1, #31
 8000582:	00db      	lsls	r3, r3, #3
 8000584:	1a27      	subs	r7, r4, r0
 8000586:	428a      	cmp	r2, r1
 8000588:	d029      	beq.n	80005de <__aeabi_fadd+0x82>
 800058a:	2f00      	cmp	r7, #0
 800058c:	dd15      	ble.n	80005ba <__aeabi_fadd+0x5e>
 800058e:	2800      	cmp	r0, #0
 8000590:	d14a      	bne.n	8000628 <__aeabi_fadd+0xcc>
 8000592:	2b00      	cmp	r3, #0
 8000594:	d000      	beq.n	8000598 <__aeabi_fadd+0x3c>
 8000596:	e095      	b.n	80006c4 <__aeabi_fadd+0x168>
 8000598:	08ed      	lsrs	r5, r5, #3
 800059a:	2cff      	cmp	r4, #255	; 0xff
 800059c:	d100      	bne.n	80005a0 <__aeabi_fadd+0x44>
 800059e:	e088      	b.n	80006b2 <__aeabi_fadd+0x156>
 80005a0:	026b      	lsls	r3, r5, #9
 80005a2:	0a5b      	lsrs	r3, r3, #9
 80005a4:	b2e6      	uxtb	r6, r4
 80005a6:	025b      	lsls	r3, r3, #9
 80005a8:	05f6      	lsls	r6, r6, #23
 80005aa:	0a58      	lsrs	r0, r3, #9
 80005ac:	4330      	orrs	r0, r6
 80005ae:	07d2      	lsls	r2, r2, #31
 80005b0:	4310      	orrs	r0, r2
 80005b2:	bc0c      	pop	{r2, r3}
 80005b4:	4690      	mov	r8, r2
 80005b6:	4699      	mov	r9, r3
 80005b8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80005ba:	2f00      	cmp	r7, #0
 80005bc:	d000      	beq.n	80005c0 <__aeabi_fadd+0x64>
 80005be:	e087      	b.n	80006d0 <__aeabi_fadd+0x174>
 80005c0:	1c60      	adds	r0, r4, #1
 80005c2:	b2c0      	uxtb	r0, r0
 80005c4:	2801      	cmp	r0, #1
 80005c6:	dc00      	bgt.n	80005ca <__aeabi_fadd+0x6e>
 80005c8:	e0b6      	b.n	8000738 <__aeabi_fadd+0x1dc>
 80005ca:	1aee      	subs	r6, r5, r3
 80005cc:	0172      	lsls	r2, r6, #5
 80005ce:	d500      	bpl.n	80005d2 <__aeabi_fadd+0x76>
 80005d0:	e0c5      	b.n	800075e <__aeabi_fadd+0x202>
 80005d2:	2e00      	cmp	r6, #0
 80005d4:	d13d      	bne.n	8000652 <__aeabi_fadd+0xf6>
 80005d6:	2200      	movs	r2, #0
 80005d8:	2600      	movs	r6, #0
 80005da:	2300      	movs	r3, #0
 80005dc:	e7e3      	b.n	80005a6 <__aeabi_fadd+0x4a>
 80005de:	2f00      	cmp	r7, #0
 80005e0:	dc00      	bgt.n	80005e4 <__aeabi_fadd+0x88>
 80005e2:	e096      	b.n	8000712 <__aeabi_fadd+0x1b6>
 80005e4:	2800      	cmp	r0, #0
 80005e6:	d05d      	beq.n	80006a4 <__aeabi_fadd+0x148>
 80005e8:	2cff      	cmp	r4, #255	; 0xff
 80005ea:	d060      	beq.n	80006ae <__aeabi_fadd+0x152>
 80005ec:	2280      	movs	r2, #128	; 0x80
 80005ee:	04d2      	lsls	r2, r2, #19
 80005f0:	4313      	orrs	r3, r2
 80005f2:	2f1b      	cmp	r7, #27
 80005f4:	dd00      	ble.n	80005f8 <__aeabi_fadd+0x9c>
 80005f6:	e0ec      	b.n	80007d2 <__aeabi_fadd+0x276>
 80005f8:	2220      	movs	r2, #32
 80005fa:	1bd2      	subs	r2, r2, r7
 80005fc:	0018      	movs	r0, r3
 80005fe:	4093      	lsls	r3, r2
 8000600:	40f8      	lsrs	r0, r7
 8000602:	1e5a      	subs	r2, r3, #1
 8000604:	4193      	sbcs	r3, r2
 8000606:	4303      	orrs	r3, r0
 8000608:	18ed      	adds	r5, r5, r3
 800060a:	016b      	lsls	r3, r5, #5
 800060c:	d57b      	bpl.n	8000706 <__aeabi_fadd+0x1aa>
 800060e:	3401      	adds	r4, #1
 8000610:	2cff      	cmp	r4, #255	; 0xff
 8000612:	d100      	bne.n	8000616 <__aeabi_fadd+0xba>
 8000614:	e0b7      	b.n	8000786 <__aeabi_fadd+0x22a>
 8000616:	2201      	movs	r2, #1
 8000618:	2607      	movs	r6, #7
 800061a:	402a      	ands	r2, r5
 800061c:	086b      	lsrs	r3, r5, #1
 800061e:	4d9a      	ldr	r5, [pc, #616]	; (8000888 <__aeabi_fadd+0x32c>)
 8000620:	401d      	ands	r5, r3
 8000622:	4315      	orrs	r5, r2
 8000624:	402e      	ands	r6, r5
 8000626:	e029      	b.n	800067c <__aeabi_fadd+0x120>
 8000628:	2cff      	cmp	r4, #255	; 0xff
 800062a:	d0b5      	beq.n	8000598 <__aeabi_fadd+0x3c>
 800062c:	2280      	movs	r2, #128	; 0x80
 800062e:	04d2      	lsls	r2, r2, #19
 8000630:	4313      	orrs	r3, r2
 8000632:	2f1b      	cmp	r7, #27
 8000634:	dd00      	ble.n	8000638 <__aeabi_fadd+0xdc>
 8000636:	e0b2      	b.n	800079e <__aeabi_fadd+0x242>
 8000638:	2220      	movs	r2, #32
 800063a:	1bd2      	subs	r2, r2, r7
 800063c:	0019      	movs	r1, r3
 800063e:	4093      	lsls	r3, r2
 8000640:	40f9      	lsrs	r1, r7
 8000642:	1e5a      	subs	r2, r3, #1
 8000644:	4193      	sbcs	r3, r2
 8000646:	430b      	orrs	r3, r1
 8000648:	1aed      	subs	r5, r5, r3
 800064a:	016b      	lsls	r3, r5, #5
 800064c:	d55b      	bpl.n	8000706 <__aeabi_fadd+0x1aa>
 800064e:	01ad      	lsls	r5, r5, #6
 8000650:	09ae      	lsrs	r6, r5, #6
 8000652:	0030      	movs	r0, r6
 8000654:	f002 fc44 	bl	8002ee0 <__clzsi2>
 8000658:	3805      	subs	r0, #5
 800065a:	4086      	lsls	r6, r0
 800065c:	4284      	cmp	r4, r0
 800065e:	dc65      	bgt.n	800072c <__aeabi_fadd+0x1d0>
 8000660:	1b04      	subs	r4, r0, r4
 8000662:	0033      	movs	r3, r6
 8000664:	2020      	movs	r0, #32
 8000666:	3401      	adds	r4, #1
 8000668:	40e3      	lsrs	r3, r4
 800066a:	1b04      	subs	r4, r0, r4
 800066c:	40a6      	lsls	r6, r4
 800066e:	1e75      	subs	r5, r6, #1
 8000670:	41ae      	sbcs	r6, r5
 8000672:	4333      	orrs	r3, r6
 8000674:	2607      	movs	r6, #7
 8000676:	001d      	movs	r5, r3
 8000678:	2400      	movs	r4, #0
 800067a:	401e      	ands	r6, r3
 800067c:	2201      	movs	r2, #1
 800067e:	464b      	mov	r3, r9
 8000680:	401a      	ands	r2, r3
 8000682:	2e00      	cmp	r6, #0
 8000684:	d004      	beq.n	8000690 <__aeabi_fadd+0x134>
 8000686:	230f      	movs	r3, #15
 8000688:	402b      	ands	r3, r5
 800068a:	2b04      	cmp	r3, #4
 800068c:	d000      	beq.n	8000690 <__aeabi_fadd+0x134>
 800068e:	3504      	adds	r5, #4
 8000690:	016b      	lsls	r3, r5, #5
 8000692:	d400      	bmi.n	8000696 <__aeabi_fadd+0x13a>
 8000694:	e780      	b.n	8000598 <__aeabi_fadd+0x3c>
 8000696:	3401      	adds	r4, #1
 8000698:	b2e6      	uxtb	r6, r4
 800069a:	2cff      	cmp	r4, #255	; 0xff
 800069c:	d12f      	bne.n	80006fe <__aeabi_fadd+0x1a2>
 800069e:	26ff      	movs	r6, #255	; 0xff
 80006a0:	2300      	movs	r3, #0
 80006a2:	e780      	b.n	80005a6 <__aeabi_fadd+0x4a>
 80006a4:	2b00      	cmp	r3, #0
 80006a6:	d152      	bne.n	800074e <__aeabi_fadd+0x1f2>
 80006a8:	2cff      	cmp	r4, #255	; 0xff
 80006aa:	d000      	beq.n	80006ae <__aeabi_fadd+0x152>
 80006ac:	e774      	b.n	8000598 <__aeabi_fadd+0x3c>
 80006ae:	000a      	movs	r2, r1
 80006b0:	08ed      	lsrs	r5, r5, #3
 80006b2:	2d00      	cmp	r5, #0
 80006b4:	d0f3      	beq.n	800069e <__aeabi_fadd+0x142>
 80006b6:	2380      	movs	r3, #128	; 0x80
 80006b8:	03db      	lsls	r3, r3, #15
 80006ba:	432b      	orrs	r3, r5
 80006bc:	025b      	lsls	r3, r3, #9
 80006be:	0a5b      	lsrs	r3, r3, #9
 80006c0:	26ff      	movs	r6, #255	; 0xff
 80006c2:	e770      	b.n	80005a6 <__aeabi_fadd+0x4a>
 80006c4:	3f01      	subs	r7, #1
 80006c6:	2f00      	cmp	r7, #0
 80006c8:	d0be      	beq.n	8000648 <__aeabi_fadd+0xec>
 80006ca:	2cff      	cmp	r4, #255	; 0xff
 80006cc:	d1b1      	bne.n	8000632 <__aeabi_fadd+0xd6>
 80006ce:	e763      	b.n	8000598 <__aeabi_fadd+0x3c>
 80006d0:	2c00      	cmp	r4, #0
 80006d2:	d047      	beq.n	8000764 <__aeabi_fadd+0x208>
 80006d4:	28ff      	cmp	r0, #255	; 0xff
 80006d6:	d069      	beq.n	80007ac <__aeabi_fadd+0x250>
 80006d8:	2480      	movs	r4, #128	; 0x80
 80006da:	04e4      	lsls	r4, r4, #19
 80006dc:	427a      	negs	r2, r7
 80006de:	4325      	orrs	r5, r4
 80006e0:	2a1b      	cmp	r2, #27
 80006e2:	dd00      	ble.n	80006e6 <__aeabi_fadd+0x18a>
 80006e4:	e0c5      	b.n	8000872 <__aeabi_fadd+0x316>
 80006e6:	002c      	movs	r4, r5
 80006e8:	2620      	movs	r6, #32
 80006ea:	40d4      	lsrs	r4, r2
 80006ec:	1ab2      	subs	r2, r6, r2
 80006ee:	4095      	lsls	r5, r2
 80006f0:	1e6a      	subs	r2, r5, #1
 80006f2:	4195      	sbcs	r5, r2
 80006f4:	4325      	orrs	r5, r4
 80006f6:	1b5d      	subs	r5, r3, r5
 80006f8:	0004      	movs	r4, r0
 80006fa:	4689      	mov	r9, r1
 80006fc:	e7a5      	b.n	800064a <__aeabi_fadd+0xee>
 80006fe:	01ab      	lsls	r3, r5, #6
 8000700:	0a5b      	lsrs	r3, r3, #9
 8000702:	e750      	b.n	80005a6 <__aeabi_fadd+0x4a>
 8000704:	2400      	movs	r4, #0
 8000706:	2201      	movs	r2, #1
 8000708:	464b      	mov	r3, r9
 800070a:	401a      	ands	r2, r3
 800070c:	076b      	lsls	r3, r5, #29
 800070e:	d1ba      	bne.n	8000686 <__aeabi_fadd+0x12a>
 8000710:	e742      	b.n	8000598 <__aeabi_fadd+0x3c>
 8000712:	2f00      	cmp	r7, #0
 8000714:	d13b      	bne.n	800078e <__aeabi_fadd+0x232>
 8000716:	3401      	adds	r4, #1
 8000718:	b2e0      	uxtb	r0, r4
 800071a:	2801      	cmp	r0, #1
 800071c:	dd4a      	ble.n	80007b4 <__aeabi_fadd+0x258>
 800071e:	2cff      	cmp	r4, #255	; 0xff
 8000720:	d0bd      	beq.n	800069e <__aeabi_fadd+0x142>
 8000722:	2607      	movs	r6, #7
 8000724:	18ed      	adds	r5, r5, r3
 8000726:	086d      	lsrs	r5, r5, #1
 8000728:	402e      	ands	r6, r5
 800072a:	e7a7      	b.n	800067c <__aeabi_fadd+0x120>
 800072c:	2307      	movs	r3, #7
 800072e:	4d57      	ldr	r5, [pc, #348]	; (800088c <__aeabi_fadd+0x330>)
 8000730:	1a24      	subs	r4, r4, r0
 8000732:	4035      	ands	r5, r6
 8000734:	401e      	ands	r6, r3
 8000736:	e7a1      	b.n	800067c <__aeabi_fadd+0x120>
 8000738:	2c00      	cmp	r4, #0
 800073a:	d11b      	bne.n	8000774 <__aeabi_fadd+0x218>
 800073c:	2d00      	cmp	r5, #0
 800073e:	d16e      	bne.n	800081e <__aeabi_fadd+0x2c2>
 8000740:	2b00      	cmp	r3, #0
 8000742:	d100      	bne.n	8000746 <__aeabi_fadd+0x1ea>
 8000744:	e09a      	b.n	800087c <__aeabi_fadd+0x320>
 8000746:	000a      	movs	r2, r1
 8000748:	001d      	movs	r5, r3
 800074a:	003c      	movs	r4, r7
 800074c:	e724      	b.n	8000598 <__aeabi_fadd+0x3c>
 800074e:	3f01      	subs	r7, #1
 8000750:	2f00      	cmp	r7, #0
 8000752:	d100      	bne.n	8000756 <__aeabi_fadd+0x1fa>
 8000754:	e758      	b.n	8000608 <__aeabi_fadd+0xac>
 8000756:	2cff      	cmp	r4, #255	; 0xff
 8000758:	d000      	beq.n	800075c <__aeabi_fadd+0x200>
 800075a:	e74a      	b.n	80005f2 <__aeabi_fadd+0x96>
 800075c:	e7a7      	b.n	80006ae <__aeabi_fadd+0x152>
 800075e:	1b5e      	subs	r6, r3, r5
 8000760:	4689      	mov	r9, r1
 8000762:	e776      	b.n	8000652 <__aeabi_fadd+0xf6>
 8000764:	2d00      	cmp	r5, #0
 8000766:	d11c      	bne.n	80007a2 <__aeabi_fadd+0x246>
 8000768:	000a      	movs	r2, r1
 800076a:	28ff      	cmp	r0, #255	; 0xff
 800076c:	d01f      	beq.n	80007ae <__aeabi_fadd+0x252>
 800076e:	0004      	movs	r4, r0
 8000770:	001d      	movs	r5, r3
 8000772:	e711      	b.n	8000598 <__aeabi_fadd+0x3c>
 8000774:	2d00      	cmp	r5, #0
 8000776:	d15d      	bne.n	8000834 <__aeabi_fadd+0x2d8>
 8000778:	2b00      	cmp	r3, #0
 800077a:	d117      	bne.n	80007ac <__aeabi_fadd+0x250>
 800077c:	2380      	movs	r3, #128	; 0x80
 800077e:	2200      	movs	r2, #0
 8000780:	03db      	lsls	r3, r3, #15
 8000782:	26ff      	movs	r6, #255	; 0xff
 8000784:	e70f      	b.n	80005a6 <__aeabi_fadd+0x4a>
 8000786:	000a      	movs	r2, r1
 8000788:	26ff      	movs	r6, #255	; 0xff
 800078a:	2300      	movs	r3, #0
 800078c:	e70b      	b.n	80005a6 <__aeabi_fadd+0x4a>
 800078e:	2c00      	cmp	r4, #0
 8000790:	d121      	bne.n	80007d6 <__aeabi_fadd+0x27a>
 8000792:	2d00      	cmp	r5, #0
 8000794:	d166      	bne.n	8000864 <__aeabi_fadd+0x308>
 8000796:	28ff      	cmp	r0, #255	; 0xff
 8000798:	d1e9      	bne.n	800076e <__aeabi_fadd+0x212>
 800079a:	001d      	movs	r5, r3
 800079c:	e787      	b.n	80006ae <__aeabi_fadd+0x152>
 800079e:	2301      	movs	r3, #1
 80007a0:	e752      	b.n	8000648 <__aeabi_fadd+0xec>
 80007a2:	1c7a      	adds	r2, r7, #1
 80007a4:	d0a7      	beq.n	80006f6 <__aeabi_fadd+0x19a>
 80007a6:	43fa      	mvns	r2, r7
 80007a8:	28ff      	cmp	r0, #255	; 0xff
 80007aa:	d199      	bne.n	80006e0 <__aeabi_fadd+0x184>
 80007ac:	000a      	movs	r2, r1
 80007ae:	001d      	movs	r5, r3
 80007b0:	24ff      	movs	r4, #255	; 0xff
 80007b2:	e6f1      	b.n	8000598 <__aeabi_fadd+0x3c>
 80007b4:	2e00      	cmp	r6, #0
 80007b6:	d121      	bne.n	80007fc <__aeabi_fadd+0x2a0>
 80007b8:	2d00      	cmp	r5, #0
 80007ba:	d04f      	beq.n	800085c <__aeabi_fadd+0x300>
 80007bc:	2b00      	cmp	r3, #0
 80007be:	d04c      	beq.n	800085a <__aeabi_fadd+0x2fe>
 80007c0:	18ed      	adds	r5, r5, r3
 80007c2:	016b      	lsls	r3, r5, #5
 80007c4:	d59e      	bpl.n	8000704 <__aeabi_fadd+0x1a8>
 80007c6:	4b31      	ldr	r3, [pc, #196]	; (800088c <__aeabi_fadd+0x330>)
 80007c8:	3607      	adds	r6, #7
 80007ca:	402e      	ands	r6, r5
 80007cc:	2401      	movs	r4, #1
 80007ce:	401d      	ands	r5, r3
 80007d0:	e754      	b.n	800067c <__aeabi_fadd+0x120>
 80007d2:	2301      	movs	r3, #1
 80007d4:	e718      	b.n	8000608 <__aeabi_fadd+0xac>
 80007d6:	28ff      	cmp	r0, #255	; 0xff
 80007d8:	d0df      	beq.n	800079a <__aeabi_fadd+0x23e>
 80007da:	2480      	movs	r4, #128	; 0x80
 80007dc:	04e4      	lsls	r4, r4, #19
 80007de:	427f      	negs	r7, r7
 80007e0:	4325      	orrs	r5, r4
 80007e2:	2f1b      	cmp	r7, #27
 80007e4:	dc4d      	bgt.n	8000882 <__aeabi_fadd+0x326>
 80007e6:	2620      	movs	r6, #32
 80007e8:	1bf6      	subs	r6, r6, r7
 80007ea:	002c      	movs	r4, r5
 80007ec:	40b5      	lsls	r5, r6
 80007ee:	40fc      	lsrs	r4, r7
 80007f0:	1e6a      	subs	r2, r5, #1
 80007f2:	4195      	sbcs	r5, r2
 80007f4:	4325      	orrs	r5, r4
 80007f6:	18ed      	adds	r5, r5, r3
 80007f8:	0004      	movs	r4, r0
 80007fa:	e706      	b.n	800060a <__aeabi_fadd+0xae>
 80007fc:	2d00      	cmp	r5, #0
 80007fe:	d0cc      	beq.n	800079a <__aeabi_fadd+0x23e>
 8000800:	2b00      	cmp	r3, #0
 8000802:	d100      	bne.n	8000806 <__aeabi_fadd+0x2aa>
 8000804:	e753      	b.n	80006ae <__aeabi_fadd+0x152>
 8000806:	2180      	movs	r1, #128	; 0x80
 8000808:	4660      	mov	r0, ip
 800080a:	03c9      	lsls	r1, r1, #15
 800080c:	4208      	tst	r0, r1
 800080e:	d003      	beq.n	8000818 <__aeabi_fadd+0x2bc>
 8000810:	4640      	mov	r0, r8
 8000812:	4208      	tst	r0, r1
 8000814:	d100      	bne.n	8000818 <__aeabi_fadd+0x2bc>
 8000816:	001d      	movs	r5, r3
 8000818:	2101      	movs	r1, #1
 800081a:	4011      	ands	r1, r2
 800081c:	e747      	b.n	80006ae <__aeabi_fadd+0x152>
 800081e:	2b00      	cmp	r3, #0
 8000820:	d100      	bne.n	8000824 <__aeabi_fadd+0x2c8>
 8000822:	e6b9      	b.n	8000598 <__aeabi_fadd+0x3c>
 8000824:	1aea      	subs	r2, r5, r3
 8000826:	0150      	lsls	r0, r2, #5
 8000828:	d525      	bpl.n	8000876 <__aeabi_fadd+0x31a>
 800082a:	2607      	movs	r6, #7
 800082c:	1b5d      	subs	r5, r3, r5
 800082e:	402e      	ands	r6, r5
 8000830:	4689      	mov	r9, r1
 8000832:	e723      	b.n	800067c <__aeabi_fadd+0x120>
 8000834:	24ff      	movs	r4, #255	; 0xff
 8000836:	2b00      	cmp	r3, #0
 8000838:	d100      	bne.n	800083c <__aeabi_fadd+0x2e0>
 800083a:	e6ad      	b.n	8000598 <__aeabi_fadd+0x3c>
 800083c:	2280      	movs	r2, #128	; 0x80
 800083e:	4660      	mov	r0, ip
 8000840:	03d2      	lsls	r2, r2, #15
 8000842:	4210      	tst	r0, r2
 8000844:	d004      	beq.n	8000850 <__aeabi_fadd+0x2f4>
 8000846:	4640      	mov	r0, r8
 8000848:	4210      	tst	r0, r2
 800084a:	d101      	bne.n	8000850 <__aeabi_fadd+0x2f4>
 800084c:	001d      	movs	r5, r3
 800084e:	4689      	mov	r9, r1
 8000850:	2201      	movs	r2, #1
 8000852:	464b      	mov	r3, r9
 8000854:	24ff      	movs	r4, #255	; 0xff
 8000856:	401a      	ands	r2, r3
 8000858:	e69e      	b.n	8000598 <__aeabi_fadd+0x3c>
 800085a:	002b      	movs	r3, r5
 800085c:	08dd      	lsrs	r5, r3, #3
 800085e:	000a      	movs	r2, r1
 8000860:	2400      	movs	r4, #0
 8000862:	e69d      	b.n	80005a0 <__aeabi_fadd+0x44>
 8000864:	1c7a      	adds	r2, r7, #1
 8000866:	d0c6      	beq.n	80007f6 <__aeabi_fadd+0x29a>
 8000868:	43ff      	mvns	r7, r7
 800086a:	28ff      	cmp	r0, #255	; 0xff
 800086c:	d1b9      	bne.n	80007e2 <__aeabi_fadd+0x286>
 800086e:	001d      	movs	r5, r3
 8000870:	e71d      	b.n	80006ae <__aeabi_fadd+0x152>
 8000872:	2501      	movs	r5, #1
 8000874:	e73f      	b.n	80006f6 <__aeabi_fadd+0x19a>
 8000876:	1e15      	subs	r5, r2, #0
 8000878:	d000      	beq.n	800087c <__aeabi_fadd+0x320>
 800087a:	e744      	b.n	8000706 <__aeabi_fadd+0x1aa>
 800087c:	2200      	movs	r2, #0
 800087e:	2300      	movs	r3, #0
 8000880:	e691      	b.n	80005a6 <__aeabi_fadd+0x4a>
 8000882:	2501      	movs	r5, #1
 8000884:	e7b7      	b.n	80007f6 <__aeabi_fadd+0x29a>
 8000886:	46c0      	nop			; (mov r8, r8)
 8000888:	7dffffff 	.word	0x7dffffff
 800088c:	fbffffff 	.word	0xfbffffff

08000890 <__aeabi_fdiv>:
 8000890:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000892:	4657      	mov	r7, sl
 8000894:	464e      	mov	r6, r9
 8000896:	4645      	mov	r5, r8
 8000898:	46de      	mov	lr, fp
 800089a:	0244      	lsls	r4, r0, #9
 800089c:	b5e0      	push	{r5, r6, r7, lr}
 800089e:	0046      	lsls	r6, r0, #1
 80008a0:	4688      	mov	r8, r1
 80008a2:	0a64      	lsrs	r4, r4, #9
 80008a4:	0e36      	lsrs	r6, r6, #24
 80008a6:	0fc7      	lsrs	r7, r0, #31
 80008a8:	2e00      	cmp	r6, #0
 80008aa:	d063      	beq.n	8000974 <__aeabi_fdiv+0xe4>
 80008ac:	2eff      	cmp	r6, #255	; 0xff
 80008ae:	d024      	beq.n	80008fa <__aeabi_fdiv+0x6a>
 80008b0:	2380      	movs	r3, #128	; 0x80
 80008b2:	00e4      	lsls	r4, r4, #3
 80008b4:	04db      	lsls	r3, r3, #19
 80008b6:	431c      	orrs	r4, r3
 80008b8:	2300      	movs	r3, #0
 80008ba:	4699      	mov	r9, r3
 80008bc:	469b      	mov	fp, r3
 80008be:	3e7f      	subs	r6, #127	; 0x7f
 80008c0:	4643      	mov	r3, r8
 80008c2:	4642      	mov	r2, r8
 80008c4:	025d      	lsls	r5, r3, #9
 80008c6:	0fd2      	lsrs	r2, r2, #31
 80008c8:	005b      	lsls	r3, r3, #1
 80008ca:	0a6d      	lsrs	r5, r5, #9
 80008cc:	0e1b      	lsrs	r3, r3, #24
 80008ce:	4690      	mov	r8, r2
 80008d0:	4692      	mov	sl, r2
 80008d2:	d065      	beq.n	80009a0 <__aeabi_fdiv+0x110>
 80008d4:	2bff      	cmp	r3, #255	; 0xff
 80008d6:	d055      	beq.n	8000984 <__aeabi_fdiv+0xf4>
 80008d8:	2280      	movs	r2, #128	; 0x80
 80008da:	2100      	movs	r1, #0
 80008dc:	00ed      	lsls	r5, r5, #3
 80008de:	04d2      	lsls	r2, r2, #19
 80008e0:	3b7f      	subs	r3, #127	; 0x7f
 80008e2:	4315      	orrs	r5, r2
 80008e4:	1af6      	subs	r6, r6, r3
 80008e6:	4643      	mov	r3, r8
 80008e8:	464a      	mov	r2, r9
 80008ea:	407b      	eors	r3, r7
 80008ec:	2a0f      	cmp	r2, #15
 80008ee:	d900      	bls.n	80008f2 <__aeabi_fdiv+0x62>
 80008f0:	e08d      	b.n	8000a0e <__aeabi_fdiv+0x17e>
 80008f2:	486d      	ldr	r0, [pc, #436]	; (8000aa8 <__aeabi_fdiv+0x218>)
 80008f4:	0092      	lsls	r2, r2, #2
 80008f6:	5882      	ldr	r2, [r0, r2]
 80008f8:	4697      	mov	pc, r2
 80008fa:	2c00      	cmp	r4, #0
 80008fc:	d154      	bne.n	80009a8 <__aeabi_fdiv+0x118>
 80008fe:	2308      	movs	r3, #8
 8000900:	4699      	mov	r9, r3
 8000902:	3b06      	subs	r3, #6
 8000904:	26ff      	movs	r6, #255	; 0xff
 8000906:	469b      	mov	fp, r3
 8000908:	e7da      	b.n	80008c0 <__aeabi_fdiv+0x30>
 800090a:	2500      	movs	r5, #0
 800090c:	4653      	mov	r3, sl
 800090e:	2902      	cmp	r1, #2
 8000910:	d01b      	beq.n	800094a <__aeabi_fdiv+0xba>
 8000912:	2903      	cmp	r1, #3
 8000914:	d100      	bne.n	8000918 <__aeabi_fdiv+0x88>
 8000916:	e0bf      	b.n	8000a98 <__aeabi_fdiv+0x208>
 8000918:	2901      	cmp	r1, #1
 800091a:	d028      	beq.n	800096e <__aeabi_fdiv+0xde>
 800091c:	0030      	movs	r0, r6
 800091e:	307f      	adds	r0, #127	; 0x7f
 8000920:	2800      	cmp	r0, #0
 8000922:	dd20      	ble.n	8000966 <__aeabi_fdiv+0xd6>
 8000924:	076a      	lsls	r2, r5, #29
 8000926:	d004      	beq.n	8000932 <__aeabi_fdiv+0xa2>
 8000928:	220f      	movs	r2, #15
 800092a:	402a      	ands	r2, r5
 800092c:	2a04      	cmp	r2, #4
 800092e:	d000      	beq.n	8000932 <__aeabi_fdiv+0xa2>
 8000930:	3504      	adds	r5, #4
 8000932:	012a      	lsls	r2, r5, #4
 8000934:	d503      	bpl.n	800093e <__aeabi_fdiv+0xae>
 8000936:	0030      	movs	r0, r6
 8000938:	4a5c      	ldr	r2, [pc, #368]	; (8000aac <__aeabi_fdiv+0x21c>)
 800093a:	3080      	adds	r0, #128	; 0x80
 800093c:	4015      	ands	r5, r2
 800093e:	28fe      	cmp	r0, #254	; 0xfe
 8000940:	dc03      	bgt.n	800094a <__aeabi_fdiv+0xba>
 8000942:	01ac      	lsls	r4, r5, #6
 8000944:	0a64      	lsrs	r4, r4, #9
 8000946:	b2c2      	uxtb	r2, r0
 8000948:	e001      	b.n	800094e <__aeabi_fdiv+0xbe>
 800094a:	22ff      	movs	r2, #255	; 0xff
 800094c:	2400      	movs	r4, #0
 800094e:	0264      	lsls	r4, r4, #9
 8000950:	05d2      	lsls	r2, r2, #23
 8000952:	0a60      	lsrs	r0, r4, #9
 8000954:	07db      	lsls	r3, r3, #31
 8000956:	4310      	orrs	r0, r2
 8000958:	4318      	orrs	r0, r3
 800095a:	bc3c      	pop	{r2, r3, r4, r5}
 800095c:	4690      	mov	r8, r2
 800095e:	4699      	mov	r9, r3
 8000960:	46a2      	mov	sl, r4
 8000962:	46ab      	mov	fp, r5
 8000964:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000966:	2201      	movs	r2, #1
 8000968:	1a10      	subs	r0, r2, r0
 800096a:	281b      	cmp	r0, #27
 800096c:	dd7c      	ble.n	8000a68 <__aeabi_fdiv+0x1d8>
 800096e:	2200      	movs	r2, #0
 8000970:	2400      	movs	r4, #0
 8000972:	e7ec      	b.n	800094e <__aeabi_fdiv+0xbe>
 8000974:	2c00      	cmp	r4, #0
 8000976:	d11d      	bne.n	80009b4 <__aeabi_fdiv+0x124>
 8000978:	2304      	movs	r3, #4
 800097a:	4699      	mov	r9, r3
 800097c:	3b03      	subs	r3, #3
 800097e:	2600      	movs	r6, #0
 8000980:	469b      	mov	fp, r3
 8000982:	e79d      	b.n	80008c0 <__aeabi_fdiv+0x30>
 8000984:	3eff      	subs	r6, #255	; 0xff
 8000986:	2d00      	cmp	r5, #0
 8000988:	d120      	bne.n	80009cc <__aeabi_fdiv+0x13c>
 800098a:	2102      	movs	r1, #2
 800098c:	4643      	mov	r3, r8
 800098e:	464a      	mov	r2, r9
 8000990:	407b      	eors	r3, r7
 8000992:	430a      	orrs	r2, r1
 8000994:	2a0f      	cmp	r2, #15
 8000996:	d8d8      	bhi.n	800094a <__aeabi_fdiv+0xba>
 8000998:	4845      	ldr	r0, [pc, #276]	; (8000ab0 <__aeabi_fdiv+0x220>)
 800099a:	0092      	lsls	r2, r2, #2
 800099c:	5882      	ldr	r2, [r0, r2]
 800099e:	4697      	mov	pc, r2
 80009a0:	2d00      	cmp	r5, #0
 80009a2:	d119      	bne.n	80009d8 <__aeabi_fdiv+0x148>
 80009a4:	2101      	movs	r1, #1
 80009a6:	e7f1      	b.n	800098c <__aeabi_fdiv+0xfc>
 80009a8:	230c      	movs	r3, #12
 80009aa:	4699      	mov	r9, r3
 80009ac:	3b09      	subs	r3, #9
 80009ae:	26ff      	movs	r6, #255	; 0xff
 80009b0:	469b      	mov	fp, r3
 80009b2:	e785      	b.n	80008c0 <__aeabi_fdiv+0x30>
 80009b4:	0020      	movs	r0, r4
 80009b6:	f002 fa93 	bl	8002ee0 <__clzsi2>
 80009ba:	2676      	movs	r6, #118	; 0x76
 80009bc:	1f43      	subs	r3, r0, #5
 80009be:	409c      	lsls	r4, r3
 80009c0:	2300      	movs	r3, #0
 80009c2:	4276      	negs	r6, r6
 80009c4:	1a36      	subs	r6, r6, r0
 80009c6:	4699      	mov	r9, r3
 80009c8:	469b      	mov	fp, r3
 80009ca:	e779      	b.n	80008c0 <__aeabi_fdiv+0x30>
 80009cc:	464a      	mov	r2, r9
 80009ce:	2303      	movs	r3, #3
 80009d0:	431a      	orrs	r2, r3
 80009d2:	4691      	mov	r9, r2
 80009d4:	2103      	movs	r1, #3
 80009d6:	e786      	b.n	80008e6 <__aeabi_fdiv+0x56>
 80009d8:	0028      	movs	r0, r5
 80009da:	f002 fa81 	bl	8002ee0 <__clzsi2>
 80009de:	1f43      	subs	r3, r0, #5
 80009e0:	1836      	adds	r6, r6, r0
 80009e2:	409d      	lsls	r5, r3
 80009e4:	3676      	adds	r6, #118	; 0x76
 80009e6:	2100      	movs	r1, #0
 80009e8:	e77d      	b.n	80008e6 <__aeabi_fdiv+0x56>
 80009ea:	2480      	movs	r4, #128	; 0x80
 80009ec:	2300      	movs	r3, #0
 80009ee:	03e4      	lsls	r4, r4, #15
 80009f0:	22ff      	movs	r2, #255	; 0xff
 80009f2:	e7ac      	b.n	800094e <__aeabi_fdiv+0xbe>
 80009f4:	2500      	movs	r5, #0
 80009f6:	2380      	movs	r3, #128	; 0x80
 80009f8:	03db      	lsls	r3, r3, #15
 80009fa:	421c      	tst	r4, r3
 80009fc:	d028      	beq.n	8000a50 <__aeabi_fdiv+0x1c0>
 80009fe:	421d      	tst	r5, r3
 8000a00:	d126      	bne.n	8000a50 <__aeabi_fdiv+0x1c0>
 8000a02:	432b      	orrs	r3, r5
 8000a04:	025c      	lsls	r4, r3, #9
 8000a06:	0a64      	lsrs	r4, r4, #9
 8000a08:	4643      	mov	r3, r8
 8000a0a:	22ff      	movs	r2, #255	; 0xff
 8000a0c:	e79f      	b.n	800094e <__aeabi_fdiv+0xbe>
 8000a0e:	0162      	lsls	r2, r4, #5
 8000a10:	016c      	lsls	r4, r5, #5
 8000a12:	42a2      	cmp	r2, r4
 8000a14:	d224      	bcs.n	8000a60 <__aeabi_fdiv+0x1d0>
 8000a16:	211b      	movs	r1, #27
 8000a18:	2500      	movs	r5, #0
 8000a1a:	3e01      	subs	r6, #1
 8000a1c:	2701      	movs	r7, #1
 8000a1e:	0010      	movs	r0, r2
 8000a20:	006d      	lsls	r5, r5, #1
 8000a22:	0052      	lsls	r2, r2, #1
 8000a24:	2800      	cmp	r0, #0
 8000a26:	db01      	blt.n	8000a2c <__aeabi_fdiv+0x19c>
 8000a28:	4294      	cmp	r4, r2
 8000a2a:	d801      	bhi.n	8000a30 <__aeabi_fdiv+0x1a0>
 8000a2c:	1b12      	subs	r2, r2, r4
 8000a2e:	433d      	orrs	r5, r7
 8000a30:	3901      	subs	r1, #1
 8000a32:	2900      	cmp	r1, #0
 8000a34:	d1f3      	bne.n	8000a1e <__aeabi_fdiv+0x18e>
 8000a36:	0014      	movs	r4, r2
 8000a38:	1e62      	subs	r2, r4, #1
 8000a3a:	4194      	sbcs	r4, r2
 8000a3c:	4325      	orrs	r5, r4
 8000a3e:	e76d      	b.n	800091c <__aeabi_fdiv+0x8c>
 8000a40:	46ba      	mov	sl, r7
 8000a42:	4659      	mov	r1, fp
 8000a44:	0025      	movs	r5, r4
 8000a46:	4653      	mov	r3, sl
 8000a48:	2902      	cmp	r1, #2
 8000a4a:	d000      	beq.n	8000a4e <__aeabi_fdiv+0x1be>
 8000a4c:	e761      	b.n	8000912 <__aeabi_fdiv+0x82>
 8000a4e:	e77c      	b.n	800094a <__aeabi_fdiv+0xba>
 8000a50:	2380      	movs	r3, #128	; 0x80
 8000a52:	03db      	lsls	r3, r3, #15
 8000a54:	431c      	orrs	r4, r3
 8000a56:	0264      	lsls	r4, r4, #9
 8000a58:	0a64      	lsrs	r4, r4, #9
 8000a5a:	003b      	movs	r3, r7
 8000a5c:	22ff      	movs	r2, #255	; 0xff
 8000a5e:	e776      	b.n	800094e <__aeabi_fdiv+0xbe>
 8000a60:	1b12      	subs	r2, r2, r4
 8000a62:	211a      	movs	r1, #26
 8000a64:	2501      	movs	r5, #1
 8000a66:	e7d9      	b.n	8000a1c <__aeabi_fdiv+0x18c>
 8000a68:	369e      	adds	r6, #158	; 0x9e
 8000a6a:	002a      	movs	r2, r5
 8000a6c:	40b5      	lsls	r5, r6
 8000a6e:	002c      	movs	r4, r5
 8000a70:	40c2      	lsrs	r2, r0
 8000a72:	1e65      	subs	r5, r4, #1
 8000a74:	41ac      	sbcs	r4, r5
 8000a76:	4314      	orrs	r4, r2
 8000a78:	0762      	lsls	r2, r4, #29
 8000a7a:	d004      	beq.n	8000a86 <__aeabi_fdiv+0x1f6>
 8000a7c:	220f      	movs	r2, #15
 8000a7e:	4022      	ands	r2, r4
 8000a80:	2a04      	cmp	r2, #4
 8000a82:	d000      	beq.n	8000a86 <__aeabi_fdiv+0x1f6>
 8000a84:	3404      	adds	r4, #4
 8000a86:	0162      	lsls	r2, r4, #5
 8000a88:	d403      	bmi.n	8000a92 <__aeabi_fdiv+0x202>
 8000a8a:	01a4      	lsls	r4, r4, #6
 8000a8c:	0a64      	lsrs	r4, r4, #9
 8000a8e:	2200      	movs	r2, #0
 8000a90:	e75d      	b.n	800094e <__aeabi_fdiv+0xbe>
 8000a92:	2201      	movs	r2, #1
 8000a94:	2400      	movs	r4, #0
 8000a96:	e75a      	b.n	800094e <__aeabi_fdiv+0xbe>
 8000a98:	2480      	movs	r4, #128	; 0x80
 8000a9a:	03e4      	lsls	r4, r4, #15
 8000a9c:	432c      	orrs	r4, r5
 8000a9e:	0264      	lsls	r4, r4, #9
 8000aa0:	0a64      	lsrs	r4, r4, #9
 8000aa2:	22ff      	movs	r2, #255	; 0xff
 8000aa4:	e753      	b.n	800094e <__aeabi_fdiv+0xbe>
 8000aa6:	46c0      	nop			; (mov r8, r8)
 8000aa8:	08007320 	.word	0x08007320
 8000aac:	f7ffffff 	.word	0xf7ffffff
 8000ab0:	08007360 	.word	0x08007360

08000ab4 <__eqsf2>:
 8000ab4:	b570      	push	{r4, r5, r6, lr}
 8000ab6:	0042      	lsls	r2, r0, #1
 8000ab8:	024e      	lsls	r6, r1, #9
 8000aba:	004c      	lsls	r4, r1, #1
 8000abc:	0245      	lsls	r5, r0, #9
 8000abe:	0a6d      	lsrs	r5, r5, #9
 8000ac0:	0e12      	lsrs	r2, r2, #24
 8000ac2:	0fc3      	lsrs	r3, r0, #31
 8000ac4:	0a76      	lsrs	r6, r6, #9
 8000ac6:	0e24      	lsrs	r4, r4, #24
 8000ac8:	0fc9      	lsrs	r1, r1, #31
 8000aca:	2aff      	cmp	r2, #255	; 0xff
 8000acc:	d00f      	beq.n	8000aee <__eqsf2+0x3a>
 8000ace:	2cff      	cmp	r4, #255	; 0xff
 8000ad0:	d011      	beq.n	8000af6 <__eqsf2+0x42>
 8000ad2:	2001      	movs	r0, #1
 8000ad4:	42a2      	cmp	r2, r4
 8000ad6:	d000      	beq.n	8000ada <__eqsf2+0x26>
 8000ad8:	bd70      	pop	{r4, r5, r6, pc}
 8000ada:	42b5      	cmp	r5, r6
 8000adc:	d1fc      	bne.n	8000ad8 <__eqsf2+0x24>
 8000ade:	428b      	cmp	r3, r1
 8000ae0:	d00d      	beq.n	8000afe <__eqsf2+0x4a>
 8000ae2:	2a00      	cmp	r2, #0
 8000ae4:	d1f8      	bne.n	8000ad8 <__eqsf2+0x24>
 8000ae6:	0028      	movs	r0, r5
 8000ae8:	1e45      	subs	r5, r0, #1
 8000aea:	41a8      	sbcs	r0, r5
 8000aec:	e7f4      	b.n	8000ad8 <__eqsf2+0x24>
 8000aee:	2001      	movs	r0, #1
 8000af0:	2d00      	cmp	r5, #0
 8000af2:	d1f1      	bne.n	8000ad8 <__eqsf2+0x24>
 8000af4:	e7eb      	b.n	8000ace <__eqsf2+0x1a>
 8000af6:	2001      	movs	r0, #1
 8000af8:	2e00      	cmp	r6, #0
 8000afa:	d1ed      	bne.n	8000ad8 <__eqsf2+0x24>
 8000afc:	e7e9      	b.n	8000ad2 <__eqsf2+0x1e>
 8000afe:	2000      	movs	r0, #0
 8000b00:	e7ea      	b.n	8000ad8 <__eqsf2+0x24>
 8000b02:	46c0      	nop			; (mov r8, r8)

08000b04 <__gesf2>:
 8000b04:	b570      	push	{r4, r5, r6, lr}
 8000b06:	004a      	lsls	r2, r1, #1
 8000b08:	024e      	lsls	r6, r1, #9
 8000b0a:	0245      	lsls	r5, r0, #9
 8000b0c:	0044      	lsls	r4, r0, #1
 8000b0e:	0a6d      	lsrs	r5, r5, #9
 8000b10:	0e24      	lsrs	r4, r4, #24
 8000b12:	0fc3      	lsrs	r3, r0, #31
 8000b14:	0a76      	lsrs	r6, r6, #9
 8000b16:	0e12      	lsrs	r2, r2, #24
 8000b18:	0fc9      	lsrs	r1, r1, #31
 8000b1a:	2cff      	cmp	r4, #255	; 0xff
 8000b1c:	d015      	beq.n	8000b4a <__gesf2+0x46>
 8000b1e:	2aff      	cmp	r2, #255	; 0xff
 8000b20:	d00e      	beq.n	8000b40 <__gesf2+0x3c>
 8000b22:	2c00      	cmp	r4, #0
 8000b24:	d115      	bne.n	8000b52 <__gesf2+0x4e>
 8000b26:	2a00      	cmp	r2, #0
 8000b28:	d101      	bne.n	8000b2e <__gesf2+0x2a>
 8000b2a:	2e00      	cmp	r6, #0
 8000b2c:	d01c      	beq.n	8000b68 <__gesf2+0x64>
 8000b2e:	2d00      	cmp	r5, #0
 8000b30:	d014      	beq.n	8000b5c <__gesf2+0x58>
 8000b32:	428b      	cmp	r3, r1
 8000b34:	d027      	beq.n	8000b86 <__gesf2+0x82>
 8000b36:	2002      	movs	r0, #2
 8000b38:	3b01      	subs	r3, #1
 8000b3a:	4018      	ands	r0, r3
 8000b3c:	3801      	subs	r0, #1
 8000b3e:	bd70      	pop	{r4, r5, r6, pc}
 8000b40:	2e00      	cmp	r6, #0
 8000b42:	d0ee      	beq.n	8000b22 <__gesf2+0x1e>
 8000b44:	2002      	movs	r0, #2
 8000b46:	4240      	negs	r0, r0
 8000b48:	e7f9      	b.n	8000b3e <__gesf2+0x3a>
 8000b4a:	2d00      	cmp	r5, #0
 8000b4c:	d1fa      	bne.n	8000b44 <__gesf2+0x40>
 8000b4e:	2aff      	cmp	r2, #255	; 0xff
 8000b50:	d00e      	beq.n	8000b70 <__gesf2+0x6c>
 8000b52:	2a00      	cmp	r2, #0
 8000b54:	d10e      	bne.n	8000b74 <__gesf2+0x70>
 8000b56:	2e00      	cmp	r6, #0
 8000b58:	d0ed      	beq.n	8000b36 <__gesf2+0x32>
 8000b5a:	e00b      	b.n	8000b74 <__gesf2+0x70>
 8000b5c:	2301      	movs	r3, #1
 8000b5e:	3901      	subs	r1, #1
 8000b60:	4399      	bics	r1, r3
 8000b62:	0008      	movs	r0, r1
 8000b64:	3001      	adds	r0, #1
 8000b66:	e7ea      	b.n	8000b3e <__gesf2+0x3a>
 8000b68:	2000      	movs	r0, #0
 8000b6a:	2d00      	cmp	r5, #0
 8000b6c:	d0e7      	beq.n	8000b3e <__gesf2+0x3a>
 8000b6e:	e7e2      	b.n	8000b36 <__gesf2+0x32>
 8000b70:	2e00      	cmp	r6, #0
 8000b72:	d1e7      	bne.n	8000b44 <__gesf2+0x40>
 8000b74:	428b      	cmp	r3, r1
 8000b76:	d1de      	bne.n	8000b36 <__gesf2+0x32>
 8000b78:	4294      	cmp	r4, r2
 8000b7a:	dd05      	ble.n	8000b88 <__gesf2+0x84>
 8000b7c:	2102      	movs	r1, #2
 8000b7e:	1e58      	subs	r0, r3, #1
 8000b80:	4008      	ands	r0, r1
 8000b82:	3801      	subs	r0, #1
 8000b84:	e7db      	b.n	8000b3e <__gesf2+0x3a>
 8000b86:	2400      	movs	r4, #0
 8000b88:	42a2      	cmp	r2, r4
 8000b8a:	dc04      	bgt.n	8000b96 <__gesf2+0x92>
 8000b8c:	42b5      	cmp	r5, r6
 8000b8e:	d8d2      	bhi.n	8000b36 <__gesf2+0x32>
 8000b90:	2000      	movs	r0, #0
 8000b92:	42b5      	cmp	r5, r6
 8000b94:	d2d3      	bcs.n	8000b3e <__gesf2+0x3a>
 8000b96:	1e58      	subs	r0, r3, #1
 8000b98:	2301      	movs	r3, #1
 8000b9a:	4398      	bics	r0, r3
 8000b9c:	3001      	adds	r0, #1
 8000b9e:	e7ce      	b.n	8000b3e <__gesf2+0x3a>

08000ba0 <__lesf2>:
 8000ba0:	b530      	push	{r4, r5, lr}
 8000ba2:	0042      	lsls	r2, r0, #1
 8000ba4:	0244      	lsls	r4, r0, #9
 8000ba6:	024d      	lsls	r5, r1, #9
 8000ba8:	0fc3      	lsrs	r3, r0, #31
 8000baa:	0048      	lsls	r0, r1, #1
 8000bac:	0a64      	lsrs	r4, r4, #9
 8000bae:	0e12      	lsrs	r2, r2, #24
 8000bb0:	0a6d      	lsrs	r5, r5, #9
 8000bb2:	0e00      	lsrs	r0, r0, #24
 8000bb4:	0fc9      	lsrs	r1, r1, #31
 8000bb6:	2aff      	cmp	r2, #255	; 0xff
 8000bb8:	d012      	beq.n	8000be0 <__lesf2+0x40>
 8000bba:	28ff      	cmp	r0, #255	; 0xff
 8000bbc:	d00c      	beq.n	8000bd8 <__lesf2+0x38>
 8000bbe:	2a00      	cmp	r2, #0
 8000bc0:	d112      	bne.n	8000be8 <__lesf2+0x48>
 8000bc2:	2800      	cmp	r0, #0
 8000bc4:	d119      	bne.n	8000bfa <__lesf2+0x5a>
 8000bc6:	2d00      	cmp	r5, #0
 8000bc8:	d117      	bne.n	8000bfa <__lesf2+0x5a>
 8000bca:	2c00      	cmp	r4, #0
 8000bcc:	d02b      	beq.n	8000c26 <__lesf2+0x86>
 8000bce:	2002      	movs	r0, #2
 8000bd0:	3b01      	subs	r3, #1
 8000bd2:	4018      	ands	r0, r3
 8000bd4:	3801      	subs	r0, #1
 8000bd6:	e026      	b.n	8000c26 <__lesf2+0x86>
 8000bd8:	2d00      	cmp	r5, #0
 8000bda:	d0f0      	beq.n	8000bbe <__lesf2+0x1e>
 8000bdc:	2002      	movs	r0, #2
 8000bde:	e022      	b.n	8000c26 <__lesf2+0x86>
 8000be0:	2c00      	cmp	r4, #0
 8000be2:	d1fb      	bne.n	8000bdc <__lesf2+0x3c>
 8000be4:	28ff      	cmp	r0, #255	; 0xff
 8000be6:	d01f      	beq.n	8000c28 <__lesf2+0x88>
 8000be8:	2800      	cmp	r0, #0
 8000bea:	d11f      	bne.n	8000c2c <__lesf2+0x8c>
 8000bec:	2d00      	cmp	r5, #0
 8000bee:	d11d      	bne.n	8000c2c <__lesf2+0x8c>
 8000bf0:	2002      	movs	r0, #2
 8000bf2:	3b01      	subs	r3, #1
 8000bf4:	4018      	ands	r0, r3
 8000bf6:	3801      	subs	r0, #1
 8000bf8:	e015      	b.n	8000c26 <__lesf2+0x86>
 8000bfa:	2c00      	cmp	r4, #0
 8000bfc:	d00e      	beq.n	8000c1c <__lesf2+0x7c>
 8000bfe:	428b      	cmp	r3, r1
 8000c00:	d1e5      	bne.n	8000bce <__lesf2+0x2e>
 8000c02:	2200      	movs	r2, #0
 8000c04:	4290      	cmp	r0, r2
 8000c06:	dc04      	bgt.n	8000c12 <__lesf2+0x72>
 8000c08:	42ac      	cmp	r4, r5
 8000c0a:	d8e0      	bhi.n	8000bce <__lesf2+0x2e>
 8000c0c:	2000      	movs	r0, #0
 8000c0e:	42ac      	cmp	r4, r5
 8000c10:	d209      	bcs.n	8000c26 <__lesf2+0x86>
 8000c12:	1e58      	subs	r0, r3, #1
 8000c14:	2301      	movs	r3, #1
 8000c16:	4398      	bics	r0, r3
 8000c18:	3001      	adds	r0, #1
 8000c1a:	e004      	b.n	8000c26 <__lesf2+0x86>
 8000c1c:	2301      	movs	r3, #1
 8000c1e:	3901      	subs	r1, #1
 8000c20:	4399      	bics	r1, r3
 8000c22:	0008      	movs	r0, r1
 8000c24:	3001      	adds	r0, #1
 8000c26:	bd30      	pop	{r4, r5, pc}
 8000c28:	2d00      	cmp	r5, #0
 8000c2a:	d1d7      	bne.n	8000bdc <__lesf2+0x3c>
 8000c2c:	428b      	cmp	r3, r1
 8000c2e:	d1ce      	bne.n	8000bce <__lesf2+0x2e>
 8000c30:	4282      	cmp	r2, r0
 8000c32:	dde7      	ble.n	8000c04 <__lesf2+0x64>
 8000c34:	2102      	movs	r1, #2
 8000c36:	1e58      	subs	r0, r3, #1
 8000c38:	4008      	ands	r0, r1
 8000c3a:	3801      	subs	r0, #1
 8000c3c:	e7f3      	b.n	8000c26 <__lesf2+0x86>
 8000c3e:	46c0      	nop			; (mov r8, r8)

08000c40 <__aeabi_fmul>:
 8000c40:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000c42:	464e      	mov	r6, r9
 8000c44:	4657      	mov	r7, sl
 8000c46:	4645      	mov	r5, r8
 8000c48:	46de      	mov	lr, fp
 8000c4a:	b5e0      	push	{r5, r6, r7, lr}
 8000c4c:	0243      	lsls	r3, r0, #9
 8000c4e:	0a5b      	lsrs	r3, r3, #9
 8000c50:	0045      	lsls	r5, r0, #1
 8000c52:	b083      	sub	sp, #12
 8000c54:	1c0f      	adds	r7, r1, #0
 8000c56:	4699      	mov	r9, r3
 8000c58:	0e2d      	lsrs	r5, r5, #24
 8000c5a:	0fc6      	lsrs	r6, r0, #31
 8000c5c:	2d00      	cmp	r5, #0
 8000c5e:	d057      	beq.n	8000d10 <__aeabi_fmul+0xd0>
 8000c60:	2dff      	cmp	r5, #255	; 0xff
 8000c62:	d024      	beq.n	8000cae <__aeabi_fmul+0x6e>
 8000c64:	2080      	movs	r0, #128	; 0x80
 8000c66:	00db      	lsls	r3, r3, #3
 8000c68:	04c0      	lsls	r0, r0, #19
 8000c6a:	4318      	orrs	r0, r3
 8000c6c:	2300      	movs	r3, #0
 8000c6e:	4681      	mov	r9, r0
 8000c70:	469a      	mov	sl, r3
 8000c72:	469b      	mov	fp, r3
 8000c74:	3d7f      	subs	r5, #127	; 0x7f
 8000c76:	027c      	lsls	r4, r7, #9
 8000c78:	007a      	lsls	r2, r7, #1
 8000c7a:	0ffb      	lsrs	r3, r7, #31
 8000c7c:	0a64      	lsrs	r4, r4, #9
 8000c7e:	0e12      	lsrs	r2, r2, #24
 8000c80:	4698      	mov	r8, r3
 8000c82:	d023      	beq.n	8000ccc <__aeabi_fmul+0x8c>
 8000c84:	2aff      	cmp	r2, #255	; 0xff
 8000c86:	d04b      	beq.n	8000d20 <__aeabi_fmul+0xe0>
 8000c88:	00e3      	lsls	r3, r4, #3
 8000c8a:	2480      	movs	r4, #128	; 0x80
 8000c8c:	2000      	movs	r0, #0
 8000c8e:	04e4      	lsls	r4, r4, #19
 8000c90:	3a7f      	subs	r2, #127	; 0x7f
 8000c92:	431c      	orrs	r4, r3
 8000c94:	18ad      	adds	r5, r5, r2
 8000c96:	1c6b      	adds	r3, r5, #1
 8000c98:	4647      	mov	r7, r8
 8000c9a:	9301      	str	r3, [sp, #4]
 8000c9c:	4653      	mov	r3, sl
 8000c9e:	4077      	eors	r7, r6
 8000ca0:	003a      	movs	r2, r7
 8000ca2:	2b0f      	cmp	r3, #15
 8000ca4:	d848      	bhi.n	8000d38 <__aeabi_fmul+0xf8>
 8000ca6:	497d      	ldr	r1, [pc, #500]	; (8000e9c <__aeabi_fmul+0x25c>)
 8000ca8:	009b      	lsls	r3, r3, #2
 8000caa:	58cb      	ldr	r3, [r1, r3]
 8000cac:	469f      	mov	pc, r3
 8000cae:	2b00      	cmp	r3, #0
 8000cb0:	d000      	beq.n	8000cb4 <__aeabi_fmul+0x74>
 8000cb2:	e085      	b.n	8000dc0 <__aeabi_fmul+0x180>
 8000cb4:	3308      	adds	r3, #8
 8000cb6:	469a      	mov	sl, r3
 8000cb8:	3b06      	subs	r3, #6
 8000cba:	469b      	mov	fp, r3
 8000cbc:	027c      	lsls	r4, r7, #9
 8000cbe:	007a      	lsls	r2, r7, #1
 8000cc0:	0ffb      	lsrs	r3, r7, #31
 8000cc2:	25ff      	movs	r5, #255	; 0xff
 8000cc4:	0a64      	lsrs	r4, r4, #9
 8000cc6:	0e12      	lsrs	r2, r2, #24
 8000cc8:	4698      	mov	r8, r3
 8000cca:	d1db      	bne.n	8000c84 <__aeabi_fmul+0x44>
 8000ccc:	2c00      	cmp	r4, #0
 8000cce:	d000      	beq.n	8000cd2 <__aeabi_fmul+0x92>
 8000cd0:	e090      	b.n	8000df4 <__aeabi_fmul+0x1b4>
 8000cd2:	4652      	mov	r2, sl
 8000cd4:	2301      	movs	r3, #1
 8000cd6:	431a      	orrs	r2, r3
 8000cd8:	4692      	mov	sl, r2
 8000cda:	2001      	movs	r0, #1
 8000cdc:	e7db      	b.n	8000c96 <__aeabi_fmul+0x56>
 8000cde:	464c      	mov	r4, r9
 8000ce0:	4658      	mov	r0, fp
 8000ce2:	0017      	movs	r7, r2
 8000ce4:	2802      	cmp	r0, #2
 8000ce6:	d024      	beq.n	8000d32 <__aeabi_fmul+0xf2>
 8000ce8:	2803      	cmp	r0, #3
 8000cea:	d100      	bne.n	8000cee <__aeabi_fmul+0xae>
 8000cec:	e0cf      	b.n	8000e8e <__aeabi_fmul+0x24e>
 8000cee:	2200      	movs	r2, #0
 8000cf0:	2300      	movs	r3, #0
 8000cf2:	2801      	cmp	r0, #1
 8000cf4:	d14d      	bne.n	8000d92 <__aeabi_fmul+0x152>
 8000cf6:	0258      	lsls	r0, r3, #9
 8000cf8:	05d2      	lsls	r2, r2, #23
 8000cfa:	0a40      	lsrs	r0, r0, #9
 8000cfc:	07ff      	lsls	r7, r7, #31
 8000cfe:	4310      	orrs	r0, r2
 8000d00:	4338      	orrs	r0, r7
 8000d02:	b003      	add	sp, #12
 8000d04:	bc3c      	pop	{r2, r3, r4, r5}
 8000d06:	4690      	mov	r8, r2
 8000d08:	4699      	mov	r9, r3
 8000d0a:	46a2      	mov	sl, r4
 8000d0c:	46ab      	mov	fp, r5
 8000d0e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000d10:	2b00      	cmp	r3, #0
 8000d12:	d15b      	bne.n	8000dcc <__aeabi_fmul+0x18c>
 8000d14:	2304      	movs	r3, #4
 8000d16:	469a      	mov	sl, r3
 8000d18:	3b03      	subs	r3, #3
 8000d1a:	2500      	movs	r5, #0
 8000d1c:	469b      	mov	fp, r3
 8000d1e:	e7aa      	b.n	8000c76 <__aeabi_fmul+0x36>
 8000d20:	35ff      	adds	r5, #255	; 0xff
 8000d22:	2c00      	cmp	r4, #0
 8000d24:	d160      	bne.n	8000de8 <__aeabi_fmul+0x1a8>
 8000d26:	4652      	mov	r2, sl
 8000d28:	2302      	movs	r3, #2
 8000d2a:	431a      	orrs	r2, r3
 8000d2c:	4692      	mov	sl, r2
 8000d2e:	2002      	movs	r0, #2
 8000d30:	e7b1      	b.n	8000c96 <__aeabi_fmul+0x56>
 8000d32:	22ff      	movs	r2, #255	; 0xff
 8000d34:	2300      	movs	r3, #0
 8000d36:	e7de      	b.n	8000cf6 <__aeabi_fmul+0xb6>
 8000d38:	464b      	mov	r3, r9
 8000d3a:	0c1b      	lsrs	r3, r3, #16
 8000d3c:	469c      	mov	ip, r3
 8000d3e:	464b      	mov	r3, r9
 8000d40:	0426      	lsls	r6, r4, #16
 8000d42:	0c36      	lsrs	r6, r6, #16
 8000d44:	0418      	lsls	r0, r3, #16
 8000d46:	4661      	mov	r1, ip
 8000d48:	0033      	movs	r3, r6
 8000d4a:	0c22      	lsrs	r2, r4, #16
 8000d4c:	4664      	mov	r4, ip
 8000d4e:	0c00      	lsrs	r0, r0, #16
 8000d50:	4343      	muls	r3, r0
 8000d52:	434e      	muls	r6, r1
 8000d54:	4350      	muls	r0, r2
 8000d56:	4354      	muls	r4, r2
 8000d58:	1980      	adds	r0, r0, r6
 8000d5a:	0c1a      	lsrs	r2, r3, #16
 8000d5c:	1812      	adds	r2, r2, r0
 8000d5e:	4296      	cmp	r6, r2
 8000d60:	d903      	bls.n	8000d6a <__aeabi_fmul+0x12a>
 8000d62:	2180      	movs	r1, #128	; 0x80
 8000d64:	0249      	lsls	r1, r1, #9
 8000d66:	468c      	mov	ip, r1
 8000d68:	4464      	add	r4, ip
 8000d6a:	041b      	lsls	r3, r3, #16
 8000d6c:	0c1b      	lsrs	r3, r3, #16
 8000d6e:	0410      	lsls	r0, r2, #16
 8000d70:	18c0      	adds	r0, r0, r3
 8000d72:	0183      	lsls	r3, r0, #6
 8000d74:	1e5e      	subs	r6, r3, #1
 8000d76:	41b3      	sbcs	r3, r6
 8000d78:	0e80      	lsrs	r0, r0, #26
 8000d7a:	4318      	orrs	r0, r3
 8000d7c:	0c13      	lsrs	r3, r2, #16
 8000d7e:	191b      	adds	r3, r3, r4
 8000d80:	019b      	lsls	r3, r3, #6
 8000d82:	4303      	orrs	r3, r0
 8000d84:	001c      	movs	r4, r3
 8000d86:	0123      	lsls	r3, r4, #4
 8000d88:	d579      	bpl.n	8000e7e <__aeabi_fmul+0x23e>
 8000d8a:	2301      	movs	r3, #1
 8000d8c:	0862      	lsrs	r2, r4, #1
 8000d8e:	401c      	ands	r4, r3
 8000d90:	4314      	orrs	r4, r2
 8000d92:	9a01      	ldr	r2, [sp, #4]
 8000d94:	327f      	adds	r2, #127	; 0x7f
 8000d96:	2a00      	cmp	r2, #0
 8000d98:	dd4d      	ble.n	8000e36 <__aeabi_fmul+0x1f6>
 8000d9a:	0763      	lsls	r3, r4, #29
 8000d9c:	d004      	beq.n	8000da8 <__aeabi_fmul+0x168>
 8000d9e:	230f      	movs	r3, #15
 8000da0:	4023      	ands	r3, r4
 8000da2:	2b04      	cmp	r3, #4
 8000da4:	d000      	beq.n	8000da8 <__aeabi_fmul+0x168>
 8000da6:	3404      	adds	r4, #4
 8000da8:	0123      	lsls	r3, r4, #4
 8000daa:	d503      	bpl.n	8000db4 <__aeabi_fmul+0x174>
 8000dac:	4b3c      	ldr	r3, [pc, #240]	; (8000ea0 <__aeabi_fmul+0x260>)
 8000dae:	9a01      	ldr	r2, [sp, #4]
 8000db0:	401c      	ands	r4, r3
 8000db2:	3280      	adds	r2, #128	; 0x80
 8000db4:	2afe      	cmp	r2, #254	; 0xfe
 8000db6:	dcbc      	bgt.n	8000d32 <__aeabi_fmul+0xf2>
 8000db8:	01a3      	lsls	r3, r4, #6
 8000dba:	0a5b      	lsrs	r3, r3, #9
 8000dbc:	b2d2      	uxtb	r2, r2
 8000dbe:	e79a      	b.n	8000cf6 <__aeabi_fmul+0xb6>
 8000dc0:	230c      	movs	r3, #12
 8000dc2:	469a      	mov	sl, r3
 8000dc4:	3b09      	subs	r3, #9
 8000dc6:	25ff      	movs	r5, #255	; 0xff
 8000dc8:	469b      	mov	fp, r3
 8000dca:	e754      	b.n	8000c76 <__aeabi_fmul+0x36>
 8000dcc:	0018      	movs	r0, r3
 8000dce:	f002 f887 	bl	8002ee0 <__clzsi2>
 8000dd2:	464a      	mov	r2, r9
 8000dd4:	1f43      	subs	r3, r0, #5
 8000dd6:	2576      	movs	r5, #118	; 0x76
 8000dd8:	409a      	lsls	r2, r3
 8000dda:	2300      	movs	r3, #0
 8000ddc:	426d      	negs	r5, r5
 8000dde:	4691      	mov	r9, r2
 8000de0:	1a2d      	subs	r5, r5, r0
 8000de2:	469a      	mov	sl, r3
 8000de4:	469b      	mov	fp, r3
 8000de6:	e746      	b.n	8000c76 <__aeabi_fmul+0x36>
 8000de8:	4652      	mov	r2, sl
 8000dea:	2303      	movs	r3, #3
 8000dec:	431a      	orrs	r2, r3
 8000dee:	4692      	mov	sl, r2
 8000df0:	2003      	movs	r0, #3
 8000df2:	e750      	b.n	8000c96 <__aeabi_fmul+0x56>
 8000df4:	0020      	movs	r0, r4
 8000df6:	f002 f873 	bl	8002ee0 <__clzsi2>
 8000dfa:	1f43      	subs	r3, r0, #5
 8000dfc:	1a2d      	subs	r5, r5, r0
 8000dfe:	409c      	lsls	r4, r3
 8000e00:	3d76      	subs	r5, #118	; 0x76
 8000e02:	2000      	movs	r0, #0
 8000e04:	e747      	b.n	8000c96 <__aeabi_fmul+0x56>
 8000e06:	2380      	movs	r3, #128	; 0x80
 8000e08:	2700      	movs	r7, #0
 8000e0a:	03db      	lsls	r3, r3, #15
 8000e0c:	22ff      	movs	r2, #255	; 0xff
 8000e0e:	e772      	b.n	8000cf6 <__aeabi_fmul+0xb6>
 8000e10:	4642      	mov	r2, r8
 8000e12:	e766      	b.n	8000ce2 <__aeabi_fmul+0xa2>
 8000e14:	464c      	mov	r4, r9
 8000e16:	0032      	movs	r2, r6
 8000e18:	4658      	mov	r0, fp
 8000e1a:	e762      	b.n	8000ce2 <__aeabi_fmul+0xa2>
 8000e1c:	2380      	movs	r3, #128	; 0x80
 8000e1e:	464a      	mov	r2, r9
 8000e20:	03db      	lsls	r3, r3, #15
 8000e22:	421a      	tst	r2, r3
 8000e24:	d022      	beq.n	8000e6c <__aeabi_fmul+0x22c>
 8000e26:	421c      	tst	r4, r3
 8000e28:	d120      	bne.n	8000e6c <__aeabi_fmul+0x22c>
 8000e2a:	4323      	orrs	r3, r4
 8000e2c:	025b      	lsls	r3, r3, #9
 8000e2e:	0a5b      	lsrs	r3, r3, #9
 8000e30:	4647      	mov	r7, r8
 8000e32:	22ff      	movs	r2, #255	; 0xff
 8000e34:	e75f      	b.n	8000cf6 <__aeabi_fmul+0xb6>
 8000e36:	2301      	movs	r3, #1
 8000e38:	1a9a      	subs	r2, r3, r2
 8000e3a:	2a1b      	cmp	r2, #27
 8000e3c:	dc21      	bgt.n	8000e82 <__aeabi_fmul+0x242>
 8000e3e:	0023      	movs	r3, r4
 8000e40:	9901      	ldr	r1, [sp, #4]
 8000e42:	40d3      	lsrs	r3, r2
 8000e44:	319e      	adds	r1, #158	; 0x9e
 8000e46:	408c      	lsls	r4, r1
 8000e48:	001a      	movs	r2, r3
 8000e4a:	0023      	movs	r3, r4
 8000e4c:	1e5c      	subs	r4, r3, #1
 8000e4e:	41a3      	sbcs	r3, r4
 8000e50:	4313      	orrs	r3, r2
 8000e52:	075a      	lsls	r2, r3, #29
 8000e54:	d004      	beq.n	8000e60 <__aeabi_fmul+0x220>
 8000e56:	220f      	movs	r2, #15
 8000e58:	401a      	ands	r2, r3
 8000e5a:	2a04      	cmp	r2, #4
 8000e5c:	d000      	beq.n	8000e60 <__aeabi_fmul+0x220>
 8000e5e:	3304      	adds	r3, #4
 8000e60:	015a      	lsls	r2, r3, #5
 8000e62:	d411      	bmi.n	8000e88 <__aeabi_fmul+0x248>
 8000e64:	019b      	lsls	r3, r3, #6
 8000e66:	0a5b      	lsrs	r3, r3, #9
 8000e68:	2200      	movs	r2, #0
 8000e6a:	e744      	b.n	8000cf6 <__aeabi_fmul+0xb6>
 8000e6c:	2380      	movs	r3, #128	; 0x80
 8000e6e:	464a      	mov	r2, r9
 8000e70:	03db      	lsls	r3, r3, #15
 8000e72:	4313      	orrs	r3, r2
 8000e74:	025b      	lsls	r3, r3, #9
 8000e76:	0a5b      	lsrs	r3, r3, #9
 8000e78:	0037      	movs	r7, r6
 8000e7a:	22ff      	movs	r2, #255	; 0xff
 8000e7c:	e73b      	b.n	8000cf6 <__aeabi_fmul+0xb6>
 8000e7e:	9501      	str	r5, [sp, #4]
 8000e80:	e787      	b.n	8000d92 <__aeabi_fmul+0x152>
 8000e82:	2200      	movs	r2, #0
 8000e84:	2300      	movs	r3, #0
 8000e86:	e736      	b.n	8000cf6 <__aeabi_fmul+0xb6>
 8000e88:	2201      	movs	r2, #1
 8000e8a:	2300      	movs	r3, #0
 8000e8c:	e733      	b.n	8000cf6 <__aeabi_fmul+0xb6>
 8000e8e:	2380      	movs	r3, #128	; 0x80
 8000e90:	03db      	lsls	r3, r3, #15
 8000e92:	4323      	orrs	r3, r4
 8000e94:	025b      	lsls	r3, r3, #9
 8000e96:	0a5b      	lsrs	r3, r3, #9
 8000e98:	22ff      	movs	r2, #255	; 0xff
 8000e9a:	e72c      	b.n	8000cf6 <__aeabi_fmul+0xb6>
 8000e9c:	080073a0 	.word	0x080073a0
 8000ea0:	f7ffffff 	.word	0xf7ffffff

08000ea4 <__aeabi_fsub>:
 8000ea4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000ea6:	4647      	mov	r7, r8
 8000ea8:	46ce      	mov	lr, r9
 8000eaa:	0044      	lsls	r4, r0, #1
 8000eac:	0fc2      	lsrs	r2, r0, #31
 8000eae:	b580      	push	{r7, lr}
 8000eb0:	0247      	lsls	r7, r0, #9
 8000eb2:	0248      	lsls	r0, r1, #9
 8000eb4:	0a40      	lsrs	r0, r0, #9
 8000eb6:	4684      	mov	ip, r0
 8000eb8:	4666      	mov	r6, ip
 8000eba:	0048      	lsls	r0, r1, #1
 8000ebc:	0a7f      	lsrs	r7, r7, #9
 8000ebe:	0e24      	lsrs	r4, r4, #24
 8000ec0:	00f6      	lsls	r6, r6, #3
 8000ec2:	0025      	movs	r5, r4
 8000ec4:	4690      	mov	r8, r2
 8000ec6:	00fb      	lsls	r3, r7, #3
 8000ec8:	0e00      	lsrs	r0, r0, #24
 8000eca:	0fc9      	lsrs	r1, r1, #31
 8000ecc:	46b1      	mov	r9, r6
 8000ece:	28ff      	cmp	r0, #255	; 0xff
 8000ed0:	d100      	bne.n	8000ed4 <__aeabi_fsub+0x30>
 8000ed2:	e085      	b.n	8000fe0 <__aeabi_fsub+0x13c>
 8000ed4:	2601      	movs	r6, #1
 8000ed6:	4071      	eors	r1, r6
 8000ed8:	1a26      	subs	r6, r4, r0
 8000eda:	4291      	cmp	r1, r2
 8000edc:	d057      	beq.n	8000f8e <__aeabi_fsub+0xea>
 8000ede:	2e00      	cmp	r6, #0
 8000ee0:	dd43      	ble.n	8000f6a <__aeabi_fsub+0xc6>
 8000ee2:	2800      	cmp	r0, #0
 8000ee4:	d000      	beq.n	8000ee8 <__aeabi_fsub+0x44>
 8000ee6:	e07f      	b.n	8000fe8 <__aeabi_fsub+0x144>
 8000ee8:	4649      	mov	r1, r9
 8000eea:	2900      	cmp	r1, #0
 8000eec:	d100      	bne.n	8000ef0 <__aeabi_fsub+0x4c>
 8000eee:	e0aa      	b.n	8001046 <__aeabi_fsub+0x1a2>
 8000ef0:	3e01      	subs	r6, #1
 8000ef2:	2e00      	cmp	r6, #0
 8000ef4:	d000      	beq.n	8000ef8 <__aeabi_fsub+0x54>
 8000ef6:	e0f7      	b.n	80010e8 <__aeabi_fsub+0x244>
 8000ef8:	1a5b      	subs	r3, r3, r1
 8000efa:	015a      	lsls	r2, r3, #5
 8000efc:	d400      	bmi.n	8000f00 <__aeabi_fsub+0x5c>
 8000efe:	e08b      	b.n	8001018 <__aeabi_fsub+0x174>
 8000f00:	019b      	lsls	r3, r3, #6
 8000f02:	099c      	lsrs	r4, r3, #6
 8000f04:	0020      	movs	r0, r4
 8000f06:	f001 ffeb 	bl	8002ee0 <__clzsi2>
 8000f0a:	3805      	subs	r0, #5
 8000f0c:	4084      	lsls	r4, r0
 8000f0e:	4285      	cmp	r5, r0
 8000f10:	dd00      	ble.n	8000f14 <__aeabi_fsub+0x70>
 8000f12:	e0d3      	b.n	80010bc <__aeabi_fsub+0x218>
 8000f14:	1b45      	subs	r5, r0, r5
 8000f16:	0023      	movs	r3, r4
 8000f18:	2020      	movs	r0, #32
 8000f1a:	3501      	adds	r5, #1
 8000f1c:	40eb      	lsrs	r3, r5
 8000f1e:	1b45      	subs	r5, r0, r5
 8000f20:	40ac      	lsls	r4, r5
 8000f22:	1e62      	subs	r2, r4, #1
 8000f24:	4194      	sbcs	r4, r2
 8000f26:	4323      	orrs	r3, r4
 8000f28:	2407      	movs	r4, #7
 8000f2a:	2500      	movs	r5, #0
 8000f2c:	401c      	ands	r4, r3
 8000f2e:	2201      	movs	r2, #1
 8000f30:	4641      	mov	r1, r8
 8000f32:	400a      	ands	r2, r1
 8000f34:	2c00      	cmp	r4, #0
 8000f36:	d004      	beq.n	8000f42 <__aeabi_fsub+0x9e>
 8000f38:	210f      	movs	r1, #15
 8000f3a:	4019      	ands	r1, r3
 8000f3c:	2904      	cmp	r1, #4
 8000f3e:	d000      	beq.n	8000f42 <__aeabi_fsub+0x9e>
 8000f40:	3304      	adds	r3, #4
 8000f42:	0159      	lsls	r1, r3, #5
 8000f44:	d400      	bmi.n	8000f48 <__aeabi_fsub+0xa4>
 8000f46:	e080      	b.n	800104a <__aeabi_fsub+0x1a6>
 8000f48:	3501      	adds	r5, #1
 8000f4a:	b2ec      	uxtb	r4, r5
 8000f4c:	2dff      	cmp	r5, #255	; 0xff
 8000f4e:	d000      	beq.n	8000f52 <__aeabi_fsub+0xae>
 8000f50:	e0a3      	b.n	800109a <__aeabi_fsub+0x1f6>
 8000f52:	24ff      	movs	r4, #255	; 0xff
 8000f54:	2300      	movs	r3, #0
 8000f56:	025b      	lsls	r3, r3, #9
 8000f58:	05e4      	lsls	r4, r4, #23
 8000f5a:	0a58      	lsrs	r0, r3, #9
 8000f5c:	07d2      	lsls	r2, r2, #31
 8000f5e:	4320      	orrs	r0, r4
 8000f60:	4310      	orrs	r0, r2
 8000f62:	bc0c      	pop	{r2, r3}
 8000f64:	4690      	mov	r8, r2
 8000f66:	4699      	mov	r9, r3
 8000f68:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000f6a:	2e00      	cmp	r6, #0
 8000f6c:	d174      	bne.n	8001058 <__aeabi_fsub+0x1b4>
 8000f6e:	1c60      	adds	r0, r4, #1
 8000f70:	b2c0      	uxtb	r0, r0
 8000f72:	2801      	cmp	r0, #1
 8000f74:	dc00      	bgt.n	8000f78 <__aeabi_fsub+0xd4>
 8000f76:	e0a7      	b.n	80010c8 <__aeabi_fsub+0x224>
 8000f78:	464a      	mov	r2, r9
 8000f7a:	1a9c      	subs	r4, r3, r2
 8000f7c:	0162      	lsls	r2, r4, #5
 8000f7e:	d500      	bpl.n	8000f82 <__aeabi_fsub+0xde>
 8000f80:	e0b6      	b.n	80010f0 <__aeabi_fsub+0x24c>
 8000f82:	2c00      	cmp	r4, #0
 8000f84:	d1be      	bne.n	8000f04 <__aeabi_fsub+0x60>
 8000f86:	2200      	movs	r2, #0
 8000f88:	2400      	movs	r4, #0
 8000f8a:	2300      	movs	r3, #0
 8000f8c:	e7e3      	b.n	8000f56 <__aeabi_fsub+0xb2>
 8000f8e:	2e00      	cmp	r6, #0
 8000f90:	dc00      	bgt.n	8000f94 <__aeabi_fsub+0xf0>
 8000f92:	e085      	b.n	80010a0 <__aeabi_fsub+0x1fc>
 8000f94:	2800      	cmp	r0, #0
 8000f96:	d046      	beq.n	8001026 <__aeabi_fsub+0x182>
 8000f98:	2cff      	cmp	r4, #255	; 0xff
 8000f9a:	d049      	beq.n	8001030 <__aeabi_fsub+0x18c>
 8000f9c:	2280      	movs	r2, #128	; 0x80
 8000f9e:	4648      	mov	r0, r9
 8000fa0:	04d2      	lsls	r2, r2, #19
 8000fa2:	4310      	orrs	r0, r2
 8000fa4:	4681      	mov	r9, r0
 8000fa6:	2201      	movs	r2, #1
 8000fa8:	2e1b      	cmp	r6, #27
 8000faa:	dc09      	bgt.n	8000fc0 <__aeabi_fsub+0x11c>
 8000fac:	2020      	movs	r0, #32
 8000fae:	464c      	mov	r4, r9
 8000fb0:	1b80      	subs	r0, r0, r6
 8000fb2:	4084      	lsls	r4, r0
 8000fb4:	464a      	mov	r2, r9
 8000fb6:	0020      	movs	r0, r4
 8000fb8:	40f2      	lsrs	r2, r6
 8000fba:	1e44      	subs	r4, r0, #1
 8000fbc:	41a0      	sbcs	r0, r4
 8000fbe:	4302      	orrs	r2, r0
 8000fc0:	189b      	adds	r3, r3, r2
 8000fc2:	015a      	lsls	r2, r3, #5
 8000fc4:	d528      	bpl.n	8001018 <__aeabi_fsub+0x174>
 8000fc6:	3501      	adds	r5, #1
 8000fc8:	2dff      	cmp	r5, #255	; 0xff
 8000fca:	d100      	bne.n	8000fce <__aeabi_fsub+0x12a>
 8000fcc:	e0a8      	b.n	8001120 <__aeabi_fsub+0x27c>
 8000fce:	2201      	movs	r2, #1
 8000fd0:	2407      	movs	r4, #7
 8000fd2:	4994      	ldr	r1, [pc, #592]	; (8001224 <__aeabi_fsub+0x380>)
 8000fd4:	401a      	ands	r2, r3
 8000fd6:	085b      	lsrs	r3, r3, #1
 8000fd8:	400b      	ands	r3, r1
 8000fda:	4313      	orrs	r3, r2
 8000fdc:	401c      	ands	r4, r3
 8000fde:	e7a6      	b.n	8000f2e <__aeabi_fsub+0x8a>
 8000fe0:	2e00      	cmp	r6, #0
 8000fe2:	d000      	beq.n	8000fe6 <__aeabi_fsub+0x142>
 8000fe4:	e778      	b.n	8000ed8 <__aeabi_fsub+0x34>
 8000fe6:	e775      	b.n	8000ed4 <__aeabi_fsub+0x30>
 8000fe8:	2cff      	cmp	r4, #255	; 0xff
 8000fea:	d054      	beq.n	8001096 <__aeabi_fsub+0x1f2>
 8000fec:	2280      	movs	r2, #128	; 0x80
 8000fee:	4649      	mov	r1, r9
 8000ff0:	04d2      	lsls	r2, r2, #19
 8000ff2:	4311      	orrs	r1, r2
 8000ff4:	4689      	mov	r9, r1
 8000ff6:	2201      	movs	r2, #1
 8000ff8:	2e1b      	cmp	r6, #27
 8000ffa:	dc09      	bgt.n	8001010 <__aeabi_fsub+0x16c>
 8000ffc:	2120      	movs	r1, #32
 8000ffe:	4648      	mov	r0, r9
 8001000:	1b89      	subs	r1, r1, r6
 8001002:	4088      	lsls	r0, r1
 8001004:	464a      	mov	r2, r9
 8001006:	0001      	movs	r1, r0
 8001008:	40f2      	lsrs	r2, r6
 800100a:	1e48      	subs	r0, r1, #1
 800100c:	4181      	sbcs	r1, r0
 800100e:	430a      	orrs	r2, r1
 8001010:	1a9b      	subs	r3, r3, r2
 8001012:	015a      	lsls	r2, r3, #5
 8001014:	d500      	bpl.n	8001018 <__aeabi_fsub+0x174>
 8001016:	e773      	b.n	8000f00 <__aeabi_fsub+0x5c>
 8001018:	2201      	movs	r2, #1
 800101a:	4641      	mov	r1, r8
 800101c:	400a      	ands	r2, r1
 800101e:	0759      	lsls	r1, r3, #29
 8001020:	d000      	beq.n	8001024 <__aeabi_fsub+0x180>
 8001022:	e789      	b.n	8000f38 <__aeabi_fsub+0x94>
 8001024:	e011      	b.n	800104a <__aeabi_fsub+0x1a6>
 8001026:	4648      	mov	r0, r9
 8001028:	2800      	cmp	r0, #0
 800102a:	d158      	bne.n	80010de <__aeabi_fsub+0x23a>
 800102c:	2cff      	cmp	r4, #255	; 0xff
 800102e:	d10c      	bne.n	800104a <__aeabi_fsub+0x1a6>
 8001030:	08db      	lsrs	r3, r3, #3
 8001032:	2b00      	cmp	r3, #0
 8001034:	d100      	bne.n	8001038 <__aeabi_fsub+0x194>
 8001036:	e78c      	b.n	8000f52 <__aeabi_fsub+0xae>
 8001038:	2080      	movs	r0, #128	; 0x80
 800103a:	03c0      	lsls	r0, r0, #15
 800103c:	4303      	orrs	r3, r0
 800103e:	025b      	lsls	r3, r3, #9
 8001040:	0a5b      	lsrs	r3, r3, #9
 8001042:	24ff      	movs	r4, #255	; 0xff
 8001044:	e787      	b.n	8000f56 <__aeabi_fsub+0xb2>
 8001046:	2cff      	cmp	r4, #255	; 0xff
 8001048:	d025      	beq.n	8001096 <__aeabi_fsub+0x1f2>
 800104a:	08db      	lsrs	r3, r3, #3
 800104c:	2dff      	cmp	r5, #255	; 0xff
 800104e:	d0f0      	beq.n	8001032 <__aeabi_fsub+0x18e>
 8001050:	025b      	lsls	r3, r3, #9
 8001052:	0a5b      	lsrs	r3, r3, #9
 8001054:	b2ec      	uxtb	r4, r5
 8001056:	e77e      	b.n	8000f56 <__aeabi_fsub+0xb2>
 8001058:	2c00      	cmp	r4, #0
 800105a:	d04d      	beq.n	80010f8 <__aeabi_fsub+0x254>
 800105c:	28ff      	cmp	r0, #255	; 0xff
 800105e:	d018      	beq.n	8001092 <__aeabi_fsub+0x1ee>
 8001060:	2480      	movs	r4, #128	; 0x80
 8001062:	04e4      	lsls	r4, r4, #19
 8001064:	4272      	negs	r2, r6
 8001066:	4323      	orrs	r3, r4
 8001068:	2a1b      	cmp	r2, #27
 800106a:	dd00      	ble.n	800106e <__aeabi_fsub+0x1ca>
 800106c:	e0c4      	b.n	80011f8 <__aeabi_fsub+0x354>
 800106e:	001c      	movs	r4, r3
 8001070:	2520      	movs	r5, #32
 8001072:	40d4      	lsrs	r4, r2
 8001074:	1aaa      	subs	r2, r5, r2
 8001076:	4093      	lsls	r3, r2
 8001078:	1e5a      	subs	r2, r3, #1
 800107a:	4193      	sbcs	r3, r2
 800107c:	4323      	orrs	r3, r4
 800107e:	464a      	mov	r2, r9
 8001080:	0005      	movs	r5, r0
 8001082:	1ad3      	subs	r3, r2, r3
 8001084:	4688      	mov	r8, r1
 8001086:	e738      	b.n	8000efa <__aeabi_fsub+0x56>
 8001088:	1c72      	adds	r2, r6, #1
 800108a:	d0f8      	beq.n	800107e <__aeabi_fsub+0x1da>
 800108c:	43f2      	mvns	r2, r6
 800108e:	28ff      	cmp	r0, #255	; 0xff
 8001090:	d1ea      	bne.n	8001068 <__aeabi_fsub+0x1c4>
 8001092:	000a      	movs	r2, r1
 8001094:	464b      	mov	r3, r9
 8001096:	25ff      	movs	r5, #255	; 0xff
 8001098:	e7d7      	b.n	800104a <__aeabi_fsub+0x1a6>
 800109a:	019b      	lsls	r3, r3, #6
 800109c:	0a5b      	lsrs	r3, r3, #9
 800109e:	e75a      	b.n	8000f56 <__aeabi_fsub+0xb2>
 80010a0:	2e00      	cmp	r6, #0
 80010a2:	d141      	bne.n	8001128 <__aeabi_fsub+0x284>
 80010a4:	1c65      	adds	r5, r4, #1
 80010a6:	b2e9      	uxtb	r1, r5
 80010a8:	2901      	cmp	r1, #1
 80010aa:	dd45      	ble.n	8001138 <__aeabi_fsub+0x294>
 80010ac:	2dff      	cmp	r5, #255	; 0xff
 80010ae:	d100      	bne.n	80010b2 <__aeabi_fsub+0x20e>
 80010b0:	e74f      	b.n	8000f52 <__aeabi_fsub+0xae>
 80010b2:	2407      	movs	r4, #7
 80010b4:	444b      	add	r3, r9
 80010b6:	085b      	lsrs	r3, r3, #1
 80010b8:	401c      	ands	r4, r3
 80010ba:	e738      	b.n	8000f2e <__aeabi_fsub+0x8a>
 80010bc:	2207      	movs	r2, #7
 80010be:	4b5a      	ldr	r3, [pc, #360]	; (8001228 <__aeabi_fsub+0x384>)
 80010c0:	1a2d      	subs	r5, r5, r0
 80010c2:	4023      	ands	r3, r4
 80010c4:	4014      	ands	r4, r2
 80010c6:	e732      	b.n	8000f2e <__aeabi_fsub+0x8a>
 80010c8:	2c00      	cmp	r4, #0
 80010ca:	d11d      	bne.n	8001108 <__aeabi_fsub+0x264>
 80010cc:	2b00      	cmp	r3, #0
 80010ce:	d17a      	bne.n	80011c6 <__aeabi_fsub+0x322>
 80010d0:	464b      	mov	r3, r9
 80010d2:	2b00      	cmp	r3, #0
 80010d4:	d100      	bne.n	80010d8 <__aeabi_fsub+0x234>
 80010d6:	e091      	b.n	80011fc <__aeabi_fsub+0x358>
 80010d8:	000a      	movs	r2, r1
 80010da:	2500      	movs	r5, #0
 80010dc:	e7b5      	b.n	800104a <__aeabi_fsub+0x1a6>
 80010de:	3e01      	subs	r6, #1
 80010e0:	2e00      	cmp	r6, #0
 80010e2:	d119      	bne.n	8001118 <__aeabi_fsub+0x274>
 80010e4:	444b      	add	r3, r9
 80010e6:	e76c      	b.n	8000fc2 <__aeabi_fsub+0x11e>
 80010e8:	2cff      	cmp	r4, #255	; 0xff
 80010ea:	d184      	bne.n	8000ff6 <__aeabi_fsub+0x152>
 80010ec:	25ff      	movs	r5, #255	; 0xff
 80010ee:	e7ac      	b.n	800104a <__aeabi_fsub+0x1a6>
 80010f0:	464a      	mov	r2, r9
 80010f2:	4688      	mov	r8, r1
 80010f4:	1ad4      	subs	r4, r2, r3
 80010f6:	e705      	b.n	8000f04 <__aeabi_fsub+0x60>
 80010f8:	2b00      	cmp	r3, #0
 80010fa:	d1c5      	bne.n	8001088 <__aeabi_fsub+0x1e4>
 80010fc:	000a      	movs	r2, r1
 80010fe:	28ff      	cmp	r0, #255	; 0xff
 8001100:	d0c8      	beq.n	8001094 <__aeabi_fsub+0x1f0>
 8001102:	0005      	movs	r5, r0
 8001104:	464b      	mov	r3, r9
 8001106:	e7a0      	b.n	800104a <__aeabi_fsub+0x1a6>
 8001108:	2b00      	cmp	r3, #0
 800110a:	d149      	bne.n	80011a0 <__aeabi_fsub+0x2fc>
 800110c:	464b      	mov	r3, r9
 800110e:	2b00      	cmp	r3, #0
 8001110:	d077      	beq.n	8001202 <__aeabi_fsub+0x35e>
 8001112:	000a      	movs	r2, r1
 8001114:	25ff      	movs	r5, #255	; 0xff
 8001116:	e798      	b.n	800104a <__aeabi_fsub+0x1a6>
 8001118:	2cff      	cmp	r4, #255	; 0xff
 800111a:	d000      	beq.n	800111e <__aeabi_fsub+0x27a>
 800111c:	e743      	b.n	8000fa6 <__aeabi_fsub+0x102>
 800111e:	e787      	b.n	8001030 <__aeabi_fsub+0x18c>
 8001120:	000a      	movs	r2, r1
 8001122:	24ff      	movs	r4, #255	; 0xff
 8001124:	2300      	movs	r3, #0
 8001126:	e716      	b.n	8000f56 <__aeabi_fsub+0xb2>
 8001128:	2c00      	cmp	r4, #0
 800112a:	d115      	bne.n	8001158 <__aeabi_fsub+0x2b4>
 800112c:	2b00      	cmp	r3, #0
 800112e:	d157      	bne.n	80011e0 <__aeabi_fsub+0x33c>
 8001130:	28ff      	cmp	r0, #255	; 0xff
 8001132:	d1e6      	bne.n	8001102 <__aeabi_fsub+0x25e>
 8001134:	464b      	mov	r3, r9
 8001136:	e77b      	b.n	8001030 <__aeabi_fsub+0x18c>
 8001138:	2c00      	cmp	r4, #0
 800113a:	d120      	bne.n	800117e <__aeabi_fsub+0x2da>
 800113c:	2b00      	cmp	r3, #0
 800113e:	d057      	beq.n	80011f0 <__aeabi_fsub+0x34c>
 8001140:	4649      	mov	r1, r9
 8001142:	2900      	cmp	r1, #0
 8001144:	d053      	beq.n	80011ee <__aeabi_fsub+0x34a>
 8001146:	444b      	add	r3, r9
 8001148:	015a      	lsls	r2, r3, #5
 800114a:	d568      	bpl.n	800121e <__aeabi_fsub+0x37a>
 800114c:	2407      	movs	r4, #7
 800114e:	4a36      	ldr	r2, [pc, #216]	; (8001228 <__aeabi_fsub+0x384>)
 8001150:	401c      	ands	r4, r3
 8001152:	2501      	movs	r5, #1
 8001154:	4013      	ands	r3, r2
 8001156:	e6ea      	b.n	8000f2e <__aeabi_fsub+0x8a>
 8001158:	28ff      	cmp	r0, #255	; 0xff
 800115a:	d0eb      	beq.n	8001134 <__aeabi_fsub+0x290>
 800115c:	2280      	movs	r2, #128	; 0x80
 800115e:	04d2      	lsls	r2, r2, #19
 8001160:	4276      	negs	r6, r6
 8001162:	4313      	orrs	r3, r2
 8001164:	2e1b      	cmp	r6, #27
 8001166:	dc53      	bgt.n	8001210 <__aeabi_fsub+0x36c>
 8001168:	2520      	movs	r5, #32
 800116a:	1bad      	subs	r5, r5, r6
 800116c:	001a      	movs	r2, r3
 800116e:	40ab      	lsls	r3, r5
 8001170:	40f2      	lsrs	r2, r6
 8001172:	1e5c      	subs	r4, r3, #1
 8001174:	41a3      	sbcs	r3, r4
 8001176:	4313      	orrs	r3, r2
 8001178:	444b      	add	r3, r9
 800117a:	0005      	movs	r5, r0
 800117c:	e721      	b.n	8000fc2 <__aeabi_fsub+0x11e>
 800117e:	2b00      	cmp	r3, #0
 8001180:	d0d8      	beq.n	8001134 <__aeabi_fsub+0x290>
 8001182:	4649      	mov	r1, r9
 8001184:	2900      	cmp	r1, #0
 8001186:	d100      	bne.n	800118a <__aeabi_fsub+0x2e6>
 8001188:	e752      	b.n	8001030 <__aeabi_fsub+0x18c>
 800118a:	2180      	movs	r1, #128	; 0x80
 800118c:	03c9      	lsls	r1, r1, #15
 800118e:	420f      	tst	r7, r1
 8001190:	d100      	bne.n	8001194 <__aeabi_fsub+0x2f0>
 8001192:	e74d      	b.n	8001030 <__aeabi_fsub+0x18c>
 8001194:	4660      	mov	r0, ip
 8001196:	4208      	tst	r0, r1
 8001198:	d000      	beq.n	800119c <__aeabi_fsub+0x2f8>
 800119a:	e749      	b.n	8001030 <__aeabi_fsub+0x18c>
 800119c:	464b      	mov	r3, r9
 800119e:	e747      	b.n	8001030 <__aeabi_fsub+0x18c>
 80011a0:	4648      	mov	r0, r9
 80011a2:	25ff      	movs	r5, #255	; 0xff
 80011a4:	2800      	cmp	r0, #0
 80011a6:	d100      	bne.n	80011aa <__aeabi_fsub+0x306>
 80011a8:	e74f      	b.n	800104a <__aeabi_fsub+0x1a6>
 80011aa:	2280      	movs	r2, #128	; 0x80
 80011ac:	03d2      	lsls	r2, r2, #15
 80011ae:	4217      	tst	r7, r2
 80011b0:	d004      	beq.n	80011bc <__aeabi_fsub+0x318>
 80011b2:	4660      	mov	r0, ip
 80011b4:	4210      	tst	r0, r2
 80011b6:	d101      	bne.n	80011bc <__aeabi_fsub+0x318>
 80011b8:	464b      	mov	r3, r9
 80011ba:	4688      	mov	r8, r1
 80011bc:	2201      	movs	r2, #1
 80011be:	4641      	mov	r1, r8
 80011c0:	25ff      	movs	r5, #255	; 0xff
 80011c2:	400a      	ands	r2, r1
 80011c4:	e741      	b.n	800104a <__aeabi_fsub+0x1a6>
 80011c6:	4648      	mov	r0, r9
 80011c8:	2800      	cmp	r0, #0
 80011ca:	d01f      	beq.n	800120c <__aeabi_fsub+0x368>
 80011cc:	1a1a      	subs	r2, r3, r0
 80011ce:	0150      	lsls	r0, r2, #5
 80011d0:	d520      	bpl.n	8001214 <__aeabi_fsub+0x370>
 80011d2:	464a      	mov	r2, r9
 80011d4:	2407      	movs	r4, #7
 80011d6:	1ad3      	subs	r3, r2, r3
 80011d8:	401c      	ands	r4, r3
 80011da:	4688      	mov	r8, r1
 80011dc:	2500      	movs	r5, #0
 80011de:	e6a6      	b.n	8000f2e <__aeabi_fsub+0x8a>
 80011e0:	1c74      	adds	r4, r6, #1
 80011e2:	d0c9      	beq.n	8001178 <__aeabi_fsub+0x2d4>
 80011e4:	43f6      	mvns	r6, r6
 80011e6:	28ff      	cmp	r0, #255	; 0xff
 80011e8:	d1bc      	bne.n	8001164 <__aeabi_fsub+0x2c0>
 80011ea:	464b      	mov	r3, r9
 80011ec:	e720      	b.n	8001030 <__aeabi_fsub+0x18c>
 80011ee:	4699      	mov	r9, r3
 80011f0:	464b      	mov	r3, r9
 80011f2:	2500      	movs	r5, #0
 80011f4:	08db      	lsrs	r3, r3, #3
 80011f6:	e72b      	b.n	8001050 <__aeabi_fsub+0x1ac>
 80011f8:	2301      	movs	r3, #1
 80011fa:	e740      	b.n	800107e <__aeabi_fsub+0x1da>
 80011fc:	2200      	movs	r2, #0
 80011fe:	2300      	movs	r3, #0
 8001200:	e6a9      	b.n	8000f56 <__aeabi_fsub+0xb2>
 8001202:	2380      	movs	r3, #128	; 0x80
 8001204:	2200      	movs	r2, #0
 8001206:	03db      	lsls	r3, r3, #15
 8001208:	24ff      	movs	r4, #255	; 0xff
 800120a:	e6a4      	b.n	8000f56 <__aeabi_fsub+0xb2>
 800120c:	2500      	movs	r5, #0
 800120e:	e71c      	b.n	800104a <__aeabi_fsub+0x1a6>
 8001210:	2301      	movs	r3, #1
 8001212:	e7b1      	b.n	8001178 <__aeabi_fsub+0x2d4>
 8001214:	2a00      	cmp	r2, #0
 8001216:	d0f1      	beq.n	80011fc <__aeabi_fsub+0x358>
 8001218:	0013      	movs	r3, r2
 800121a:	2500      	movs	r5, #0
 800121c:	e6fc      	b.n	8001018 <__aeabi_fsub+0x174>
 800121e:	2500      	movs	r5, #0
 8001220:	e6fa      	b.n	8001018 <__aeabi_fsub+0x174>
 8001222:	46c0      	nop			; (mov r8, r8)
 8001224:	7dffffff 	.word	0x7dffffff
 8001228:	fbffffff 	.word	0xfbffffff

0800122c <__aeabi_f2iz>:
 800122c:	0241      	lsls	r1, r0, #9
 800122e:	0042      	lsls	r2, r0, #1
 8001230:	0fc3      	lsrs	r3, r0, #31
 8001232:	0a49      	lsrs	r1, r1, #9
 8001234:	0e12      	lsrs	r2, r2, #24
 8001236:	2000      	movs	r0, #0
 8001238:	2a7e      	cmp	r2, #126	; 0x7e
 800123a:	d90d      	bls.n	8001258 <__aeabi_f2iz+0x2c>
 800123c:	2a9d      	cmp	r2, #157	; 0x9d
 800123e:	d80c      	bhi.n	800125a <__aeabi_f2iz+0x2e>
 8001240:	2080      	movs	r0, #128	; 0x80
 8001242:	0400      	lsls	r0, r0, #16
 8001244:	4301      	orrs	r1, r0
 8001246:	2a95      	cmp	r2, #149	; 0x95
 8001248:	dc0a      	bgt.n	8001260 <__aeabi_f2iz+0x34>
 800124a:	2096      	movs	r0, #150	; 0x96
 800124c:	1a82      	subs	r2, r0, r2
 800124e:	40d1      	lsrs	r1, r2
 8001250:	4248      	negs	r0, r1
 8001252:	2b00      	cmp	r3, #0
 8001254:	d100      	bne.n	8001258 <__aeabi_f2iz+0x2c>
 8001256:	0008      	movs	r0, r1
 8001258:	4770      	bx	lr
 800125a:	4a03      	ldr	r2, [pc, #12]	; (8001268 <__aeabi_f2iz+0x3c>)
 800125c:	1898      	adds	r0, r3, r2
 800125e:	e7fb      	b.n	8001258 <__aeabi_f2iz+0x2c>
 8001260:	3a96      	subs	r2, #150	; 0x96
 8001262:	4091      	lsls	r1, r2
 8001264:	e7f4      	b.n	8001250 <__aeabi_f2iz+0x24>
 8001266:	46c0      	nop			; (mov r8, r8)
 8001268:	7fffffff 	.word	0x7fffffff

0800126c <__aeabi_i2f>:
 800126c:	b570      	push	{r4, r5, r6, lr}
 800126e:	2800      	cmp	r0, #0
 8001270:	d03d      	beq.n	80012ee <__aeabi_i2f+0x82>
 8001272:	17c3      	asrs	r3, r0, #31
 8001274:	18c5      	adds	r5, r0, r3
 8001276:	405d      	eors	r5, r3
 8001278:	0fc4      	lsrs	r4, r0, #31
 800127a:	0028      	movs	r0, r5
 800127c:	f001 fe30 	bl	8002ee0 <__clzsi2>
 8001280:	229e      	movs	r2, #158	; 0x9e
 8001282:	1a12      	subs	r2, r2, r0
 8001284:	2a96      	cmp	r2, #150	; 0x96
 8001286:	dc07      	bgt.n	8001298 <__aeabi_i2f+0x2c>
 8001288:	b2d2      	uxtb	r2, r2
 800128a:	2808      	cmp	r0, #8
 800128c:	dd33      	ble.n	80012f6 <__aeabi_i2f+0x8a>
 800128e:	3808      	subs	r0, #8
 8001290:	4085      	lsls	r5, r0
 8001292:	0268      	lsls	r0, r5, #9
 8001294:	0a40      	lsrs	r0, r0, #9
 8001296:	e023      	b.n	80012e0 <__aeabi_i2f+0x74>
 8001298:	2a99      	cmp	r2, #153	; 0x99
 800129a:	dd0b      	ble.n	80012b4 <__aeabi_i2f+0x48>
 800129c:	2305      	movs	r3, #5
 800129e:	0029      	movs	r1, r5
 80012a0:	1a1b      	subs	r3, r3, r0
 80012a2:	40d9      	lsrs	r1, r3
 80012a4:	0003      	movs	r3, r0
 80012a6:	331b      	adds	r3, #27
 80012a8:	409d      	lsls	r5, r3
 80012aa:	002b      	movs	r3, r5
 80012ac:	1e5d      	subs	r5, r3, #1
 80012ae:	41ab      	sbcs	r3, r5
 80012b0:	4319      	orrs	r1, r3
 80012b2:	000d      	movs	r5, r1
 80012b4:	2805      	cmp	r0, #5
 80012b6:	dd01      	ble.n	80012bc <__aeabi_i2f+0x50>
 80012b8:	1f43      	subs	r3, r0, #5
 80012ba:	409d      	lsls	r5, r3
 80012bc:	002b      	movs	r3, r5
 80012be:	490f      	ldr	r1, [pc, #60]	; (80012fc <__aeabi_i2f+0x90>)
 80012c0:	400b      	ands	r3, r1
 80012c2:	076e      	lsls	r6, r5, #29
 80012c4:	d009      	beq.n	80012da <__aeabi_i2f+0x6e>
 80012c6:	260f      	movs	r6, #15
 80012c8:	4035      	ands	r5, r6
 80012ca:	2d04      	cmp	r5, #4
 80012cc:	d005      	beq.n	80012da <__aeabi_i2f+0x6e>
 80012ce:	3304      	adds	r3, #4
 80012d0:	015d      	lsls	r5, r3, #5
 80012d2:	d502      	bpl.n	80012da <__aeabi_i2f+0x6e>
 80012d4:	229f      	movs	r2, #159	; 0x9f
 80012d6:	400b      	ands	r3, r1
 80012d8:	1a12      	subs	r2, r2, r0
 80012da:	019b      	lsls	r3, r3, #6
 80012dc:	0a58      	lsrs	r0, r3, #9
 80012de:	b2d2      	uxtb	r2, r2
 80012e0:	0240      	lsls	r0, r0, #9
 80012e2:	05d2      	lsls	r2, r2, #23
 80012e4:	0a40      	lsrs	r0, r0, #9
 80012e6:	07e4      	lsls	r4, r4, #31
 80012e8:	4310      	orrs	r0, r2
 80012ea:	4320      	orrs	r0, r4
 80012ec:	bd70      	pop	{r4, r5, r6, pc}
 80012ee:	2400      	movs	r4, #0
 80012f0:	2200      	movs	r2, #0
 80012f2:	2000      	movs	r0, #0
 80012f4:	e7f4      	b.n	80012e0 <__aeabi_i2f+0x74>
 80012f6:	0268      	lsls	r0, r5, #9
 80012f8:	0a40      	lsrs	r0, r0, #9
 80012fa:	e7f1      	b.n	80012e0 <__aeabi_i2f+0x74>
 80012fc:	fbffffff 	.word	0xfbffffff

08001300 <__aeabi_dadd>:
 8001300:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001302:	464f      	mov	r7, r9
 8001304:	4646      	mov	r6, r8
 8001306:	46d6      	mov	lr, sl
 8001308:	000c      	movs	r4, r1
 800130a:	0309      	lsls	r1, r1, #12
 800130c:	b5c0      	push	{r6, r7, lr}
 800130e:	0a49      	lsrs	r1, r1, #9
 8001310:	0f47      	lsrs	r7, r0, #29
 8001312:	005e      	lsls	r6, r3, #1
 8001314:	4339      	orrs	r1, r7
 8001316:	031f      	lsls	r7, r3, #12
 8001318:	0fdb      	lsrs	r3, r3, #31
 800131a:	469c      	mov	ip, r3
 800131c:	0065      	lsls	r5, r4, #1
 800131e:	0a7b      	lsrs	r3, r7, #9
 8001320:	0f57      	lsrs	r7, r2, #29
 8001322:	431f      	orrs	r7, r3
 8001324:	0d6d      	lsrs	r5, r5, #21
 8001326:	0fe4      	lsrs	r4, r4, #31
 8001328:	0d76      	lsrs	r6, r6, #21
 800132a:	46a1      	mov	r9, r4
 800132c:	00c0      	lsls	r0, r0, #3
 800132e:	46b8      	mov	r8, r7
 8001330:	00d2      	lsls	r2, r2, #3
 8001332:	1bab      	subs	r3, r5, r6
 8001334:	4564      	cmp	r4, ip
 8001336:	d07b      	beq.n	8001430 <__aeabi_dadd+0x130>
 8001338:	2b00      	cmp	r3, #0
 800133a:	dd5f      	ble.n	80013fc <__aeabi_dadd+0xfc>
 800133c:	2e00      	cmp	r6, #0
 800133e:	d000      	beq.n	8001342 <__aeabi_dadd+0x42>
 8001340:	e0a4      	b.n	800148c <__aeabi_dadd+0x18c>
 8001342:	003e      	movs	r6, r7
 8001344:	4316      	orrs	r6, r2
 8001346:	d100      	bne.n	800134a <__aeabi_dadd+0x4a>
 8001348:	e112      	b.n	8001570 <__aeabi_dadd+0x270>
 800134a:	1e5e      	subs	r6, r3, #1
 800134c:	2e00      	cmp	r6, #0
 800134e:	d000      	beq.n	8001352 <__aeabi_dadd+0x52>
 8001350:	e19e      	b.n	8001690 <__aeabi_dadd+0x390>
 8001352:	1a87      	subs	r7, r0, r2
 8001354:	4643      	mov	r3, r8
 8001356:	42b8      	cmp	r0, r7
 8001358:	4180      	sbcs	r0, r0
 800135a:	2501      	movs	r5, #1
 800135c:	1ac9      	subs	r1, r1, r3
 800135e:	4240      	negs	r0, r0
 8001360:	1a09      	subs	r1, r1, r0
 8001362:	020b      	lsls	r3, r1, #8
 8001364:	d400      	bmi.n	8001368 <__aeabi_dadd+0x68>
 8001366:	e131      	b.n	80015cc <__aeabi_dadd+0x2cc>
 8001368:	0249      	lsls	r1, r1, #9
 800136a:	0a4e      	lsrs	r6, r1, #9
 800136c:	2e00      	cmp	r6, #0
 800136e:	d100      	bne.n	8001372 <__aeabi_dadd+0x72>
 8001370:	e16e      	b.n	8001650 <__aeabi_dadd+0x350>
 8001372:	0030      	movs	r0, r6
 8001374:	f001 fdb4 	bl	8002ee0 <__clzsi2>
 8001378:	0003      	movs	r3, r0
 800137a:	3b08      	subs	r3, #8
 800137c:	2b1f      	cmp	r3, #31
 800137e:	dd00      	ble.n	8001382 <__aeabi_dadd+0x82>
 8001380:	e161      	b.n	8001646 <__aeabi_dadd+0x346>
 8001382:	2220      	movs	r2, #32
 8001384:	0039      	movs	r1, r7
 8001386:	1ad2      	subs	r2, r2, r3
 8001388:	409e      	lsls	r6, r3
 800138a:	40d1      	lsrs	r1, r2
 800138c:	409f      	lsls	r7, r3
 800138e:	430e      	orrs	r6, r1
 8001390:	429d      	cmp	r5, r3
 8001392:	dd00      	ble.n	8001396 <__aeabi_dadd+0x96>
 8001394:	e151      	b.n	800163a <__aeabi_dadd+0x33a>
 8001396:	1b5d      	subs	r5, r3, r5
 8001398:	1c6b      	adds	r3, r5, #1
 800139a:	2b1f      	cmp	r3, #31
 800139c:	dd00      	ble.n	80013a0 <__aeabi_dadd+0xa0>
 800139e:	e17c      	b.n	800169a <__aeabi_dadd+0x39a>
 80013a0:	2120      	movs	r1, #32
 80013a2:	1ac9      	subs	r1, r1, r3
 80013a4:	003d      	movs	r5, r7
 80013a6:	0030      	movs	r0, r6
 80013a8:	408f      	lsls	r7, r1
 80013aa:	4088      	lsls	r0, r1
 80013ac:	40dd      	lsrs	r5, r3
 80013ae:	1e79      	subs	r1, r7, #1
 80013b0:	418f      	sbcs	r7, r1
 80013b2:	0031      	movs	r1, r6
 80013b4:	2207      	movs	r2, #7
 80013b6:	4328      	orrs	r0, r5
 80013b8:	40d9      	lsrs	r1, r3
 80013ba:	2500      	movs	r5, #0
 80013bc:	4307      	orrs	r7, r0
 80013be:	403a      	ands	r2, r7
 80013c0:	2a00      	cmp	r2, #0
 80013c2:	d009      	beq.n	80013d8 <__aeabi_dadd+0xd8>
 80013c4:	230f      	movs	r3, #15
 80013c6:	403b      	ands	r3, r7
 80013c8:	2b04      	cmp	r3, #4
 80013ca:	d005      	beq.n	80013d8 <__aeabi_dadd+0xd8>
 80013cc:	1d3b      	adds	r3, r7, #4
 80013ce:	42bb      	cmp	r3, r7
 80013d0:	41bf      	sbcs	r7, r7
 80013d2:	427f      	negs	r7, r7
 80013d4:	19c9      	adds	r1, r1, r7
 80013d6:	001f      	movs	r7, r3
 80013d8:	020b      	lsls	r3, r1, #8
 80013da:	d400      	bmi.n	80013de <__aeabi_dadd+0xde>
 80013dc:	e226      	b.n	800182c <__aeabi_dadd+0x52c>
 80013de:	1c6a      	adds	r2, r5, #1
 80013e0:	4bc6      	ldr	r3, [pc, #792]	; (80016fc <__aeabi_dadd+0x3fc>)
 80013e2:	0555      	lsls	r5, r2, #21
 80013e4:	0d6d      	lsrs	r5, r5, #21
 80013e6:	429a      	cmp	r2, r3
 80013e8:	d100      	bne.n	80013ec <__aeabi_dadd+0xec>
 80013ea:	e106      	b.n	80015fa <__aeabi_dadd+0x2fa>
 80013ec:	4ac4      	ldr	r2, [pc, #784]	; (8001700 <__aeabi_dadd+0x400>)
 80013ee:	08ff      	lsrs	r7, r7, #3
 80013f0:	400a      	ands	r2, r1
 80013f2:	0753      	lsls	r3, r2, #29
 80013f4:	0252      	lsls	r2, r2, #9
 80013f6:	433b      	orrs	r3, r7
 80013f8:	0b12      	lsrs	r2, r2, #12
 80013fa:	e08e      	b.n	800151a <__aeabi_dadd+0x21a>
 80013fc:	2b00      	cmp	r3, #0
 80013fe:	d000      	beq.n	8001402 <__aeabi_dadd+0x102>
 8001400:	e0b8      	b.n	8001574 <__aeabi_dadd+0x274>
 8001402:	1c6b      	adds	r3, r5, #1
 8001404:	055b      	lsls	r3, r3, #21
 8001406:	0d5b      	lsrs	r3, r3, #21
 8001408:	2b01      	cmp	r3, #1
 800140a:	dc00      	bgt.n	800140e <__aeabi_dadd+0x10e>
 800140c:	e130      	b.n	8001670 <__aeabi_dadd+0x370>
 800140e:	1a87      	subs	r7, r0, r2
 8001410:	4643      	mov	r3, r8
 8001412:	42b8      	cmp	r0, r7
 8001414:	41b6      	sbcs	r6, r6
 8001416:	1acb      	subs	r3, r1, r3
 8001418:	4276      	negs	r6, r6
 800141a:	1b9e      	subs	r6, r3, r6
 800141c:	0233      	lsls	r3, r6, #8
 800141e:	d500      	bpl.n	8001422 <__aeabi_dadd+0x122>
 8001420:	e14c      	b.n	80016bc <__aeabi_dadd+0x3bc>
 8001422:	003b      	movs	r3, r7
 8001424:	4333      	orrs	r3, r6
 8001426:	d1a1      	bne.n	800136c <__aeabi_dadd+0x6c>
 8001428:	2200      	movs	r2, #0
 800142a:	2400      	movs	r4, #0
 800142c:	2500      	movs	r5, #0
 800142e:	e070      	b.n	8001512 <__aeabi_dadd+0x212>
 8001430:	2b00      	cmp	r3, #0
 8001432:	dc00      	bgt.n	8001436 <__aeabi_dadd+0x136>
 8001434:	e0e5      	b.n	8001602 <__aeabi_dadd+0x302>
 8001436:	2e00      	cmp	r6, #0
 8001438:	d100      	bne.n	800143c <__aeabi_dadd+0x13c>
 800143a:	e083      	b.n	8001544 <__aeabi_dadd+0x244>
 800143c:	4eaf      	ldr	r6, [pc, #700]	; (80016fc <__aeabi_dadd+0x3fc>)
 800143e:	42b5      	cmp	r5, r6
 8001440:	d060      	beq.n	8001504 <__aeabi_dadd+0x204>
 8001442:	2680      	movs	r6, #128	; 0x80
 8001444:	0436      	lsls	r6, r6, #16
 8001446:	4337      	orrs	r7, r6
 8001448:	46b8      	mov	r8, r7
 800144a:	2b38      	cmp	r3, #56	; 0x38
 800144c:	dc00      	bgt.n	8001450 <__aeabi_dadd+0x150>
 800144e:	e13e      	b.n	80016ce <__aeabi_dadd+0x3ce>
 8001450:	4643      	mov	r3, r8
 8001452:	4313      	orrs	r3, r2
 8001454:	001f      	movs	r7, r3
 8001456:	1e7a      	subs	r2, r7, #1
 8001458:	4197      	sbcs	r7, r2
 800145a:	183f      	adds	r7, r7, r0
 800145c:	4287      	cmp	r7, r0
 800145e:	4180      	sbcs	r0, r0
 8001460:	4240      	negs	r0, r0
 8001462:	1809      	adds	r1, r1, r0
 8001464:	020b      	lsls	r3, r1, #8
 8001466:	d400      	bmi.n	800146a <__aeabi_dadd+0x16a>
 8001468:	e0b0      	b.n	80015cc <__aeabi_dadd+0x2cc>
 800146a:	4ba4      	ldr	r3, [pc, #656]	; (80016fc <__aeabi_dadd+0x3fc>)
 800146c:	3501      	adds	r5, #1
 800146e:	429d      	cmp	r5, r3
 8001470:	d100      	bne.n	8001474 <__aeabi_dadd+0x174>
 8001472:	e0c3      	b.n	80015fc <__aeabi_dadd+0x2fc>
 8001474:	4aa2      	ldr	r2, [pc, #648]	; (8001700 <__aeabi_dadd+0x400>)
 8001476:	087b      	lsrs	r3, r7, #1
 8001478:	400a      	ands	r2, r1
 800147a:	2101      	movs	r1, #1
 800147c:	400f      	ands	r7, r1
 800147e:	431f      	orrs	r7, r3
 8001480:	0851      	lsrs	r1, r2, #1
 8001482:	07d3      	lsls	r3, r2, #31
 8001484:	2207      	movs	r2, #7
 8001486:	431f      	orrs	r7, r3
 8001488:	403a      	ands	r2, r7
 800148a:	e799      	b.n	80013c0 <__aeabi_dadd+0xc0>
 800148c:	4e9b      	ldr	r6, [pc, #620]	; (80016fc <__aeabi_dadd+0x3fc>)
 800148e:	42b5      	cmp	r5, r6
 8001490:	d038      	beq.n	8001504 <__aeabi_dadd+0x204>
 8001492:	2680      	movs	r6, #128	; 0x80
 8001494:	0436      	lsls	r6, r6, #16
 8001496:	4337      	orrs	r7, r6
 8001498:	46b8      	mov	r8, r7
 800149a:	2b38      	cmp	r3, #56	; 0x38
 800149c:	dd00      	ble.n	80014a0 <__aeabi_dadd+0x1a0>
 800149e:	e0dc      	b.n	800165a <__aeabi_dadd+0x35a>
 80014a0:	2b1f      	cmp	r3, #31
 80014a2:	dc00      	bgt.n	80014a6 <__aeabi_dadd+0x1a6>
 80014a4:	e130      	b.n	8001708 <__aeabi_dadd+0x408>
 80014a6:	001e      	movs	r6, r3
 80014a8:	4647      	mov	r7, r8
 80014aa:	3e20      	subs	r6, #32
 80014ac:	40f7      	lsrs	r7, r6
 80014ae:	46bc      	mov	ip, r7
 80014b0:	2b20      	cmp	r3, #32
 80014b2:	d004      	beq.n	80014be <__aeabi_dadd+0x1be>
 80014b4:	2640      	movs	r6, #64	; 0x40
 80014b6:	1af3      	subs	r3, r6, r3
 80014b8:	4646      	mov	r6, r8
 80014ba:	409e      	lsls	r6, r3
 80014bc:	4332      	orrs	r2, r6
 80014be:	0017      	movs	r7, r2
 80014c0:	4663      	mov	r3, ip
 80014c2:	1e7a      	subs	r2, r7, #1
 80014c4:	4197      	sbcs	r7, r2
 80014c6:	431f      	orrs	r7, r3
 80014c8:	e0cc      	b.n	8001664 <__aeabi_dadd+0x364>
 80014ca:	2b00      	cmp	r3, #0
 80014cc:	d100      	bne.n	80014d0 <__aeabi_dadd+0x1d0>
 80014ce:	e204      	b.n	80018da <__aeabi_dadd+0x5da>
 80014d0:	4643      	mov	r3, r8
 80014d2:	4313      	orrs	r3, r2
 80014d4:	d100      	bne.n	80014d8 <__aeabi_dadd+0x1d8>
 80014d6:	e159      	b.n	800178c <__aeabi_dadd+0x48c>
 80014d8:	074b      	lsls	r3, r1, #29
 80014da:	08c0      	lsrs	r0, r0, #3
 80014dc:	4318      	orrs	r0, r3
 80014de:	2380      	movs	r3, #128	; 0x80
 80014e0:	08c9      	lsrs	r1, r1, #3
 80014e2:	031b      	lsls	r3, r3, #12
 80014e4:	4219      	tst	r1, r3
 80014e6:	d008      	beq.n	80014fa <__aeabi_dadd+0x1fa>
 80014e8:	4645      	mov	r5, r8
 80014ea:	08ed      	lsrs	r5, r5, #3
 80014ec:	421d      	tst	r5, r3
 80014ee:	d104      	bne.n	80014fa <__aeabi_dadd+0x1fa>
 80014f0:	4643      	mov	r3, r8
 80014f2:	08d0      	lsrs	r0, r2, #3
 80014f4:	0759      	lsls	r1, r3, #29
 80014f6:	4308      	orrs	r0, r1
 80014f8:	0029      	movs	r1, r5
 80014fa:	0f42      	lsrs	r2, r0, #29
 80014fc:	00c9      	lsls	r1, r1, #3
 80014fe:	4d7f      	ldr	r5, [pc, #508]	; (80016fc <__aeabi_dadd+0x3fc>)
 8001500:	4311      	orrs	r1, r2
 8001502:	00c0      	lsls	r0, r0, #3
 8001504:	074b      	lsls	r3, r1, #29
 8001506:	08ca      	lsrs	r2, r1, #3
 8001508:	497c      	ldr	r1, [pc, #496]	; (80016fc <__aeabi_dadd+0x3fc>)
 800150a:	08c0      	lsrs	r0, r0, #3
 800150c:	4303      	orrs	r3, r0
 800150e:	428d      	cmp	r5, r1
 8001510:	d068      	beq.n	80015e4 <__aeabi_dadd+0x2e4>
 8001512:	0312      	lsls	r2, r2, #12
 8001514:	056d      	lsls	r5, r5, #21
 8001516:	0b12      	lsrs	r2, r2, #12
 8001518:	0d6d      	lsrs	r5, r5, #21
 800151a:	2100      	movs	r1, #0
 800151c:	0312      	lsls	r2, r2, #12
 800151e:	0018      	movs	r0, r3
 8001520:	0b13      	lsrs	r3, r2, #12
 8001522:	0d0a      	lsrs	r2, r1, #20
 8001524:	0512      	lsls	r2, r2, #20
 8001526:	431a      	orrs	r2, r3
 8001528:	4b76      	ldr	r3, [pc, #472]	; (8001704 <__aeabi_dadd+0x404>)
 800152a:	052d      	lsls	r5, r5, #20
 800152c:	4013      	ands	r3, r2
 800152e:	432b      	orrs	r3, r5
 8001530:	005b      	lsls	r3, r3, #1
 8001532:	07e4      	lsls	r4, r4, #31
 8001534:	085b      	lsrs	r3, r3, #1
 8001536:	4323      	orrs	r3, r4
 8001538:	0019      	movs	r1, r3
 800153a:	bc1c      	pop	{r2, r3, r4}
 800153c:	4690      	mov	r8, r2
 800153e:	4699      	mov	r9, r3
 8001540:	46a2      	mov	sl, r4
 8001542:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001544:	003e      	movs	r6, r7
 8001546:	4316      	orrs	r6, r2
 8001548:	d012      	beq.n	8001570 <__aeabi_dadd+0x270>
 800154a:	1e5e      	subs	r6, r3, #1
 800154c:	2e00      	cmp	r6, #0
 800154e:	d000      	beq.n	8001552 <__aeabi_dadd+0x252>
 8001550:	e100      	b.n	8001754 <__aeabi_dadd+0x454>
 8001552:	1887      	adds	r7, r0, r2
 8001554:	4287      	cmp	r7, r0
 8001556:	4180      	sbcs	r0, r0
 8001558:	4441      	add	r1, r8
 800155a:	4240      	negs	r0, r0
 800155c:	1809      	adds	r1, r1, r0
 800155e:	2501      	movs	r5, #1
 8001560:	020b      	lsls	r3, r1, #8
 8001562:	d533      	bpl.n	80015cc <__aeabi_dadd+0x2cc>
 8001564:	2502      	movs	r5, #2
 8001566:	e785      	b.n	8001474 <__aeabi_dadd+0x174>
 8001568:	4664      	mov	r4, ip
 800156a:	0033      	movs	r3, r6
 800156c:	4641      	mov	r1, r8
 800156e:	0010      	movs	r0, r2
 8001570:	001d      	movs	r5, r3
 8001572:	e7c7      	b.n	8001504 <__aeabi_dadd+0x204>
 8001574:	2d00      	cmp	r5, #0
 8001576:	d000      	beq.n	800157a <__aeabi_dadd+0x27a>
 8001578:	e0da      	b.n	8001730 <__aeabi_dadd+0x430>
 800157a:	000c      	movs	r4, r1
 800157c:	4304      	orrs	r4, r0
 800157e:	d0f3      	beq.n	8001568 <__aeabi_dadd+0x268>
 8001580:	1c5c      	adds	r4, r3, #1
 8001582:	d100      	bne.n	8001586 <__aeabi_dadd+0x286>
 8001584:	e19f      	b.n	80018c6 <__aeabi_dadd+0x5c6>
 8001586:	4c5d      	ldr	r4, [pc, #372]	; (80016fc <__aeabi_dadd+0x3fc>)
 8001588:	42a6      	cmp	r6, r4
 800158a:	d100      	bne.n	800158e <__aeabi_dadd+0x28e>
 800158c:	e12f      	b.n	80017ee <__aeabi_dadd+0x4ee>
 800158e:	43db      	mvns	r3, r3
 8001590:	2b38      	cmp	r3, #56	; 0x38
 8001592:	dd00      	ble.n	8001596 <__aeabi_dadd+0x296>
 8001594:	e166      	b.n	8001864 <__aeabi_dadd+0x564>
 8001596:	2b1f      	cmp	r3, #31
 8001598:	dd00      	ble.n	800159c <__aeabi_dadd+0x29c>
 800159a:	e183      	b.n	80018a4 <__aeabi_dadd+0x5a4>
 800159c:	2420      	movs	r4, #32
 800159e:	0005      	movs	r5, r0
 80015a0:	1ae4      	subs	r4, r4, r3
 80015a2:	000f      	movs	r7, r1
 80015a4:	40dd      	lsrs	r5, r3
 80015a6:	40d9      	lsrs	r1, r3
 80015a8:	40a0      	lsls	r0, r4
 80015aa:	4643      	mov	r3, r8
 80015ac:	40a7      	lsls	r7, r4
 80015ae:	1a5b      	subs	r3, r3, r1
 80015b0:	1e44      	subs	r4, r0, #1
 80015b2:	41a0      	sbcs	r0, r4
 80015b4:	4698      	mov	r8, r3
 80015b6:	432f      	orrs	r7, r5
 80015b8:	4338      	orrs	r0, r7
 80015ba:	1a17      	subs	r7, r2, r0
 80015bc:	42ba      	cmp	r2, r7
 80015be:	4192      	sbcs	r2, r2
 80015c0:	4643      	mov	r3, r8
 80015c2:	4252      	negs	r2, r2
 80015c4:	1a99      	subs	r1, r3, r2
 80015c6:	4664      	mov	r4, ip
 80015c8:	0035      	movs	r5, r6
 80015ca:	e6ca      	b.n	8001362 <__aeabi_dadd+0x62>
 80015cc:	2207      	movs	r2, #7
 80015ce:	403a      	ands	r2, r7
 80015d0:	2a00      	cmp	r2, #0
 80015d2:	d000      	beq.n	80015d6 <__aeabi_dadd+0x2d6>
 80015d4:	e6f6      	b.n	80013c4 <__aeabi_dadd+0xc4>
 80015d6:	074b      	lsls	r3, r1, #29
 80015d8:	08ca      	lsrs	r2, r1, #3
 80015da:	4948      	ldr	r1, [pc, #288]	; (80016fc <__aeabi_dadd+0x3fc>)
 80015dc:	08ff      	lsrs	r7, r7, #3
 80015de:	433b      	orrs	r3, r7
 80015e0:	428d      	cmp	r5, r1
 80015e2:	d196      	bne.n	8001512 <__aeabi_dadd+0x212>
 80015e4:	0019      	movs	r1, r3
 80015e6:	4311      	orrs	r1, r2
 80015e8:	d100      	bne.n	80015ec <__aeabi_dadd+0x2ec>
 80015ea:	e19e      	b.n	800192a <__aeabi_dadd+0x62a>
 80015ec:	2180      	movs	r1, #128	; 0x80
 80015ee:	0309      	lsls	r1, r1, #12
 80015f0:	430a      	orrs	r2, r1
 80015f2:	0312      	lsls	r2, r2, #12
 80015f4:	0b12      	lsrs	r2, r2, #12
 80015f6:	4d41      	ldr	r5, [pc, #260]	; (80016fc <__aeabi_dadd+0x3fc>)
 80015f8:	e78f      	b.n	800151a <__aeabi_dadd+0x21a>
 80015fa:	0015      	movs	r5, r2
 80015fc:	2200      	movs	r2, #0
 80015fe:	2300      	movs	r3, #0
 8001600:	e78b      	b.n	800151a <__aeabi_dadd+0x21a>
 8001602:	2b00      	cmp	r3, #0
 8001604:	d000      	beq.n	8001608 <__aeabi_dadd+0x308>
 8001606:	e0c7      	b.n	8001798 <__aeabi_dadd+0x498>
 8001608:	1c6b      	adds	r3, r5, #1
 800160a:	055f      	lsls	r7, r3, #21
 800160c:	0d7f      	lsrs	r7, r7, #21
 800160e:	2f01      	cmp	r7, #1
 8001610:	dc00      	bgt.n	8001614 <__aeabi_dadd+0x314>
 8001612:	e0f1      	b.n	80017f8 <__aeabi_dadd+0x4f8>
 8001614:	4d39      	ldr	r5, [pc, #228]	; (80016fc <__aeabi_dadd+0x3fc>)
 8001616:	42ab      	cmp	r3, r5
 8001618:	d100      	bne.n	800161c <__aeabi_dadd+0x31c>
 800161a:	e0b9      	b.n	8001790 <__aeabi_dadd+0x490>
 800161c:	1885      	adds	r5, r0, r2
 800161e:	000a      	movs	r2, r1
 8001620:	4285      	cmp	r5, r0
 8001622:	4189      	sbcs	r1, r1
 8001624:	4442      	add	r2, r8
 8001626:	4249      	negs	r1, r1
 8001628:	1851      	adds	r1, r2, r1
 800162a:	2207      	movs	r2, #7
 800162c:	07cf      	lsls	r7, r1, #31
 800162e:	086d      	lsrs	r5, r5, #1
 8001630:	432f      	orrs	r7, r5
 8001632:	0849      	lsrs	r1, r1, #1
 8001634:	403a      	ands	r2, r7
 8001636:	001d      	movs	r5, r3
 8001638:	e6c2      	b.n	80013c0 <__aeabi_dadd+0xc0>
 800163a:	2207      	movs	r2, #7
 800163c:	4930      	ldr	r1, [pc, #192]	; (8001700 <__aeabi_dadd+0x400>)
 800163e:	1aed      	subs	r5, r5, r3
 8001640:	4031      	ands	r1, r6
 8001642:	403a      	ands	r2, r7
 8001644:	e6bc      	b.n	80013c0 <__aeabi_dadd+0xc0>
 8001646:	003e      	movs	r6, r7
 8001648:	3828      	subs	r0, #40	; 0x28
 800164a:	4086      	lsls	r6, r0
 800164c:	2700      	movs	r7, #0
 800164e:	e69f      	b.n	8001390 <__aeabi_dadd+0x90>
 8001650:	0038      	movs	r0, r7
 8001652:	f001 fc45 	bl	8002ee0 <__clzsi2>
 8001656:	3020      	adds	r0, #32
 8001658:	e68e      	b.n	8001378 <__aeabi_dadd+0x78>
 800165a:	4643      	mov	r3, r8
 800165c:	4313      	orrs	r3, r2
 800165e:	001f      	movs	r7, r3
 8001660:	1e7a      	subs	r2, r7, #1
 8001662:	4197      	sbcs	r7, r2
 8001664:	1bc7      	subs	r7, r0, r7
 8001666:	42b8      	cmp	r0, r7
 8001668:	4180      	sbcs	r0, r0
 800166a:	4240      	negs	r0, r0
 800166c:	1a09      	subs	r1, r1, r0
 800166e:	e678      	b.n	8001362 <__aeabi_dadd+0x62>
 8001670:	000e      	movs	r6, r1
 8001672:	003b      	movs	r3, r7
 8001674:	4306      	orrs	r6, r0
 8001676:	4313      	orrs	r3, r2
 8001678:	2d00      	cmp	r5, #0
 800167a:	d161      	bne.n	8001740 <__aeabi_dadd+0x440>
 800167c:	2e00      	cmp	r6, #0
 800167e:	d000      	beq.n	8001682 <__aeabi_dadd+0x382>
 8001680:	e0f4      	b.n	800186c <__aeabi_dadd+0x56c>
 8001682:	2b00      	cmp	r3, #0
 8001684:	d100      	bne.n	8001688 <__aeabi_dadd+0x388>
 8001686:	e11b      	b.n	80018c0 <__aeabi_dadd+0x5c0>
 8001688:	4664      	mov	r4, ip
 800168a:	0039      	movs	r1, r7
 800168c:	0010      	movs	r0, r2
 800168e:	e739      	b.n	8001504 <__aeabi_dadd+0x204>
 8001690:	4f1a      	ldr	r7, [pc, #104]	; (80016fc <__aeabi_dadd+0x3fc>)
 8001692:	42bb      	cmp	r3, r7
 8001694:	d07a      	beq.n	800178c <__aeabi_dadd+0x48c>
 8001696:	0033      	movs	r3, r6
 8001698:	e6ff      	b.n	800149a <__aeabi_dadd+0x19a>
 800169a:	0030      	movs	r0, r6
 800169c:	3d1f      	subs	r5, #31
 800169e:	40e8      	lsrs	r0, r5
 80016a0:	2b20      	cmp	r3, #32
 80016a2:	d003      	beq.n	80016ac <__aeabi_dadd+0x3ac>
 80016a4:	2140      	movs	r1, #64	; 0x40
 80016a6:	1acb      	subs	r3, r1, r3
 80016a8:	409e      	lsls	r6, r3
 80016aa:	4337      	orrs	r7, r6
 80016ac:	1e7b      	subs	r3, r7, #1
 80016ae:	419f      	sbcs	r7, r3
 80016b0:	2207      	movs	r2, #7
 80016b2:	4307      	orrs	r7, r0
 80016b4:	403a      	ands	r2, r7
 80016b6:	2100      	movs	r1, #0
 80016b8:	2500      	movs	r5, #0
 80016ba:	e789      	b.n	80015d0 <__aeabi_dadd+0x2d0>
 80016bc:	1a17      	subs	r7, r2, r0
 80016be:	4643      	mov	r3, r8
 80016c0:	42ba      	cmp	r2, r7
 80016c2:	41b6      	sbcs	r6, r6
 80016c4:	1a59      	subs	r1, r3, r1
 80016c6:	4276      	negs	r6, r6
 80016c8:	1b8e      	subs	r6, r1, r6
 80016ca:	4664      	mov	r4, ip
 80016cc:	e64e      	b.n	800136c <__aeabi_dadd+0x6c>
 80016ce:	2b1f      	cmp	r3, #31
 80016d0:	dd00      	ble.n	80016d4 <__aeabi_dadd+0x3d4>
 80016d2:	e0ad      	b.n	8001830 <__aeabi_dadd+0x530>
 80016d4:	2620      	movs	r6, #32
 80016d6:	4647      	mov	r7, r8
 80016d8:	1af6      	subs	r6, r6, r3
 80016da:	40b7      	lsls	r7, r6
 80016dc:	46b9      	mov	r9, r7
 80016de:	0017      	movs	r7, r2
 80016e0:	46b2      	mov	sl, r6
 80016e2:	40df      	lsrs	r7, r3
 80016e4:	464e      	mov	r6, r9
 80016e6:	433e      	orrs	r6, r7
 80016e8:	0037      	movs	r7, r6
 80016ea:	4656      	mov	r6, sl
 80016ec:	40b2      	lsls	r2, r6
 80016ee:	1e56      	subs	r6, r2, #1
 80016f0:	41b2      	sbcs	r2, r6
 80016f2:	4317      	orrs	r7, r2
 80016f4:	4642      	mov	r2, r8
 80016f6:	40da      	lsrs	r2, r3
 80016f8:	1889      	adds	r1, r1, r2
 80016fa:	e6ae      	b.n	800145a <__aeabi_dadd+0x15a>
 80016fc:	000007ff 	.word	0x000007ff
 8001700:	ff7fffff 	.word	0xff7fffff
 8001704:	800fffff 	.word	0x800fffff
 8001708:	2620      	movs	r6, #32
 800170a:	4647      	mov	r7, r8
 800170c:	1af6      	subs	r6, r6, r3
 800170e:	40b7      	lsls	r7, r6
 8001710:	46b9      	mov	r9, r7
 8001712:	0017      	movs	r7, r2
 8001714:	46b2      	mov	sl, r6
 8001716:	40df      	lsrs	r7, r3
 8001718:	464e      	mov	r6, r9
 800171a:	433e      	orrs	r6, r7
 800171c:	0037      	movs	r7, r6
 800171e:	4656      	mov	r6, sl
 8001720:	40b2      	lsls	r2, r6
 8001722:	1e56      	subs	r6, r2, #1
 8001724:	41b2      	sbcs	r2, r6
 8001726:	4317      	orrs	r7, r2
 8001728:	4642      	mov	r2, r8
 800172a:	40da      	lsrs	r2, r3
 800172c:	1a89      	subs	r1, r1, r2
 800172e:	e799      	b.n	8001664 <__aeabi_dadd+0x364>
 8001730:	4c7f      	ldr	r4, [pc, #508]	; (8001930 <__aeabi_dadd+0x630>)
 8001732:	42a6      	cmp	r6, r4
 8001734:	d05b      	beq.n	80017ee <__aeabi_dadd+0x4ee>
 8001736:	2480      	movs	r4, #128	; 0x80
 8001738:	0424      	lsls	r4, r4, #16
 800173a:	425b      	negs	r3, r3
 800173c:	4321      	orrs	r1, r4
 800173e:	e727      	b.n	8001590 <__aeabi_dadd+0x290>
 8001740:	2e00      	cmp	r6, #0
 8001742:	d10c      	bne.n	800175e <__aeabi_dadd+0x45e>
 8001744:	2b00      	cmp	r3, #0
 8001746:	d100      	bne.n	800174a <__aeabi_dadd+0x44a>
 8001748:	e0cb      	b.n	80018e2 <__aeabi_dadd+0x5e2>
 800174a:	4664      	mov	r4, ip
 800174c:	0039      	movs	r1, r7
 800174e:	0010      	movs	r0, r2
 8001750:	4d77      	ldr	r5, [pc, #476]	; (8001930 <__aeabi_dadd+0x630>)
 8001752:	e6d7      	b.n	8001504 <__aeabi_dadd+0x204>
 8001754:	4f76      	ldr	r7, [pc, #472]	; (8001930 <__aeabi_dadd+0x630>)
 8001756:	42bb      	cmp	r3, r7
 8001758:	d018      	beq.n	800178c <__aeabi_dadd+0x48c>
 800175a:	0033      	movs	r3, r6
 800175c:	e675      	b.n	800144a <__aeabi_dadd+0x14a>
 800175e:	2b00      	cmp	r3, #0
 8001760:	d014      	beq.n	800178c <__aeabi_dadd+0x48c>
 8001762:	074b      	lsls	r3, r1, #29
 8001764:	08c0      	lsrs	r0, r0, #3
 8001766:	4318      	orrs	r0, r3
 8001768:	2380      	movs	r3, #128	; 0x80
 800176a:	08c9      	lsrs	r1, r1, #3
 800176c:	031b      	lsls	r3, r3, #12
 800176e:	4219      	tst	r1, r3
 8001770:	d007      	beq.n	8001782 <__aeabi_dadd+0x482>
 8001772:	08fc      	lsrs	r4, r7, #3
 8001774:	421c      	tst	r4, r3
 8001776:	d104      	bne.n	8001782 <__aeabi_dadd+0x482>
 8001778:	0779      	lsls	r1, r7, #29
 800177a:	08d0      	lsrs	r0, r2, #3
 800177c:	4308      	orrs	r0, r1
 800177e:	46e1      	mov	r9, ip
 8001780:	0021      	movs	r1, r4
 8001782:	464c      	mov	r4, r9
 8001784:	0f42      	lsrs	r2, r0, #29
 8001786:	00c9      	lsls	r1, r1, #3
 8001788:	4311      	orrs	r1, r2
 800178a:	00c0      	lsls	r0, r0, #3
 800178c:	4d68      	ldr	r5, [pc, #416]	; (8001930 <__aeabi_dadd+0x630>)
 800178e:	e6b9      	b.n	8001504 <__aeabi_dadd+0x204>
 8001790:	001d      	movs	r5, r3
 8001792:	2200      	movs	r2, #0
 8001794:	2300      	movs	r3, #0
 8001796:	e6c0      	b.n	800151a <__aeabi_dadd+0x21a>
 8001798:	2d00      	cmp	r5, #0
 800179a:	d15b      	bne.n	8001854 <__aeabi_dadd+0x554>
 800179c:	000d      	movs	r5, r1
 800179e:	4305      	orrs	r5, r0
 80017a0:	d100      	bne.n	80017a4 <__aeabi_dadd+0x4a4>
 80017a2:	e6e2      	b.n	800156a <__aeabi_dadd+0x26a>
 80017a4:	1c5d      	adds	r5, r3, #1
 80017a6:	d100      	bne.n	80017aa <__aeabi_dadd+0x4aa>
 80017a8:	e0b0      	b.n	800190c <__aeabi_dadd+0x60c>
 80017aa:	4d61      	ldr	r5, [pc, #388]	; (8001930 <__aeabi_dadd+0x630>)
 80017ac:	42ae      	cmp	r6, r5
 80017ae:	d01f      	beq.n	80017f0 <__aeabi_dadd+0x4f0>
 80017b0:	43db      	mvns	r3, r3
 80017b2:	2b38      	cmp	r3, #56	; 0x38
 80017b4:	dc71      	bgt.n	800189a <__aeabi_dadd+0x59a>
 80017b6:	2b1f      	cmp	r3, #31
 80017b8:	dd00      	ble.n	80017bc <__aeabi_dadd+0x4bc>
 80017ba:	e096      	b.n	80018ea <__aeabi_dadd+0x5ea>
 80017bc:	2520      	movs	r5, #32
 80017be:	000f      	movs	r7, r1
 80017c0:	1aed      	subs	r5, r5, r3
 80017c2:	40af      	lsls	r7, r5
 80017c4:	46b9      	mov	r9, r7
 80017c6:	0007      	movs	r7, r0
 80017c8:	46aa      	mov	sl, r5
 80017ca:	40df      	lsrs	r7, r3
 80017cc:	464d      	mov	r5, r9
 80017ce:	433d      	orrs	r5, r7
 80017d0:	002f      	movs	r7, r5
 80017d2:	4655      	mov	r5, sl
 80017d4:	40a8      	lsls	r0, r5
 80017d6:	40d9      	lsrs	r1, r3
 80017d8:	1e45      	subs	r5, r0, #1
 80017da:	41a8      	sbcs	r0, r5
 80017dc:	4488      	add	r8, r1
 80017de:	4307      	orrs	r7, r0
 80017e0:	18bf      	adds	r7, r7, r2
 80017e2:	4297      	cmp	r7, r2
 80017e4:	4192      	sbcs	r2, r2
 80017e6:	4251      	negs	r1, r2
 80017e8:	4441      	add	r1, r8
 80017ea:	0035      	movs	r5, r6
 80017ec:	e63a      	b.n	8001464 <__aeabi_dadd+0x164>
 80017ee:	4664      	mov	r4, ip
 80017f0:	0035      	movs	r5, r6
 80017f2:	4641      	mov	r1, r8
 80017f4:	0010      	movs	r0, r2
 80017f6:	e685      	b.n	8001504 <__aeabi_dadd+0x204>
 80017f8:	000b      	movs	r3, r1
 80017fa:	4303      	orrs	r3, r0
 80017fc:	2d00      	cmp	r5, #0
 80017fe:	d000      	beq.n	8001802 <__aeabi_dadd+0x502>
 8001800:	e663      	b.n	80014ca <__aeabi_dadd+0x1ca>
 8001802:	2b00      	cmp	r3, #0
 8001804:	d0f5      	beq.n	80017f2 <__aeabi_dadd+0x4f2>
 8001806:	4643      	mov	r3, r8
 8001808:	4313      	orrs	r3, r2
 800180a:	d100      	bne.n	800180e <__aeabi_dadd+0x50e>
 800180c:	e67a      	b.n	8001504 <__aeabi_dadd+0x204>
 800180e:	1887      	adds	r7, r0, r2
 8001810:	4287      	cmp	r7, r0
 8001812:	4180      	sbcs	r0, r0
 8001814:	2207      	movs	r2, #7
 8001816:	4441      	add	r1, r8
 8001818:	4240      	negs	r0, r0
 800181a:	1809      	adds	r1, r1, r0
 800181c:	403a      	ands	r2, r7
 800181e:	020b      	lsls	r3, r1, #8
 8001820:	d400      	bmi.n	8001824 <__aeabi_dadd+0x524>
 8001822:	e6d5      	b.n	80015d0 <__aeabi_dadd+0x2d0>
 8001824:	4b43      	ldr	r3, [pc, #268]	; (8001934 <__aeabi_dadd+0x634>)
 8001826:	3501      	adds	r5, #1
 8001828:	4019      	ands	r1, r3
 800182a:	e5c9      	b.n	80013c0 <__aeabi_dadd+0xc0>
 800182c:	0038      	movs	r0, r7
 800182e:	e669      	b.n	8001504 <__aeabi_dadd+0x204>
 8001830:	001e      	movs	r6, r3
 8001832:	4647      	mov	r7, r8
 8001834:	3e20      	subs	r6, #32
 8001836:	40f7      	lsrs	r7, r6
 8001838:	46bc      	mov	ip, r7
 800183a:	2b20      	cmp	r3, #32
 800183c:	d004      	beq.n	8001848 <__aeabi_dadd+0x548>
 800183e:	2640      	movs	r6, #64	; 0x40
 8001840:	1af3      	subs	r3, r6, r3
 8001842:	4646      	mov	r6, r8
 8001844:	409e      	lsls	r6, r3
 8001846:	4332      	orrs	r2, r6
 8001848:	0017      	movs	r7, r2
 800184a:	4663      	mov	r3, ip
 800184c:	1e7a      	subs	r2, r7, #1
 800184e:	4197      	sbcs	r7, r2
 8001850:	431f      	orrs	r7, r3
 8001852:	e602      	b.n	800145a <__aeabi_dadd+0x15a>
 8001854:	4d36      	ldr	r5, [pc, #216]	; (8001930 <__aeabi_dadd+0x630>)
 8001856:	42ae      	cmp	r6, r5
 8001858:	d0ca      	beq.n	80017f0 <__aeabi_dadd+0x4f0>
 800185a:	2580      	movs	r5, #128	; 0x80
 800185c:	042d      	lsls	r5, r5, #16
 800185e:	425b      	negs	r3, r3
 8001860:	4329      	orrs	r1, r5
 8001862:	e7a6      	b.n	80017b2 <__aeabi_dadd+0x4b2>
 8001864:	4308      	orrs	r0, r1
 8001866:	1e41      	subs	r1, r0, #1
 8001868:	4188      	sbcs	r0, r1
 800186a:	e6a6      	b.n	80015ba <__aeabi_dadd+0x2ba>
 800186c:	2b00      	cmp	r3, #0
 800186e:	d100      	bne.n	8001872 <__aeabi_dadd+0x572>
 8001870:	e648      	b.n	8001504 <__aeabi_dadd+0x204>
 8001872:	1a87      	subs	r7, r0, r2
 8001874:	4643      	mov	r3, r8
 8001876:	42b8      	cmp	r0, r7
 8001878:	41b6      	sbcs	r6, r6
 800187a:	1acb      	subs	r3, r1, r3
 800187c:	4276      	negs	r6, r6
 800187e:	1b9e      	subs	r6, r3, r6
 8001880:	0233      	lsls	r3, r6, #8
 8001882:	d54b      	bpl.n	800191c <__aeabi_dadd+0x61c>
 8001884:	1a17      	subs	r7, r2, r0
 8001886:	4643      	mov	r3, r8
 8001888:	42ba      	cmp	r2, r7
 800188a:	4192      	sbcs	r2, r2
 800188c:	1a59      	subs	r1, r3, r1
 800188e:	4252      	negs	r2, r2
 8001890:	1a89      	subs	r1, r1, r2
 8001892:	2207      	movs	r2, #7
 8001894:	4664      	mov	r4, ip
 8001896:	403a      	ands	r2, r7
 8001898:	e592      	b.n	80013c0 <__aeabi_dadd+0xc0>
 800189a:	4301      	orrs	r1, r0
 800189c:	000f      	movs	r7, r1
 800189e:	1e79      	subs	r1, r7, #1
 80018a0:	418f      	sbcs	r7, r1
 80018a2:	e79d      	b.n	80017e0 <__aeabi_dadd+0x4e0>
 80018a4:	001c      	movs	r4, r3
 80018a6:	000f      	movs	r7, r1
 80018a8:	3c20      	subs	r4, #32
 80018aa:	40e7      	lsrs	r7, r4
 80018ac:	2b20      	cmp	r3, #32
 80018ae:	d003      	beq.n	80018b8 <__aeabi_dadd+0x5b8>
 80018b0:	2440      	movs	r4, #64	; 0x40
 80018b2:	1ae3      	subs	r3, r4, r3
 80018b4:	4099      	lsls	r1, r3
 80018b6:	4308      	orrs	r0, r1
 80018b8:	1e41      	subs	r1, r0, #1
 80018ba:	4188      	sbcs	r0, r1
 80018bc:	4338      	orrs	r0, r7
 80018be:	e67c      	b.n	80015ba <__aeabi_dadd+0x2ba>
 80018c0:	2200      	movs	r2, #0
 80018c2:	2400      	movs	r4, #0
 80018c4:	e625      	b.n	8001512 <__aeabi_dadd+0x212>
 80018c6:	1a17      	subs	r7, r2, r0
 80018c8:	4643      	mov	r3, r8
 80018ca:	42ba      	cmp	r2, r7
 80018cc:	4192      	sbcs	r2, r2
 80018ce:	1a59      	subs	r1, r3, r1
 80018d0:	4252      	negs	r2, r2
 80018d2:	1a89      	subs	r1, r1, r2
 80018d4:	4664      	mov	r4, ip
 80018d6:	0035      	movs	r5, r6
 80018d8:	e543      	b.n	8001362 <__aeabi_dadd+0x62>
 80018da:	4641      	mov	r1, r8
 80018dc:	0010      	movs	r0, r2
 80018de:	4d14      	ldr	r5, [pc, #80]	; (8001930 <__aeabi_dadd+0x630>)
 80018e0:	e610      	b.n	8001504 <__aeabi_dadd+0x204>
 80018e2:	2280      	movs	r2, #128	; 0x80
 80018e4:	2400      	movs	r4, #0
 80018e6:	0312      	lsls	r2, r2, #12
 80018e8:	e680      	b.n	80015ec <__aeabi_dadd+0x2ec>
 80018ea:	001d      	movs	r5, r3
 80018ec:	000f      	movs	r7, r1
 80018ee:	3d20      	subs	r5, #32
 80018f0:	40ef      	lsrs	r7, r5
 80018f2:	46bc      	mov	ip, r7
 80018f4:	2b20      	cmp	r3, #32
 80018f6:	d003      	beq.n	8001900 <__aeabi_dadd+0x600>
 80018f8:	2540      	movs	r5, #64	; 0x40
 80018fa:	1aeb      	subs	r3, r5, r3
 80018fc:	4099      	lsls	r1, r3
 80018fe:	4308      	orrs	r0, r1
 8001900:	0007      	movs	r7, r0
 8001902:	4663      	mov	r3, ip
 8001904:	1e78      	subs	r0, r7, #1
 8001906:	4187      	sbcs	r7, r0
 8001908:	431f      	orrs	r7, r3
 800190a:	e769      	b.n	80017e0 <__aeabi_dadd+0x4e0>
 800190c:	1887      	adds	r7, r0, r2
 800190e:	4297      	cmp	r7, r2
 8001910:	419b      	sbcs	r3, r3
 8001912:	4441      	add	r1, r8
 8001914:	425b      	negs	r3, r3
 8001916:	18c9      	adds	r1, r1, r3
 8001918:	0035      	movs	r5, r6
 800191a:	e5a3      	b.n	8001464 <__aeabi_dadd+0x164>
 800191c:	003b      	movs	r3, r7
 800191e:	4333      	orrs	r3, r6
 8001920:	d0ce      	beq.n	80018c0 <__aeabi_dadd+0x5c0>
 8001922:	2207      	movs	r2, #7
 8001924:	0031      	movs	r1, r6
 8001926:	403a      	ands	r2, r7
 8001928:	e652      	b.n	80015d0 <__aeabi_dadd+0x2d0>
 800192a:	2300      	movs	r3, #0
 800192c:	001a      	movs	r2, r3
 800192e:	e5f4      	b.n	800151a <__aeabi_dadd+0x21a>
 8001930:	000007ff 	.word	0x000007ff
 8001934:	ff7fffff 	.word	0xff7fffff

08001938 <__aeabi_ddiv>:
 8001938:	b5f0      	push	{r4, r5, r6, r7, lr}
 800193a:	4657      	mov	r7, sl
 800193c:	46de      	mov	lr, fp
 800193e:	464e      	mov	r6, r9
 8001940:	4645      	mov	r5, r8
 8001942:	b5e0      	push	{r5, r6, r7, lr}
 8001944:	4683      	mov	fp, r0
 8001946:	0007      	movs	r7, r0
 8001948:	030e      	lsls	r6, r1, #12
 800194a:	0048      	lsls	r0, r1, #1
 800194c:	b085      	sub	sp, #20
 800194e:	4692      	mov	sl, r2
 8001950:	001c      	movs	r4, r3
 8001952:	0b36      	lsrs	r6, r6, #12
 8001954:	0d40      	lsrs	r0, r0, #21
 8001956:	0fcd      	lsrs	r5, r1, #31
 8001958:	2800      	cmp	r0, #0
 800195a:	d100      	bne.n	800195e <__aeabi_ddiv+0x26>
 800195c:	e09d      	b.n	8001a9a <__aeabi_ddiv+0x162>
 800195e:	4b95      	ldr	r3, [pc, #596]	; (8001bb4 <__aeabi_ddiv+0x27c>)
 8001960:	4298      	cmp	r0, r3
 8001962:	d039      	beq.n	80019d8 <__aeabi_ddiv+0xa0>
 8001964:	2380      	movs	r3, #128	; 0x80
 8001966:	00f6      	lsls	r6, r6, #3
 8001968:	041b      	lsls	r3, r3, #16
 800196a:	431e      	orrs	r6, r3
 800196c:	4a92      	ldr	r2, [pc, #584]	; (8001bb8 <__aeabi_ddiv+0x280>)
 800196e:	0f7b      	lsrs	r3, r7, #29
 8001970:	4333      	orrs	r3, r6
 8001972:	4699      	mov	r9, r3
 8001974:	4694      	mov	ip, r2
 8001976:	0003      	movs	r3, r0
 8001978:	4463      	add	r3, ip
 800197a:	9300      	str	r3, [sp, #0]
 800197c:	2300      	movs	r3, #0
 800197e:	2600      	movs	r6, #0
 8001980:	00ff      	lsls	r7, r7, #3
 8001982:	9302      	str	r3, [sp, #8]
 8001984:	0323      	lsls	r3, r4, #12
 8001986:	0b1b      	lsrs	r3, r3, #12
 8001988:	4698      	mov	r8, r3
 800198a:	0063      	lsls	r3, r4, #1
 800198c:	0fe4      	lsrs	r4, r4, #31
 800198e:	4652      	mov	r2, sl
 8001990:	0d5b      	lsrs	r3, r3, #21
 8001992:	9401      	str	r4, [sp, #4]
 8001994:	d100      	bne.n	8001998 <__aeabi_ddiv+0x60>
 8001996:	e0b3      	b.n	8001b00 <__aeabi_ddiv+0x1c8>
 8001998:	4986      	ldr	r1, [pc, #536]	; (8001bb4 <__aeabi_ddiv+0x27c>)
 800199a:	428b      	cmp	r3, r1
 800199c:	d100      	bne.n	80019a0 <__aeabi_ddiv+0x68>
 800199e:	e09e      	b.n	8001ade <__aeabi_ddiv+0x1a6>
 80019a0:	4642      	mov	r2, r8
 80019a2:	00d1      	lsls	r1, r2, #3
 80019a4:	2280      	movs	r2, #128	; 0x80
 80019a6:	0412      	lsls	r2, r2, #16
 80019a8:	430a      	orrs	r2, r1
 80019aa:	4651      	mov	r1, sl
 80019ac:	0f49      	lsrs	r1, r1, #29
 80019ae:	4311      	orrs	r1, r2
 80019b0:	468b      	mov	fp, r1
 80019b2:	4981      	ldr	r1, [pc, #516]	; (8001bb8 <__aeabi_ddiv+0x280>)
 80019b4:	4652      	mov	r2, sl
 80019b6:	468c      	mov	ip, r1
 80019b8:	9900      	ldr	r1, [sp, #0]
 80019ba:	4463      	add	r3, ip
 80019bc:	1acb      	subs	r3, r1, r3
 80019be:	2100      	movs	r1, #0
 80019c0:	00d2      	lsls	r2, r2, #3
 80019c2:	9300      	str	r3, [sp, #0]
 80019c4:	002b      	movs	r3, r5
 80019c6:	4063      	eors	r3, r4
 80019c8:	469a      	mov	sl, r3
 80019ca:	2e0f      	cmp	r6, #15
 80019cc:	d900      	bls.n	80019d0 <__aeabi_ddiv+0x98>
 80019ce:	e105      	b.n	8001bdc <__aeabi_ddiv+0x2a4>
 80019d0:	4b7a      	ldr	r3, [pc, #488]	; (8001bbc <__aeabi_ddiv+0x284>)
 80019d2:	00b6      	lsls	r6, r6, #2
 80019d4:	599b      	ldr	r3, [r3, r6]
 80019d6:	469f      	mov	pc, r3
 80019d8:	465b      	mov	r3, fp
 80019da:	4333      	orrs	r3, r6
 80019dc:	4699      	mov	r9, r3
 80019de:	d000      	beq.n	80019e2 <__aeabi_ddiv+0xaa>
 80019e0:	e0b8      	b.n	8001b54 <__aeabi_ddiv+0x21c>
 80019e2:	2302      	movs	r3, #2
 80019e4:	2608      	movs	r6, #8
 80019e6:	2700      	movs	r7, #0
 80019e8:	9000      	str	r0, [sp, #0]
 80019ea:	9302      	str	r3, [sp, #8]
 80019ec:	e7ca      	b.n	8001984 <__aeabi_ddiv+0x4c>
 80019ee:	46cb      	mov	fp, r9
 80019f0:	003a      	movs	r2, r7
 80019f2:	9902      	ldr	r1, [sp, #8]
 80019f4:	9501      	str	r5, [sp, #4]
 80019f6:	9b01      	ldr	r3, [sp, #4]
 80019f8:	469a      	mov	sl, r3
 80019fa:	2902      	cmp	r1, #2
 80019fc:	d027      	beq.n	8001a4e <__aeabi_ddiv+0x116>
 80019fe:	2903      	cmp	r1, #3
 8001a00:	d100      	bne.n	8001a04 <__aeabi_ddiv+0xcc>
 8001a02:	e280      	b.n	8001f06 <__aeabi_ddiv+0x5ce>
 8001a04:	2901      	cmp	r1, #1
 8001a06:	d044      	beq.n	8001a92 <__aeabi_ddiv+0x15a>
 8001a08:	496d      	ldr	r1, [pc, #436]	; (8001bc0 <__aeabi_ddiv+0x288>)
 8001a0a:	9b00      	ldr	r3, [sp, #0]
 8001a0c:	468c      	mov	ip, r1
 8001a0e:	4463      	add	r3, ip
 8001a10:	001c      	movs	r4, r3
 8001a12:	2c00      	cmp	r4, #0
 8001a14:	dd38      	ble.n	8001a88 <__aeabi_ddiv+0x150>
 8001a16:	0753      	lsls	r3, r2, #29
 8001a18:	d000      	beq.n	8001a1c <__aeabi_ddiv+0xe4>
 8001a1a:	e213      	b.n	8001e44 <__aeabi_ddiv+0x50c>
 8001a1c:	08d2      	lsrs	r2, r2, #3
 8001a1e:	465b      	mov	r3, fp
 8001a20:	01db      	lsls	r3, r3, #7
 8001a22:	d509      	bpl.n	8001a38 <__aeabi_ddiv+0x100>
 8001a24:	4659      	mov	r1, fp
 8001a26:	4b67      	ldr	r3, [pc, #412]	; (8001bc4 <__aeabi_ddiv+0x28c>)
 8001a28:	4019      	ands	r1, r3
 8001a2a:	468b      	mov	fp, r1
 8001a2c:	2180      	movs	r1, #128	; 0x80
 8001a2e:	00c9      	lsls	r1, r1, #3
 8001a30:	468c      	mov	ip, r1
 8001a32:	9b00      	ldr	r3, [sp, #0]
 8001a34:	4463      	add	r3, ip
 8001a36:	001c      	movs	r4, r3
 8001a38:	4b63      	ldr	r3, [pc, #396]	; (8001bc8 <__aeabi_ddiv+0x290>)
 8001a3a:	429c      	cmp	r4, r3
 8001a3c:	dc07      	bgt.n	8001a4e <__aeabi_ddiv+0x116>
 8001a3e:	465b      	mov	r3, fp
 8001a40:	0564      	lsls	r4, r4, #21
 8001a42:	075f      	lsls	r7, r3, #29
 8001a44:	025b      	lsls	r3, r3, #9
 8001a46:	4317      	orrs	r7, r2
 8001a48:	0b1b      	lsrs	r3, r3, #12
 8001a4a:	0d62      	lsrs	r2, r4, #21
 8001a4c:	e002      	b.n	8001a54 <__aeabi_ddiv+0x11c>
 8001a4e:	2300      	movs	r3, #0
 8001a50:	2700      	movs	r7, #0
 8001a52:	4a58      	ldr	r2, [pc, #352]	; (8001bb4 <__aeabi_ddiv+0x27c>)
 8001a54:	2100      	movs	r1, #0
 8001a56:	031b      	lsls	r3, r3, #12
 8001a58:	0b1c      	lsrs	r4, r3, #12
 8001a5a:	0d0b      	lsrs	r3, r1, #20
 8001a5c:	051b      	lsls	r3, r3, #20
 8001a5e:	4323      	orrs	r3, r4
 8001a60:	0514      	lsls	r4, r2, #20
 8001a62:	4a5a      	ldr	r2, [pc, #360]	; (8001bcc <__aeabi_ddiv+0x294>)
 8001a64:	0038      	movs	r0, r7
 8001a66:	4013      	ands	r3, r2
 8001a68:	431c      	orrs	r4, r3
 8001a6a:	4653      	mov	r3, sl
 8001a6c:	0064      	lsls	r4, r4, #1
 8001a6e:	07db      	lsls	r3, r3, #31
 8001a70:	0864      	lsrs	r4, r4, #1
 8001a72:	431c      	orrs	r4, r3
 8001a74:	0021      	movs	r1, r4
 8001a76:	b005      	add	sp, #20
 8001a78:	bc3c      	pop	{r2, r3, r4, r5}
 8001a7a:	4690      	mov	r8, r2
 8001a7c:	4699      	mov	r9, r3
 8001a7e:	46a2      	mov	sl, r4
 8001a80:	46ab      	mov	fp, r5
 8001a82:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001a84:	2201      	movs	r2, #1
 8001a86:	4252      	negs	r2, r2
 8001a88:	2301      	movs	r3, #1
 8001a8a:	1b1b      	subs	r3, r3, r4
 8001a8c:	2b38      	cmp	r3, #56	; 0x38
 8001a8e:	dc00      	bgt.n	8001a92 <__aeabi_ddiv+0x15a>
 8001a90:	e1ad      	b.n	8001dee <__aeabi_ddiv+0x4b6>
 8001a92:	2200      	movs	r2, #0
 8001a94:	2300      	movs	r3, #0
 8001a96:	2700      	movs	r7, #0
 8001a98:	e7dc      	b.n	8001a54 <__aeabi_ddiv+0x11c>
 8001a9a:	465b      	mov	r3, fp
 8001a9c:	4333      	orrs	r3, r6
 8001a9e:	4699      	mov	r9, r3
 8001aa0:	d05e      	beq.n	8001b60 <__aeabi_ddiv+0x228>
 8001aa2:	2e00      	cmp	r6, #0
 8001aa4:	d100      	bne.n	8001aa8 <__aeabi_ddiv+0x170>
 8001aa6:	e18a      	b.n	8001dbe <__aeabi_ddiv+0x486>
 8001aa8:	0030      	movs	r0, r6
 8001aaa:	f001 fa19 	bl	8002ee0 <__clzsi2>
 8001aae:	0003      	movs	r3, r0
 8001ab0:	3b0b      	subs	r3, #11
 8001ab2:	2b1c      	cmp	r3, #28
 8001ab4:	dd00      	ble.n	8001ab8 <__aeabi_ddiv+0x180>
 8001ab6:	e17b      	b.n	8001db0 <__aeabi_ddiv+0x478>
 8001ab8:	221d      	movs	r2, #29
 8001aba:	1ad3      	subs	r3, r2, r3
 8001abc:	465a      	mov	r2, fp
 8001abe:	0001      	movs	r1, r0
 8001ac0:	40da      	lsrs	r2, r3
 8001ac2:	3908      	subs	r1, #8
 8001ac4:	408e      	lsls	r6, r1
 8001ac6:	0013      	movs	r3, r2
 8001ac8:	465f      	mov	r7, fp
 8001aca:	4333      	orrs	r3, r6
 8001acc:	4699      	mov	r9, r3
 8001ace:	408f      	lsls	r7, r1
 8001ad0:	4b3f      	ldr	r3, [pc, #252]	; (8001bd0 <__aeabi_ddiv+0x298>)
 8001ad2:	2600      	movs	r6, #0
 8001ad4:	1a1b      	subs	r3, r3, r0
 8001ad6:	9300      	str	r3, [sp, #0]
 8001ad8:	2300      	movs	r3, #0
 8001ada:	9302      	str	r3, [sp, #8]
 8001adc:	e752      	b.n	8001984 <__aeabi_ddiv+0x4c>
 8001ade:	4641      	mov	r1, r8
 8001ae0:	4653      	mov	r3, sl
 8001ae2:	430b      	orrs	r3, r1
 8001ae4:	493b      	ldr	r1, [pc, #236]	; (8001bd4 <__aeabi_ddiv+0x29c>)
 8001ae6:	469b      	mov	fp, r3
 8001ae8:	468c      	mov	ip, r1
 8001aea:	9b00      	ldr	r3, [sp, #0]
 8001aec:	4463      	add	r3, ip
 8001aee:	9300      	str	r3, [sp, #0]
 8001af0:	465b      	mov	r3, fp
 8001af2:	2b00      	cmp	r3, #0
 8001af4:	d13b      	bne.n	8001b6e <__aeabi_ddiv+0x236>
 8001af6:	2302      	movs	r3, #2
 8001af8:	2200      	movs	r2, #0
 8001afa:	431e      	orrs	r6, r3
 8001afc:	2102      	movs	r1, #2
 8001afe:	e761      	b.n	80019c4 <__aeabi_ddiv+0x8c>
 8001b00:	4643      	mov	r3, r8
 8001b02:	4313      	orrs	r3, r2
 8001b04:	469b      	mov	fp, r3
 8001b06:	d037      	beq.n	8001b78 <__aeabi_ddiv+0x240>
 8001b08:	4643      	mov	r3, r8
 8001b0a:	2b00      	cmp	r3, #0
 8001b0c:	d100      	bne.n	8001b10 <__aeabi_ddiv+0x1d8>
 8001b0e:	e162      	b.n	8001dd6 <__aeabi_ddiv+0x49e>
 8001b10:	4640      	mov	r0, r8
 8001b12:	f001 f9e5 	bl	8002ee0 <__clzsi2>
 8001b16:	0003      	movs	r3, r0
 8001b18:	3b0b      	subs	r3, #11
 8001b1a:	2b1c      	cmp	r3, #28
 8001b1c:	dd00      	ble.n	8001b20 <__aeabi_ddiv+0x1e8>
 8001b1e:	e153      	b.n	8001dc8 <__aeabi_ddiv+0x490>
 8001b20:	0002      	movs	r2, r0
 8001b22:	4641      	mov	r1, r8
 8001b24:	3a08      	subs	r2, #8
 8001b26:	4091      	lsls	r1, r2
 8001b28:	4688      	mov	r8, r1
 8001b2a:	211d      	movs	r1, #29
 8001b2c:	1acb      	subs	r3, r1, r3
 8001b2e:	4651      	mov	r1, sl
 8001b30:	40d9      	lsrs	r1, r3
 8001b32:	000b      	movs	r3, r1
 8001b34:	4641      	mov	r1, r8
 8001b36:	430b      	orrs	r3, r1
 8001b38:	469b      	mov	fp, r3
 8001b3a:	4653      	mov	r3, sl
 8001b3c:	4093      	lsls	r3, r2
 8001b3e:	001a      	movs	r2, r3
 8001b40:	9b00      	ldr	r3, [sp, #0]
 8001b42:	4925      	ldr	r1, [pc, #148]	; (8001bd8 <__aeabi_ddiv+0x2a0>)
 8001b44:	469c      	mov	ip, r3
 8001b46:	4460      	add	r0, ip
 8001b48:	0003      	movs	r3, r0
 8001b4a:	468c      	mov	ip, r1
 8001b4c:	4463      	add	r3, ip
 8001b4e:	9300      	str	r3, [sp, #0]
 8001b50:	2100      	movs	r1, #0
 8001b52:	e737      	b.n	80019c4 <__aeabi_ddiv+0x8c>
 8001b54:	2303      	movs	r3, #3
 8001b56:	46b1      	mov	r9, r6
 8001b58:	9000      	str	r0, [sp, #0]
 8001b5a:	260c      	movs	r6, #12
 8001b5c:	9302      	str	r3, [sp, #8]
 8001b5e:	e711      	b.n	8001984 <__aeabi_ddiv+0x4c>
 8001b60:	2300      	movs	r3, #0
 8001b62:	9300      	str	r3, [sp, #0]
 8001b64:	3301      	adds	r3, #1
 8001b66:	2604      	movs	r6, #4
 8001b68:	2700      	movs	r7, #0
 8001b6a:	9302      	str	r3, [sp, #8]
 8001b6c:	e70a      	b.n	8001984 <__aeabi_ddiv+0x4c>
 8001b6e:	2303      	movs	r3, #3
 8001b70:	46c3      	mov	fp, r8
 8001b72:	431e      	orrs	r6, r3
 8001b74:	2103      	movs	r1, #3
 8001b76:	e725      	b.n	80019c4 <__aeabi_ddiv+0x8c>
 8001b78:	3301      	adds	r3, #1
 8001b7a:	431e      	orrs	r6, r3
 8001b7c:	2200      	movs	r2, #0
 8001b7e:	2101      	movs	r1, #1
 8001b80:	e720      	b.n	80019c4 <__aeabi_ddiv+0x8c>
 8001b82:	2300      	movs	r3, #0
 8001b84:	469a      	mov	sl, r3
 8001b86:	2380      	movs	r3, #128	; 0x80
 8001b88:	2700      	movs	r7, #0
 8001b8a:	031b      	lsls	r3, r3, #12
 8001b8c:	4a09      	ldr	r2, [pc, #36]	; (8001bb4 <__aeabi_ddiv+0x27c>)
 8001b8e:	e761      	b.n	8001a54 <__aeabi_ddiv+0x11c>
 8001b90:	2380      	movs	r3, #128	; 0x80
 8001b92:	4649      	mov	r1, r9
 8001b94:	031b      	lsls	r3, r3, #12
 8001b96:	4219      	tst	r1, r3
 8001b98:	d100      	bne.n	8001b9c <__aeabi_ddiv+0x264>
 8001b9a:	e0e2      	b.n	8001d62 <__aeabi_ddiv+0x42a>
 8001b9c:	4659      	mov	r1, fp
 8001b9e:	4219      	tst	r1, r3
 8001ba0:	d000      	beq.n	8001ba4 <__aeabi_ddiv+0x26c>
 8001ba2:	e0de      	b.n	8001d62 <__aeabi_ddiv+0x42a>
 8001ba4:	430b      	orrs	r3, r1
 8001ba6:	031b      	lsls	r3, r3, #12
 8001ba8:	0017      	movs	r7, r2
 8001baa:	0b1b      	lsrs	r3, r3, #12
 8001bac:	46a2      	mov	sl, r4
 8001bae:	4a01      	ldr	r2, [pc, #4]	; (8001bb4 <__aeabi_ddiv+0x27c>)
 8001bb0:	e750      	b.n	8001a54 <__aeabi_ddiv+0x11c>
 8001bb2:	46c0      	nop			; (mov r8, r8)
 8001bb4:	000007ff 	.word	0x000007ff
 8001bb8:	fffffc01 	.word	0xfffffc01
 8001bbc:	080073e0 	.word	0x080073e0
 8001bc0:	000003ff 	.word	0x000003ff
 8001bc4:	feffffff 	.word	0xfeffffff
 8001bc8:	000007fe 	.word	0x000007fe
 8001bcc:	800fffff 	.word	0x800fffff
 8001bd0:	fffffc0d 	.word	0xfffffc0d
 8001bd4:	fffff801 	.word	0xfffff801
 8001bd8:	000003f3 	.word	0x000003f3
 8001bdc:	45d9      	cmp	r9, fp
 8001bde:	d900      	bls.n	8001be2 <__aeabi_ddiv+0x2aa>
 8001be0:	e0cb      	b.n	8001d7a <__aeabi_ddiv+0x442>
 8001be2:	d100      	bne.n	8001be6 <__aeabi_ddiv+0x2ae>
 8001be4:	e0c6      	b.n	8001d74 <__aeabi_ddiv+0x43c>
 8001be6:	003c      	movs	r4, r7
 8001be8:	4648      	mov	r0, r9
 8001bea:	2700      	movs	r7, #0
 8001bec:	9b00      	ldr	r3, [sp, #0]
 8001bee:	3b01      	subs	r3, #1
 8001bf0:	9300      	str	r3, [sp, #0]
 8001bf2:	465b      	mov	r3, fp
 8001bf4:	0e16      	lsrs	r6, r2, #24
 8001bf6:	021b      	lsls	r3, r3, #8
 8001bf8:	431e      	orrs	r6, r3
 8001bfa:	0213      	lsls	r3, r2, #8
 8001bfc:	4698      	mov	r8, r3
 8001bfe:	0433      	lsls	r3, r6, #16
 8001c00:	0c1b      	lsrs	r3, r3, #16
 8001c02:	4699      	mov	r9, r3
 8001c04:	0c31      	lsrs	r1, r6, #16
 8001c06:	9101      	str	r1, [sp, #4]
 8001c08:	f7fe fb16 	bl	8000238 <__aeabi_uidivmod>
 8001c0c:	464a      	mov	r2, r9
 8001c0e:	4342      	muls	r2, r0
 8001c10:	040b      	lsls	r3, r1, #16
 8001c12:	0c21      	lsrs	r1, r4, #16
 8001c14:	0005      	movs	r5, r0
 8001c16:	4319      	orrs	r1, r3
 8001c18:	428a      	cmp	r2, r1
 8001c1a:	d907      	bls.n	8001c2c <__aeabi_ddiv+0x2f4>
 8001c1c:	1989      	adds	r1, r1, r6
 8001c1e:	3d01      	subs	r5, #1
 8001c20:	428e      	cmp	r6, r1
 8001c22:	d803      	bhi.n	8001c2c <__aeabi_ddiv+0x2f4>
 8001c24:	428a      	cmp	r2, r1
 8001c26:	d901      	bls.n	8001c2c <__aeabi_ddiv+0x2f4>
 8001c28:	1e85      	subs	r5, r0, #2
 8001c2a:	1989      	adds	r1, r1, r6
 8001c2c:	1a88      	subs	r0, r1, r2
 8001c2e:	9901      	ldr	r1, [sp, #4]
 8001c30:	f7fe fb02 	bl	8000238 <__aeabi_uidivmod>
 8001c34:	0409      	lsls	r1, r1, #16
 8001c36:	468c      	mov	ip, r1
 8001c38:	464a      	mov	r2, r9
 8001c3a:	0421      	lsls	r1, r4, #16
 8001c3c:	4664      	mov	r4, ip
 8001c3e:	4342      	muls	r2, r0
 8001c40:	0c09      	lsrs	r1, r1, #16
 8001c42:	0003      	movs	r3, r0
 8001c44:	4321      	orrs	r1, r4
 8001c46:	428a      	cmp	r2, r1
 8001c48:	d904      	bls.n	8001c54 <__aeabi_ddiv+0x31c>
 8001c4a:	1989      	adds	r1, r1, r6
 8001c4c:	3b01      	subs	r3, #1
 8001c4e:	428e      	cmp	r6, r1
 8001c50:	d800      	bhi.n	8001c54 <__aeabi_ddiv+0x31c>
 8001c52:	e0f1      	b.n	8001e38 <__aeabi_ddiv+0x500>
 8001c54:	042d      	lsls	r5, r5, #16
 8001c56:	431d      	orrs	r5, r3
 8001c58:	46ab      	mov	fp, r5
 8001c5a:	4643      	mov	r3, r8
 8001c5c:	1a89      	subs	r1, r1, r2
 8001c5e:	4642      	mov	r2, r8
 8001c60:	0c28      	lsrs	r0, r5, #16
 8001c62:	0412      	lsls	r2, r2, #16
 8001c64:	0c1d      	lsrs	r5, r3, #16
 8001c66:	465b      	mov	r3, fp
 8001c68:	0c14      	lsrs	r4, r2, #16
 8001c6a:	0022      	movs	r2, r4
 8001c6c:	041b      	lsls	r3, r3, #16
 8001c6e:	0c1b      	lsrs	r3, r3, #16
 8001c70:	435a      	muls	r2, r3
 8001c72:	9403      	str	r4, [sp, #12]
 8001c74:	436b      	muls	r3, r5
 8001c76:	4344      	muls	r4, r0
 8001c78:	9502      	str	r5, [sp, #8]
 8001c7a:	4368      	muls	r0, r5
 8001c7c:	191b      	adds	r3, r3, r4
 8001c7e:	0c15      	lsrs	r5, r2, #16
 8001c80:	18eb      	adds	r3, r5, r3
 8001c82:	429c      	cmp	r4, r3
 8001c84:	d903      	bls.n	8001c8e <__aeabi_ddiv+0x356>
 8001c86:	2480      	movs	r4, #128	; 0x80
 8001c88:	0264      	lsls	r4, r4, #9
 8001c8a:	46a4      	mov	ip, r4
 8001c8c:	4460      	add	r0, ip
 8001c8e:	0c1c      	lsrs	r4, r3, #16
 8001c90:	0415      	lsls	r5, r2, #16
 8001c92:	041b      	lsls	r3, r3, #16
 8001c94:	0c2d      	lsrs	r5, r5, #16
 8001c96:	1820      	adds	r0, r4, r0
 8001c98:	195d      	adds	r5, r3, r5
 8001c9a:	4281      	cmp	r1, r0
 8001c9c:	d377      	bcc.n	8001d8e <__aeabi_ddiv+0x456>
 8001c9e:	d073      	beq.n	8001d88 <__aeabi_ddiv+0x450>
 8001ca0:	1a0c      	subs	r4, r1, r0
 8001ca2:	4aa2      	ldr	r2, [pc, #648]	; (8001f2c <__aeabi_ddiv+0x5f4>)
 8001ca4:	1b7d      	subs	r5, r7, r5
 8001ca6:	42af      	cmp	r7, r5
 8001ca8:	41bf      	sbcs	r7, r7
 8001caa:	4694      	mov	ip, r2
 8001cac:	9b00      	ldr	r3, [sp, #0]
 8001cae:	427f      	negs	r7, r7
 8001cb0:	4463      	add	r3, ip
 8001cb2:	1be0      	subs	r0, r4, r7
 8001cb4:	001c      	movs	r4, r3
 8001cb6:	4286      	cmp	r6, r0
 8001cb8:	d100      	bne.n	8001cbc <__aeabi_ddiv+0x384>
 8001cba:	e0db      	b.n	8001e74 <__aeabi_ddiv+0x53c>
 8001cbc:	9901      	ldr	r1, [sp, #4]
 8001cbe:	f7fe fabb 	bl	8000238 <__aeabi_uidivmod>
 8001cc2:	464a      	mov	r2, r9
 8001cc4:	4342      	muls	r2, r0
 8001cc6:	040b      	lsls	r3, r1, #16
 8001cc8:	0c29      	lsrs	r1, r5, #16
 8001cca:	0007      	movs	r7, r0
 8001ccc:	4319      	orrs	r1, r3
 8001cce:	428a      	cmp	r2, r1
 8001cd0:	d907      	bls.n	8001ce2 <__aeabi_ddiv+0x3aa>
 8001cd2:	1989      	adds	r1, r1, r6
 8001cd4:	3f01      	subs	r7, #1
 8001cd6:	428e      	cmp	r6, r1
 8001cd8:	d803      	bhi.n	8001ce2 <__aeabi_ddiv+0x3aa>
 8001cda:	428a      	cmp	r2, r1
 8001cdc:	d901      	bls.n	8001ce2 <__aeabi_ddiv+0x3aa>
 8001cde:	1e87      	subs	r7, r0, #2
 8001ce0:	1989      	adds	r1, r1, r6
 8001ce2:	1a88      	subs	r0, r1, r2
 8001ce4:	9901      	ldr	r1, [sp, #4]
 8001ce6:	f7fe faa7 	bl	8000238 <__aeabi_uidivmod>
 8001cea:	0409      	lsls	r1, r1, #16
 8001cec:	464a      	mov	r2, r9
 8001cee:	4689      	mov	r9, r1
 8001cf0:	0429      	lsls	r1, r5, #16
 8001cf2:	464d      	mov	r5, r9
 8001cf4:	4342      	muls	r2, r0
 8001cf6:	0c09      	lsrs	r1, r1, #16
 8001cf8:	0003      	movs	r3, r0
 8001cfa:	4329      	orrs	r1, r5
 8001cfc:	428a      	cmp	r2, r1
 8001cfe:	d907      	bls.n	8001d10 <__aeabi_ddiv+0x3d8>
 8001d00:	1989      	adds	r1, r1, r6
 8001d02:	3b01      	subs	r3, #1
 8001d04:	428e      	cmp	r6, r1
 8001d06:	d803      	bhi.n	8001d10 <__aeabi_ddiv+0x3d8>
 8001d08:	428a      	cmp	r2, r1
 8001d0a:	d901      	bls.n	8001d10 <__aeabi_ddiv+0x3d8>
 8001d0c:	1e83      	subs	r3, r0, #2
 8001d0e:	1989      	adds	r1, r1, r6
 8001d10:	043f      	lsls	r7, r7, #16
 8001d12:	1a89      	subs	r1, r1, r2
 8001d14:	003a      	movs	r2, r7
 8001d16:	9f03      	ldr	r7, [sp, #12]
 8001d18:	431a      	orrs	r2, r3
 8001d1a:	0038      	movs	r0, r7
 8001d1c:	0413      	lsls	r3, r2, #16
 8001d1e:	0c1b      	lsrs	r3, r3, #16
 8001d20:	4358      	muls	r0, r3
 8001d22:	4681      	mov	r9, r0
 8001d24:	9802      	ldr	r0, [sp, #8]
 8001d26:	0c15      	lsrs	r5, r2, #16
 8001d28:	436f      	muls	r7, r5
 8001d2a:	4343      	muls	r3, r0
 8001d2c:	4345      	muls	r5, r0
 8001d2e:	4648      	mov	r0, r9
 8001d30:	0c00      	lsrs	r0, r0, #16
 8001d32:	4684      	mov	ip, r0
 8001d34:	19db      	adds	r3, r3, r7
 8001d36:	4463      	add	r3, ip
 8001d38:	429f      	cmp	r7, r3
 8001d3a:	d903      	bls.n	8001d44 <__aeabi_ddiv+0x40c>
 8001d3c:	2080      	movs	r0, #128	; 0x80
 8001d3e:	0240      	lsls	r0, r0, #9
 8001d40:	4684      	mov	ip, r0
 8001d42:	4465      	add	r5, ip
 8001d44:	4648      	mov	r0, r9
 8001d46:	0c1f      	lsrs	r7, r3, #16
 8001d48:	0400      	lsls	r0, r0, #16
 8001d4a:	041b      	lsls	r3, r3, #16
 8001d4c:	0c00      	lsrs	r0, r0, #16
 8001d4e:	197d      	adds	r5, r7, r5
 8001d50:	1818      	adds	r0, r3, r0
 8001d52:	42a9      	cmp	r1, r5
 8001d54:	d200      	bcs.n	8001d58 <__aeabi_ddiv+0x420>
 8001d56:	e084      	b.n	8001e62 <__aeabi_ddiv+0x52a>
 8001d58:	d100      	bne.n	8001d5c <__aeabi_ddiv+0x424>
 8001d5a:	e07f      	b.n	8001e5c <__aeabi_ddiv+0x524>
 8001d5c:	2301      	movs	r3, #1
 8001d5e:	431a      	orrs	r2, r3
 8001d60:	e657      	b.n	8001a12 <__aeabi_ddiv+0xda>
 8001d62:	2380      	movs	r3, #128	; 0x80
 8001d64:	464a      	mov	r2, r9
 8001d66:	031b      	lsls	r3, r3, #12
 8001d68:	4313      	orrs	r3, r2
 8001d6a:	031b      	lsls	r3, r3, #12
 8001d6c:	0b1b      	lsrs	r3, r3, #12
 8001d6e:	46aa      	mov	sl, r5
 8001d70:	4a6f      	ldr	r2, [pc, #444]	; (8001f30 <__aeabi_ddiv+0x5f8>)
 8001d72:	e66f      	b.n	8001a54 <__aeabi_ddiv+0x11c>
 8001d74:	42ba      	cmp	r2, r7
 8001d76:	d900      	bls.n	8001d7a <__aeabi_ddiv+0x442>
 8001d78:	e735      	b.n	8001be6 <__aeabi_ddiv+0x2ae>
 8001d7a:	464b      	mov	r3, r9
 8001d7c:	07dc      	lsls	r4, r3, #31
 8001d7e:	0858      	lsrs	r0, r3, #1
 8001d80:	087b      	lsrs	r3, r7, #1
 8001d82:	431c      	orrs	r4, r3
 8001d84:	07ff      	lsls	r7, r7, #31
 8001d86:	e734      	b.n	8001bf2 <__aeabi_ddiv+0x2ba>
 8001d88:	2400      	movs	r4, #0
 8001d8a:	42af      	cmp	r7, r5
 8001d8c:	d289      	bcs.n	8001ca2 <__aeabi_ddiv+0x36a>
 8001d8e:	4447      	add	r7, r8
 8001d90:	4547      	cmp	r7, r8
 8001d92:	41a4      	sbcs	r4, r4
 8001d94:	465b      	mov	r3, fp
 8001d96:	4264      	negs	r4, r4
 8001d98:	19a4      	adds	r4, r4, r6
 8001d9a:	1864      	adds	r4, r4, r1
 8001d9c:	3b01      	subs	r3, #1
 8001d9e:	42a6      	cmp	r6, r4
 8001da0:	d21e      	bcs.n	8001de0 <__aeabi_ddiv+0x4a8>
 8001da2:	42a0      	cmp	r0, r4
 8001da4:	d86d      	bhi.n	8001e82 <__aeabi_ddiv+0x54a>
 8001da6:	d100      	bne.n	8001daa <__aeabi_ddiv+0x472>
 8001da8:	e0b6      	b.n	8001f18 <__aeabi_ddiv+0x5e0>
 8001daa:	1a24      	subs	r4, r4, r0
 8001dac:	469b      	mov	fp, r3
 8001dae:	e778      	b.n	8001ca2 <__aeabi_ddiv+0x36a>
 8001db0:	0003      	movs	r3, r0
 8001db2:	465a      	mov	r2, fp
 8001db4:	3b28      	subs	r3, #40	; 0x28
 8001db6:	409a      	lsls	r2, r3
 8001db8:	2700      	movs	r7, #0
 8001dba:	4691      	mov	r9, r2
 8001dbc:	e688      	b.n	8001ad0 <__aeabi_ddiv+0x198>
 8001dbe:	4658      	mov	r0, fp
 8001dc0:	f001 f88e 	bl	8002ee0 <__clzsi2>
 8001dc4:	3020      	adds	r0, #32
 8001dc6:	e672      	b.n	8001aae <__aeabi_ddiv+0x176>
 8001dc8:	0003      	movs	r3, r0
 8001dca:	4652      	mov	r2, sl
 8001dcc:	3b28      	subs	r3, #40	; 0x28
 8001dce:	409a      	lsls	r2, r3
 8001dd0:	4693      	mov	fp, r2
 8001dd2:	2200      	movs	r2, #0
 8001dd4:	e6b4      	b.n	8001b40 <__aeabi_ddiv+0x208>
 8001dd6:	4650      	mov	r0, sl
 8001dd8:	f001 f882 	bl	8002ee0 <__clzsi2>
 8001ddc:	3020      	adds	r0, #32
 8001dde:	e69a      	b.n	8001b16 <__aeabi_ddiv+0x1de>
 8001de0:	42a6      	cmp	r6, r4
 8001de2:	d1e2      	bne.n	8001daa <__aeabi_ddiv+0x472>
 8001de4:	45b8      	cmp	r8, r7
 8001de6:	d9dc      	bls.n	8001da2 <__aeabi_ddiv+0x46a>
 8001de8:	1a34      	subs	r4, r6, r0
 8001dea:	469b      	mov	fp, r3
 8001dec:	e759      	b.n	8001ca2 <__aeabi_ddiv+0x36a>
 8001dee:	2b1f      	cmp	r3, #31
 8001df0:	dc65      	bgt.n	8001ebe <__aeabi_ddiv+0x586>
 8001df2:	4c50      	ldr	r4, [pc, #320]	; (8001f34 <__aeabi_ddiv+0x5fc>)
 8001df4:	9900      	ldr	r1, [sp, #0]
 8001df6:	46a4      	mov	ip, r4
 8001df8:	465c      	mov	r4, fp
 8001dfa:	4461      	add	r1, ip
 8001dfc:	0008      	movs	r0, r1
 8001dfe:	408c      	lsls	r4, r1
 8001e00:	0011      	movs	r1, r2
 8001e02:	4082      	lsls	r2, r0
 8001e04:	40d9      	lsrs	r1, r3
 8001e06:	1e50      	subs	r0, r2, #1
 8001e08:	4182      	sbcs	r2, r0
 8001e0a:	430c      	orrs	r4, r1
 8001e0c:	4314      	orrs	r4, r2
 8001e0e:	465a      	mov	r2, fp
 8001e10:	40da      	lsrs	r2, r3
 8001e12:	0013      	movs	r3, r2
 8001e14:	0762      	lsls	r2, r4, #29
 8001e16:	d009      	beq.n	8001e2c <__aeabi_ddiv+0x4f4>
 8001e18:	220f      	movs	r2, #15
 8001e1a:	4022      	ands	r2, r4
 8001e1c:	2a04      	cmp	r2, #4
 8001e1e:	d005      	beq.n	8001e2c <__aeabi_ddiv+0x4f4>
 8001e20:	0022      	movs	r2, r4
 8001e22:	1d14      	adds	r4, r2, #4
 8001e24:	4294      	cmp	r4, r2
 8001e26:	4189      	sbcs	r1, r1
 8001e28:	4249      	negs	r1, r1
 8001e2a:	185b      	adds	r3, r3, r1
 8001e2c:	021a      	lsls	r2, r3, #8
 8001e2e:	d562      	bpl.n	8001ef6 <__aeabi_ddiv+0x5be>
 8001e30:	2201      	movs	r2, #1
 8001e32:	2300      	movs	r3, #0
 8001e34:	2700      	movs	r7, #0
 8001e36:	e60d      	b.n	8001a54 <__aeabi_ddiv+0x11c>
 8001e38:	428a      	cmp	r2, r1
 8001e3a:	d800      	bhi.n	8001e3e <__aeabi_ddiv+0x506>
 8001e3c:	e70a      	b.n	8001c54 <__aeabi_ddiv+0x31c>
 8001e3e:	1e83      	subs	r3, r0, #2
 8001e40:	1989      	adds	r1, r1, r6
 8001e42:	e707      	b.n	8001c54 <__aeabi_ddiv+0x31c>
 8001e44:	230f      	movs	r3, #15
 8001e46:	4013      	ands	r3, r2
 8001e48:	2b04      	cmp	r3, #4
 8001e4a:	d100      	bne.n	8001e4e <__aeabi_ddiv+0x516>
 8001e4c:	e5e6      	b.n	8001a1c <__aeabi_ddiv+0xe4>
 8001e4e:	1d17      	adds	r7, r2, #4
 8001e50:	4297      	cmp	r7, r2
 8001e52:	4192      	sbcs	r2, r2
 8001e54:	4253      	negs	r3, r2
 8001e56:	449b      	add	fp, r3
 8001e58:	08fa      	lsrs	r2, r7, #3
 8001e5a:	e5e0      	b.n	8001a1e <__aeabi_ddiv+0xe6>
 8001e5c:	2800      	cmp	r0, #0
 8001e5e:	d100      	bne.n	8001e62 <__aeabi_ddiv+0x52a>
 8001e60:	e5d7      	b.n	8001a12 <__aeabi_ddiv+0xda>
 8001e62:	1871      	adds	r1, r6, r1
 8001e64:	1e53      	subs	r3, r2, #1
 8001e66:	42b1      	cmp	r1, r6
 8001e68:	d327      	bcc.n	8001eba <__aeabi_ddiv+0x582>
 8001e6a:	42a9      	cmp	r1, r5
 8001e6c:	d315      	bcc.n	8001e9a <__aeabi_ddiv+0x562>
 8001e6e:	d058      	beq.n	8001f22 <__aeabi_ddiv+0x5ea>
 8001e70:	001a      	movs	r2, r3
 8001e72:	e773      	b.n	8001d5c <__aeabi_ddiv+0x424>
 8001e74:	2b00      	cmp	r3, #0
 8001e76:	dc00      	bgt.n	8001e7a <__aeabi_ddiv+0x542>
 8001e78:	e604      	b.n	8001a84 <__aeabi_ddiv+0x14c>
 8001e7a:	2301      	movs	r3, #1
 8001e7c:	2200      	movs	r2, #0
 8001e7e:	449b      	add	fp, r3
 8001e80:	e5cd      	b.n	8001a1e <__aeabi_ddiv+0xe6>
 8001e82:	2302      	movs	r3, #2
 8001e84:	4447      	add	r7, r8
 8001e86:	4547      	cmp	r7, r8
 8001e88:	4189      	sbcs	r1, r1
 8001e8a:	425b      	negs	r3, r3
 8001e8c:	469c      	mov	ip, r3
 8001e8e:	4249      	negs	r1, r1
 8001e90:	1989      	adds	r1, r1, r6
 8001e92:	190c      	adds	r4, r1, r4
 8001e94:	44e3      	add	fp, ip
 8001e96:	1a24      	subs	r4, r4, r0
 8001e98:	e703      	b.n	8001ca2 <__aeabi_ddiv+0x36a>
 8001e9a:	4643      	mov	r3, r8
 8001e9c:	005f      	lsls	r7, r3, #1
 8001e9e:	4547      	cmp	r7, r8
 8001ea0:	419b      	sbcs	r3, r3
 8001ea2:	46b8      	mov	r8, r7
 8001ea4:	425b      	negs	r3, r3
 8001ea6:	199e      	adds	r6, r3, r6
 8001ea8:	3a02      	subs	r2, #2
 8001eaa:	1989      	adds	r1, r1, r6
 8001eac:	42a9      	cmp	r1, r5
 8001eae:	d000      	beq.n	8001eb2 <__aeabi_ddiv+0x57a>
 8001eb0:	e754      	b.n	8001d5c <__aeabi_ddiv+0x424>
 8001eb2:	4540      	cmp	r0, r8
 8001eb4:	d000      	beq.n	8001eb8 <__aeabi_ddiv+0x580>
 8001eb6:	e751      	b.n	8001d5c <__aeabi_ddiv+0x424>
 8001eb8:	e5ab      	b.n	8001a12 <__aeabi_ddiv+0xda>
 8001eba:	001a      	movs	r2, r3
 8001ebc:	e7f6      	b.n	8001eac <__aeabi_ddiv+0x574>
 8001ebe:	211f      	movs	r1, #31
 8001ec0:	465f      	mov	r7, fp
 8001ec2:	4249      	negs	r1, r1
 8001ec4:	1b0c      	subs	r4, r1, r4
 8001ec6:	40e7      	lsrs	r7, r4
 8001ec8:	2b20      	cmp	r3, #32
 8001eca:	d007      	beq.n	8001edc <__aeabi_ddiv+0x5a4>
 8001ecc:	491a      	ldr	r1, [pc, #104]	; (8001f38 <__aeabi_ddiv+0x600>)
 8001ece:	9b00      	ldr	r3, [sp, #0]
 8001ed0:	468c      	mov	ip, r1
 8001ed2:	4463      	add	r3, ip
 8001ed4:	0018      	movs	r0, r3
 8001ed6:	465b      	mov	r3, fp
 8001ed8:	4083      	lsls	r3, r0
 8001eda:	431a      	orrs	r2, r3
 8001edc:	1e50      	subs	r0, r2, #1
 8001ede:	4182      	sbcs	r2, r0
 8001ee0:	433a      	orrs	r2, r7
 8001ee2:	2707      	movs	r7, #7
 8001ee4:	2300      	movs	r3, #0
 8001ee6:	4017      	ands	r7, r2
 8001ee8:	d009      	beq.n	8001efe <__aeabi_ddiv+0x5c6>
 8001eea:	210f      	movs	r1, #15
 8001eec:	2300      	movs	r3, #0
 8001eee:	4011      	ands	r1, r2
 8001ef0:	0014      	movs	r4, r2
 8001ef2:	2904      	cmp	r1, #4
 8001ef4:	d195      	bne.n	8001e22 <__aeabi_ddiv+0x4ea>
 8001ef6:	0022      	movs	r2, r4
 8001ef8:	075f      	lsls	r7, r3, #29
 8001efa:	025b      	lsls	r3, r3, #9
 8001efc:	0b1b      	lsrs	r3, r3, #12
 8001efe:	08d2      	lsrs	r2, r2, #3
 8001f00:	4317      	orrs	r7, r2
 8001f02:	2200      	movs	r2, #0
 8001f04:	e5a6      	b.n	8001a54 <__aeabi_ddiv+0x11c>
 8001f06:	2380      	movs	r3, #128	; 0x80
 8001f08:	4659      	mov	r1, fp
 8001f0a:	031b      	lsls	r3, r3, #12
 8001f0c:	430b      	orrs	r3, r1
 8001f0e:	031b      	lsls	r3, r3, #12
 8001f10:	0017      	movs	r7, r2
 8001f12:	0b1b      	lsrs	r3, r3, #12
 8001f14:	4a06      	ldr	r2, [pc, #24]	; (8001f30 <__aeabi_ddiv+0x5f8>)
 8001f16:	e59d      	b.n	8001a54 <__aeabi_ddiv+0x11c>
 8001f18:	42bd      	cmp	r5, r7
 8001f1a:	d8b2      	bhi.n	8001e82 <__aeabi_ddiv+0x54a>
 8001f1c:	469b      	mov	fp, r3
 8001f1e:	2400      	movs	r4, #0
 8001f20:	e6bf      	b.n	8001ca2 <__aeabi_ddiv+0x36a>
 8001f22:	4580      	cmp	r8, r0
 8001f24:	d3b9      	bcc.n	8001e9a <__aeabi_ddiv+0x562>
 8001f26:	001a      	movs	r2, r3
 8001f28:	e7c3      	b.n	8001eb2 <__aeabi_ddiv+0x57a>
 8001f2a:	46c0      	nop			; (mov r8, r8)
 8001f2c:	000003ff 	.word	0x000003ff
 8001f30:	000007ff 	.word	0x000007ff
 8001f34:	0000041e 	.word	0x0000041e
 8001f38:	0000043e 	.word	0x0000043e

08001f3c <__eqdf2>:
 8001f3c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001f3e:	464f      	mov	r7, r9
 8001f40:	4646      	mov	r6, r8
 8001f42:	46d6      	mov	lr, sl
 8001f44:	4684      	mov	ip, r0
 8001f46:	b5c0      	push	{r6, r7, lr}
 8001f48:	4680      	mov	r8, r0
 8001f4a:	4e19      	ldr	r6, [pc, #100]	; (8001fb0 <__eqdf2+0x74>)
 8001f4c:	0318      	lsls	r0, r3, #12
 8001f4e:	030f      	lsls	r7, r1, #12
 8001f50:	004d      	lsls	r5, r1, #1
 8001f52:	0b00      	lsrs	r0, r0, #12
 8001f54:	005c      	lsls	r4, r3, #1
 8001f56:	4682      	mov	sl, r0
 8001f58:	0b3f      	lsrs	r7, r7, #12
 8001f5a:	0d6d      	lsrs	r5, r5, #21
 8001f5c:	0fc9      	lsrs	r1, r1, #31
 8001f5e:	4691      	mov	r9, r2
 8001f60:	0d64      	lsrs	r4, r4, #21
 8001f62:	0fdb      	lsrs	r3, r3, #31
 8001f64:	2001      	movs	r0, #1
 8001f66:	42b5      	cmp	r5, r6
 8001f68:	d00a      	beq.n	8001f80 <__eqdf2+0x44>
 8001f6a:	42b4      	cmp	r4, r6
 8001f6c:	d003      	beq.n	8001f76 <__eqdf2+0x3a>
 8001f6e:	42a5      	cmp	r5, r4
 8001f70:	d101      	bne.n	8001f76 <__eqdf2+0x3a>
 8001f72:	4557      	cmp	r7, sl
 8001f74:	d00c      	beq.n	8001f90 <__eqdf2+0x54>
 8001f76:	bc1c      	pop	{r2, r3, r4}
 8001f78:	4690      	mov	r8, r2
 8001f7a:	4699      	mov	r9, r3
 8001f7c:	46a2      	mov	sl, r4
 8001f7e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001f80:	4666      	mov	r6, ip
 8001f82:	433e      	orrs	r6, r7
 8001f84:	d1f7      	bne.n	8001f76 <__eqdf2+0x3a>
 8001f86:	42ac      	cmp	r4, r5
 8001f88:	d1f5      	bne.n	8001f76 <__eqdf2+0x3a>
 8001f8a:	4654      	mov	r4, sl
 8001f8c:	4314      	orrs	r4, r2
 8001f8e:	d1f2      	bne.n	8001f76 <__eqdf2+0x3a>
 8001f90:	2001      	movs	r0, #1
 8001f92:	45c8      	cmp	r8, r9
 8001f94:	d1ef      	bne.n	8001f76 <__eqdf2+0x3a>
 8001f96:	4299      	cmp	r1, r3
 8001f98:	d007      	beq.n	8001faa <__eqdf2+0x6e>
 8001f9a:	2d00      	cmp	r5, #0
 8001f9c:	d1eb      	bne.n	8001f76 <__eqdf2+0x3a>
 8001f9e:	4663      	mov	r3, ip
 8001fa0:	431f      	orrs	r7, r3
 8001fa2:	0038      	movs	r0, r7
 8001fa4:	1e47      	subs	r7, r0, #1
 8001fa6:	41b8      	sbcs	r0, r7
 8001fa8:	e7e5      	b.n	8001f76 <__eqdf2+0x3a>
 8001faa:	2000      	movs	r0, #0
 8001fac:	e7e3      	b.n	8001f76 <__eqdf2+0x3a>
 8001fae:	46c0      	nop			; (mov r8, r8)
 8001fb0:	000007ff 	.word	0x000007ff

08001fb4 <__gedf2>:
 8001fb4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001fb6:	464f      	mov	r7, r9
 8001fb8:	4646      	mov	r6, r8
 8001fba:	46d6      	mov	lr, sl
 8001fbc:	004d      	lsls	r5, r1, #1
 8001fbe:	b5c0      	push	{r6, r7, lr}
 8001fc0:	030e      	lsls	r6, r1, #12
 8001fc2:	0fc9      	lsrs	r1, r1, #31
 8001fc4:	468a      	mov	sl, r1
 8001fc6:	492c      	ldr	r1, [pc, #176]	; (8002078 <__gedf2+0xc4>)
 8001fc8:	031f      	lsls	r7, r3, #12
 8001fca:	005c      	lsls	r4, r3, #1
 8001fcc:	4680      	mov	r8, r0
 8001fce:	0b36      	lsrs	r6, r6, #12
 8001fd0:	0d6d      	lsrs	r5, r5, #21
 8001fd2:	4691      	mov	r9, r2
 8001fd4:	0b3f      	lsrs	r7, r7, #12
 8001fd6:	0d64      	lsrs	r4, r4, #21
 8001fd8:	0fdb      	lsrs	r3, r3, #31
 8001fda:	428d      	cmp	r5, r1
 8001fdc:	d01e      	beq.n	800201c <__gedf2+0x68>
 8001fde:	428c      	cmp	r4, r1
 8001fe0:	d016      	beq.n	8002010 <__gedf2+0x5c>
 8001fe2:	2d00      	cmp	r5, #0
 8001fe4:	d11e      	bne.n	8002024 <__gedf2+0x70>
 8001fe6:	4330      	orrs	r0, r6
 8001fe8:	4684      	mov	ip, r0
 8001fea:	2c00      	cmp	r4, #0
 8001fec:	d101      	bne.n	8001ff2 <__gedf2+0x3e>
 8001fee:	433a      	orrs	r2, r7
 8001ff0:	d023      	beq.n	800203a <__gedf2+0x86>
 8001ff2:	4662      	mov	r2, ip
 8001ff4:	2a00      	cmp	r2, #0
 8001ff6:	d01a      	beq.n	800202e <__gedf2+0x7a>
 8001ff8:	459a      	cmp	sl, r3
 8001ffa:	d029      	beq.n	8002050 <__gedf2+0x9c>
 8001ffc:	4651      	mov	r1, sl
 8001ffe:	2002      	movs	r0, #2
 8002000:	3901      	subs	r1, #1
 8002002:	4008      	ands	r0, r1
 8002004:	3801      	subs	r0, #1
 8002006:	bc1c      	pop	{r2, r3, r4}
 8002008:	4690      	mov	r8, r2
 800200a:	4699      	mov	r9, r3
 800200c:	46a2      	mov	sl, r4
 800200e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002010:	0039      	movs	r1, r7
 8002012:	4311      	orrs	r1, r2
 8002014:	d0e5      	beq.n	8001fe2 <__gedf2+0x2e>
 8002016:	2002      	movs	r0, #2
 8002018:	4240      	negs	r0, r0
 800201a:	e7f4      	b.n	8002006 <__gedf2+0x52>
 800201c:	4330      	orrs	r0, r6
 800201e:	d1fa      	bne.n	8002016 <__gedf2+0x62>
 8002020:	42ac      	cmp	r4, r5
 8002022:	d00f      	beq.n	8002044 <__gedf2+0x90>
 8002024:	2c00      	cmp	r4, #0
 8002026:	d10f      	bne.n	8002048 <__gedf2+0x94>
 8002028:	433a      	orrs	r2, r7
 800202a:	d0e7      	beq.n	8001ffc <__gedf2+0x48>
 800202c:	e00c      	b.n	8002048 <__gedf2+0x94>
 800202e:	2201      	movs	r2, #1
 8002030:	3b01      	subs	r3, #1
 8002032:	4393      	bics	r3, r2
 8002034:	0018      	movs	r0, r3
 8002036:	3001      	adds	r0, #1
 8002038:	e7e5      	b.n	8002006 <__gedf2+0x52>
 800203a:	4663      	mov	r3, ip
 800203c:	2000      	movs	r0, #0
 800203e:	2b00      	cmp	r3, #0
 8002040:	d0e1      	beq.n	8002006 <__gedf2+0x52>
 8002042:	e7db      	b.n	8001ffc <__gedf2+0x48>
 8002044:	433a      	orrs	r2, r7
 8002046:	d1e6      	bne.n	8002016 <__gedf2+0x62>
 8002048:	459a      	cmp	sl, r3
 800204a:	d1d7      	bne.n	8001ffc <__gedf2+0x48>
 800204c:	42a5      	cmp	r5, r4
 800204e:	dcd5      	bgt.n	8001ffc <__gedf2+0x48>
 8002050:	42a5      	cmp	r5, r4
 8002052:	db05      	blt.n	8002060 <__gedf2+0xac>
 8002054:	42be      	cmp	r6, r7
 8002056:	d8d1      	bhi.n	8001ffc <__gedf2+0x48>
 8002058:	d008      	beq.n	800206c <__gedf2+0xb8>
 800205a:	2000      	movs	r0, #0
 800205c:	42be      	cmp	r6, r7
 800205e:	d2d2      	bcs.n	8002006 <__gedf2+0x52>
 8002060:	4650      	mov	r0, sl
 8002062:	2301      	movs	r3, #1
 8002064:	3801      	subs	r0, #1
 8002066:	4398      	bics	r0, r3
 8002068:	3001      	adds	r0, #1
 800206a:	e7cc      	b.n	8002006 <__gedf2+0x52>
 800206c:	45c8      	cmp	r8, r9
 800206e:	d8c5      	bhi.n	8001ffc <__gedf2+0x48>
 8002070:	2000      	movs	r0, #0
 8002072:	45c8      	cmp	r8, r9
 8002074:	d3f4      	bcc.n	8002060 <__gedf2+0xac>
 8002076:	e7c6      	b.n	8002006 <__gedf2+0x52>
 8002078:	000007ff 	.word	0x000007ff

0800207c <__ledf2>:
 800207c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800207e:	464f      	mov	r7, r9
 8002080:	4646      	mov	r6, r8
 8002082:	46d6      	mov	lr, sl
 8002084:	004d      	lsls	r5, r1, #1
 8002086:	b5c0      	push	{r6, r7, lr}
 8002088:	030e      	lsls	r6, r1, #12
 800208a:	0fc9      	lsrs	r1, r1, #31
 800208c:	468a      	mov	sl, r1
 800208e:	492e      	ldr	r1, [pc, #184]	; (8002148 <__ledf2+0xcc>)
 8002090:	031f      	lsls	r7, r3, #12
 8002092:	005c      	lsls	r4, r3, #1
 8002094:	4680      	mov	r8, r0
 8002096:	0b36      	lsrs	r6, r6, #12
 8002098:	0d6d      	lsrs	r5, r5, #21
 800209a:	4691      	mov	r9, r2
 800209c:	0b3f      	lsrs	r7, r7, #12
 800209e:	0d64      	lsrs	r4, r4, #21
 80020a0:	0fdb      	lsrs	r3, r3, #31
 80020a2:	428d      	cmp	r5, r1
 80020a4:	d018      	beq.n	80020d8 <__ledf2+0x5c>
 80020a6:	428c      	cmp	r4, r1
 80020a8:	d011      	beq.n	80020ce <__ledf2+0x52>
 80020aa:	2d00      	cmp	r5, #0
 80020ac:	d118      	bne.n	80020e0 <__ledf2+0x64>
 80020ae:	4330      	orrs	r0, r6
 80020b0:	4684      	mov	ip, r0
 80020b2:	2c00      	cmp	r4, #0
 80020b4:	d11e      	bne.n	80020f4 <__ledf2+0x78>
 80020b6:	433a      	orrs	r2, r7
 80020b8:	d11c      	bne.n	80020f4 <__ledf2+0x78>
 80020ba:	4663      	mov	r3, ip
 80020bc:	2000      	movs	r0, #0
 80020be:	2b00      	cmp	r3, #0
 80020c0:	d030      	beq.n	8002124 <__ledf2+0xa8>
 80020c2:	4651      	mov	r1, sl
 80020c4:	2002      	movs	r0, #2
 80020c6:	3901      	subs	r1, #1
 80020c8:	4008      	ands	r0, r1
 80020ca:	3801      	subs	r0, #1
 80020cc:	e02a      	b.n	8002124 <__ledf2+0xa8>
 80020ce:	0039      	movs	r1, r7
 80020d0:	4311      	orrs	r1, r2
 80020d2:	d0ea      	beq.n	80020aa <__ledf2+0x2e>
 80020d4:	2002      	movs	r0, #2
 80020d6:	e025      	b.n	8002124 <__ledf2+0xa8>
 80020d8:	4330      	orrs	r0, r6
 80020da:	d1fb      	bne.n	80020d4 <__ledf2+0x58>
 80020dc:	42ac      	cmp	r4, r5
 80020de:	d026      	beq.n	800212e <__ledf2+0xb2>
 80020e0:	2c00      	cmp	r4, #0
 80020e2:	d126      	bne.n	8002132 <__ledf2+0xb6>
 80020e4:	433a      	orrs	r2, r7
 80020e6:	d124      	bne.n	8002132 <__ledf2+0xb6>
 80020e8:	4651      	mov	r1, sl
 80020ea:	2002      	movs	r0, #2
 80020ec:	3901      	subs	r1, #1
 80020ee:	4008      	ands	r0, r1
 80020f0:	3801      	subs	r0, #1
 80020f2:	e017      	b.n	8002124 <__ledf2+0xa8>
 80020f4:	4662      	mov	r2, ip
 80020f6:	2a00      	cmp	r2, #0
 80020f8:	d00f      	beq.n	800211a <__ledf2+0x9e>
 80020fa:	459a      	cmp	sl, r3
 80020fc:	d1e1      	bne.n	80020c2 <__ledf2+0x46>
 80020fe:	42a5      	cmp	r5, r4
 8002100:	db05      	blt.n	800210e <__ledf2+0x92>
 8002102:	42be      	cmp	r6, r7
 8002104:	d8dd      	bhi.n	80020c2 <__ledf2+0x46>
 8002106:	d019      	beq.n	800213c <__ledf2+0xc0>
 8002108:	2000      	movs	r0, #0
 800210a:	42be      	cmp	r6, r7
 800210c:	d20a      	bcs.n	8002124 <__ledf2+0xa8>
 800210e:	4650      	mov	r0, sl
 8002110:	2301      	movs	r3, #1
 8002112:	3801      	subs	r0, #1
 8002114:	4398      	bics	r0, r3
 8002116:	3001      	adds	r0, #1
 8002118:	e004      	b.n	8002124 <__ledf2+0xa8>
 800211a:	2201      	movs	r2, #1
 800211c:	3b01      	subs	r3, #1
 800211e:	4393      	bics	r3, r2
 8002120:	0018      	movs	r0, r3
 8002122:	3001      	adds	r0, #1
 8002124:	bc1c      	pop	{r2, r3, r4}
 8002126:	4690      	mov	r8, r2
 8002128:	4699      	mov	r9, r3
 800212a:	46a2      	mov	sl, r4
 800212c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800212e:	433a      	orrs	r2, r7
 8002130:	d1d0      	bne.n	80020d4 <__ledf2+0x58>
 8002132:	459a      	cmp	sl, r3
 8002134:	d1c5      	bne.n	80020c2 <__ledf2+0x46>
 8002136:	42a5      	cmp	r5, r4
 8002138:	dcc3      	bgt.n	80020c2 <__ledf2+0x46>
 800213a:	e7e0      	b.n	80020fe <__ledf2+0x82>
 800213c:	45c8      	cmp	r8, r9
 800213e:	d8c0      	bhi.n	80020c2 <__ledf2+0x46>
 8002140:	2000      	movs	r0, #0
 8002142:	45c8      	cmp	r8, r9
 8002144:	d3e3      	bcc.n	800210e <__ledf2+0x92>
 8002146:	e7ed      	b.n	8002124 <__ledf2+0xa8>
 8002148:	000007ff 	.word	0x000007ff

0800214c <__aeabi_dmul>:
 800214c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800214e:	4657      	mov	r7, sl
 8002150:	46de      	mov	lr, fp
 8002152:	464e      	mov	r6, r9
 8002154:	4645      	mov	r5, r8
 8002156:	b5e0      	push	{r5, r6, r7, lr}
 8002158:	4683      	mov	fp, r0
 800215a:	0006      	movs	r6, r0
 800215c:	030f      	lsls	r7, r1, #12
 800215e:	0048      	lsls	r0, r1, #1
 8002160:	b087      	sub	sp, #28
 8002162:	4692      	mov	sl, r2
 8002164:	001d      	movs	r5, r3
 8002166:	0b3f      	lsrs	r7, r7, #12
 8002168:	0d40      	lsrs	r0, r0, #21
 800216a:	0fcc      	lsrs	r4, r1, #31
 800216c:	2800      	cmp	r0, #0
 800216e:	d100      	bne.n	8002172 <__aeabi_dmul+0x26>
 8002170:	e06f      	b.n	8002252 <__aeabi_dmul+0x106>
 8002172:	4bde      	ldr	r3, [pc, #888]	; (80024ec <__aeabi_dmul+0x3a0>)
 8002174:	4298      	cmp	r0, r3
 8002176:	d038      	beq.n	80021ea <__aeabi_dmul+0x9e>
 8002178:	2380      	movs	r3, #128	; 0x80
 800217a:	00ff      	lsls	r7, r7, #3
 800217c:	041b      	lsls	r3, r3, #16
 800217e:	431f      	orrs	r7, r3
 8002180:	0f73      	lsrs	r3, r6, #29
 8002182:	433b      	orrs	r3, r7
 8002184:	9301      	str	r3, [sp, #4]
 8002186:	4bda      	ldr	r3, [pc, #872]	; (80024f0 <__aeabi_dmul+0x3a4>)
 8002188:	2700      	movs	r7, #0
 800218a:	4699      	mov	r9, r3
 800218c:	2300      	movs	r3, #0
 800218e:	469b      	mov	fp, r3
 8002190:	00f6      	lsls	r6, r6, #3
 8002192:	4481      	add	r9, r0
 8002194:	032b      	lsls	r3, r5, #12
 8002196:	0069      	lsls	r1, r5, #1
 8002198:	0b1b      	lsrs	r3, r3, #12
 800219a:	4652      	mov	r2, sl
 800219c:	4698      	mov	r8, r3
 800219e:	0d49      	lsrs	r1, r1, #21
 80021a0:	0fed      	lsrs	r5, r5, #31
 80021a2:	2900      	cmp	r1, #0
 80021a4:	d100      	bne.n	80021a8 <__aeabi_dmul+0x5c>
 80021a6:	e085      	b.n	80022b4 <__aeabi_dmul+0x168>
 80021a8:	4bd0      	ldr	r3, [pc, #832]	; (80024ec <__aeabi_dmul+0x3a0>)
 80021aa:	4299      	cmp	r1, r3
 80021ac:	d100      	bne.n	80021b0 <__aeabi_dmul+0x64>
 80021ae:	e073      	b.n	8002298 <__aeabi_dmul+0x14c>
 80021b0:	4643      	mov	r3, r8
 80021b2:	00da      	lsls	r2, r3, #3
 80021b4:	2380      	movs	r3, #128	; 0x80
 80021b6:	041b      	lsls	r3, r3, #16
 80021b8:	4313      	orrs	r3, r2
 80021ba:	4652      	mov	r2, sl
 80021bc:	48cc      	ldr	r0, [pc, #816]	; (80024f0 <__aeabi_dmul+0x3a4>)
 80021be:	0f52      	lsrs	r2, r2, #29
 80021c0:	4684      	mov	ip, r0
 80021c2:	4313      	orrs	r3, r2
 80021c4:	4652      	mov	r2, sl
 80021c6:	2000      	movs	r0, #0
 80021c8:	4461      	add	r1, ip
 80021ca:	00d2      	lsls	r2, r2, #3
 80021cc:	4489      	add	r9, r1
 80021ce:	0021      	movs	r1, r4
 80021d0:	4069      	eors	r1, r5
 80021d2:	9100      	str	r1, [sp, #0]
 80021d4:	468c      	mov	ip, r1
 80021d6:	2101      	movs	r1, #1
 80021d8:	4449      	add	r1, r9
 80021da:	468a      	mov	sl, r1
 80021dc:	2f0f      	cmp	r7, #15
 80021de:	d900      	bls.n	80021e2 <__aeabi_dmul+0x96>
 80021e0:	e090      	b.n	8002304 <__aeabi_dmul+0x1b8>
 80021e2:	49c4      	ldr	r1, [pc, #784]	; (80024f4 <__aeabi_dmul+0x3a8>)
 80021e4:	00bf      	lsls	r7, r7, #2
 80021e6:	59cf      	ldr	r7, [r1, r7]
 80021e8:	46bf      	mov	pc, r7
 80021ea:	465b      	mov	r3, fp
 80021ec:	433b      	orrs	r3, r7
 80021ee:	9301      	str	r3, [sp, #4]
 80021f0:	d000      	beq.n	80021f4 <__aeabi_dmul+0xa8>
 80021f2:	e16a      	b.n	80024ca <__aeabi_dmul+0x37e>
 80021f4:	2302      	movs	r3, #2
 80021f6:	2708      	movs	r7, #8
 80021f8:	2600      	movs	r6, #0
 80021fa:	4681      	mov	r9, r0
 80021fc:	469b      	mov	fp, r3
 80021fe:	e7c9      	b.n	8002194 <__aeabi_dmul+0x48>
 8002200:	0032      	movs	r2, r6
 8002202:	4658      	mov	r0, fp
 8002204:	9b01      	ldr	r3, [sp, #4]
 8002206:	4661      	mov	r1, ip
 8002208:	9100      	str	r1, [sp, #0]
 800220a:	2802      	cmp	r0, #2
 800220c:	d100      	bne.n	8002210 <__aeabi_dmul+0xc4>
 800220e:	e075      	b.n	80022fc <__aeabi_dmul+0x1b0>
 8002210:	2803      	cmp	r0, #3
 8002212:	d100      	bne.n	8002216 <__aeabi_dmul+0xca>
 8002214:	e1fe      	b.n	8002614 <__aeabi_dmul+0x4c8>
 8002216:	2801      	cmp	r0, #1
 8002218:	d000      	beq.n	800221c <__aeabi_dmul+0xd0>
 800221a:	e12c      	b.n	8002476 <__aeabi_dmul+0x32a>
 800221c:	2300      	movs	r3, #0
 800221e:	2700      	movs	r7, #0
 8002220:	2600      	movs	r6, #0
 8002222:	2500      	movs	r5, #0
 8002224:	033f      	lsls	r7, r7, #12
 8002226:	0d2a      	lsrs	r2, r5, #20
 8002228:	0b3f      	lsrs	r7, r7, #12
 800222a:	48b3      	ldr	r0, [pc, #716]	; (80024f8 <__aeabi_dmul+0x3ac>)
 800222c:	0512      	lsls	r2, r2, #20
 800222e:	433a      	orrs	r2, r7
 8002230:	4002      	ands	r2, r0
 8002232:	051b      	lsls	r3, r3, #20
 8002234:	4313      	orrs	r3, r2
 8002236:	9a00      	ldr	r2, [sp, #0]
 8002238:	005b      	lsls	r3, r3, #1
 800223a:	07d1      	lsls	r1, r2, #31
 800223c:	085b      	lsrs	r3, r3, #1
 800223e:	430b      	orrs	r3, r1
 8002240:	0030      	movs	r0, r6
 8002242:	0019      	movs	r1, r3
 8002244:	b007      	add	sp, #28
 8002246:	bc3c      	pop	{r2, r3, r4, r5}
 8002248:	4690      	mov	r8, r2
 800224a:	4699      	mov	r9, r3
 800224c:	46a2      	mov	sl, r4
 800224e:	46ab      	mov	fp, r5
 8002250:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002252:	465b      	mov	r3, fp
 8002254:	433b      	orrs	r3, r7
 8002256:	9301      	str	r3, [sp, #4]
 8002258:	d100      	bne.n	800225c <__aeabi_dmul+0x110>
 800225a:	e12f      	b.n	80024bc <__aeabi_dmul+0x370>
 800225c:	2f00      	cmp	r7, #0
 800225e:	d100      	bne.n	8002262 <__aeabi_dmul+0x116>
 8002260:	e1a5      	b.n	80025ae <__aeabi_dmul+0x462>
 8002262:	0038      	movs	r0, r7
 8002264:	f000 fe3c 	bl	8002ee0 <__clzsi2>
 8002268:	0003      	movs	r3, r0
 800226a:	3b0b      	subs	r3, #11
 800226c:	2b1c      	cmp	r3, #28
 800226e:	dd00      	ble.n	8002272 <__aeabi_dmul+0x126>
 8002270:	e196      	b.n	80025a0 <__aeabi_dmul+0x454>
 8002272:	221d      	movs	r2, #29
 8002274:	1ad3      	subs	r3, r2, r3
 8002276:	465a      	mov	r2, fp
 8002278:	0001      	movs	r1, r0
 800227a:	40da      	lsrs	r2, r3
 800227c:	465e      	mov	r6, fp
 800227e:	3908      	subs	r1, #8
 8002280:	408f      	lsls	r7, r1
 8002282:	0013      	movs	r3, r2
 8002284:	408e      	lsls	r6, r1
 8002286:	433b      	orrs	r3, r7
 8002288:	9301      	str	r3, [sp, #4]
 800228a:	4b9c      	ldr	r3, [pc, #624]	; (80024fc <__aeabi_dmul+0x3b0>)
 800228c:	2700      	movs	r7, #0
 800228e:	1a1b      	subs	r3, r3, r0
 8002290:	4699      	mov	r9, r3
 8002292:	2300      	movs	r3, #0
 8002294:	469b      	mov	fp, r3
 8002296:	e77d      	b.n	8002194 <__aeabi_dmul+0x48>
 8002298:	4641      	mov	r1, r8
 800229a:	4653      	mov	r3, sl
 800229c:	430b      	orrs	r3, r1
 800229e:	4993      	ldr	r1, [pc, #588]	; (80024ec <__aeabi_dmul+0x3a0>)
 80022a0:	468c      	mov	ip, r1
 80022a2:	44e1      	add	r9, ip
 80022a4:	2b00      	cmp	r3, #0
 80022a6:	d000      	beq.n	80022aa <__aeabi_dmul+0x15e>
 80022a8:	e11a      	b.n	80024e0 <__aeabi_dmul+0x394>
 80022aa:	2202      	movs	r2, #2
 80022ac:	2002      	movs	r0, #2
 80022ae:	4317      	orrs	r7, r2
 80022b0:	2200      	movs	r2, #0
 80022b2:	e78c      	b.n	80021ce <__aeabi_dmul+0x82>
 80022b4:	4313      	orrs	r3, r2
 80022b6:	d100      	bne.n	80022ba <__aeabi_dmul+0x16e>
 80022b8:	e10d      	b.n	80024d6 <__aeabi_dmul+0x38a>
 80022ba:	4643      	mov	r3, r8
 80022bc:	2b00      	cmp	r3, #0
 80022be:	d100      	bne.n	80022c2 <__aeabi_dmul+0x176>
 80022c0:	e181      	b.n	80025c6 <__aeabi_dmul+0x47a>
 80022c2:	4640      	mov	r0, r8
 80022c4:	f000 fe0c 	bl	8002ee0 <__clzsi2>
 80022c8:	0002      	movs	r2, r0
 80022ca:	3a0b      	subs	r2, #11
 80022cc:	2a1c      	cmp	r2, #28
 80022ce:	dd00      	ble.n	80022d2 <__aeabi_dmul+0x186>
 80022d0:	e172      	b.n	80025b8 <__aeabi_dmul+0x46c>
 80022d2:	0001      	movs	r1, r0
 80022d4:	4643      	mov	r3, r8
 80022d6:	3908      	subs	r1, #8
 80022d8:	408b      	lsls	r3, r1
 80022da:	4698      	mov	r8, r3
 80022dc:	231d      	movs	r3, #29
 80022de:	1a9a      	subs	r2, r3, r2
 80022e0:	4653      	mov	r3, sl
 80022e2:	40d3      	lsrs	r3, r2
 80022e4:	001a      	movs	r2, r3
 80022e6:	4643      	mov	r3, r8
 80022e8:	4313      	orrs	r3, r2
 80022ea:	4652      	mov	r2, sl
 80022ec:	408a      	lsls	r2, r1
 80022ee:	4649      	mov	r1, r9
 80022f0:	1a08      	subs	r0, r1, r0
 80022f2:	4982      	ldr	r1, [pc, #520]	; (80024fc <__aeabi_dmul+0x3b0>)
 80022f4:	4689      	mov	r9, r1
 80022f6:	4481      	add	r9, r0
 80022f8:	2000      	movs	r0, #0
 80022fa:	e768      	b.n	80021ce <__aeabi_dmul+0x82>
 80022fc:	4b7b      	ldr	r3, [pc, #492]	; (80024ec <__aeabi_dmul+0x3a0>)
 80022fe:	2700      	movs	r7, #0
 8002300:	2600      	movs	r6, #0
 8002302:	e78e      	b.n	8002222 <__aeabi_dmul+0xd6>
 8002304:	0c14      	lsrs	r4, r2, #16
 8002306:	0412      	lsls	r2, r2, #16
 8002308:	0c12      	lsrs	r2, r2, #16
 800230a:	0011      	movs	r1, r2
 800230c:	0c37      	lsrs	r7, r6, #16
 800230e:	0436      	lsls	r6, r6, #16
 8002310:	0c35      	lsrs	r5, r6, #16
 8002312:	4379      	muls	r1, r7
 8002314:	0028      	movs	r0, r5
 8002316:	468c      	mov	ip, r1
 8002318:	002e      	movs	r6, r5
 800231a:	4360      	muls	r0, r4
 800231c:	4460      	add	r0, ip
 800231e:	4683      	mov	fp, r0
 8002320:	4356      	muls	r6, r2
 8002322:	0021      	movs	r1, r4
 8002324:	0c30      	lsrs	r0, r6, #16
 8002326:	4680      	mov	r8, r0
 8002328:	4658      	mov	r0, fp
 800232a:	4379      	muls	r1, r7
 800232c:	4440      	add	r0, r8
 800232e:	9102      	str	r1, [sp, #8]
 8002330:	4584      	cmp	ip, r0
 8002332:	d906      	bls.n	8002342 <__aeabi_dmul+0x1f6>
 8002334:	4688      	mov	r8, r1
 8002336:	2180      	movs	r1, #128	; 0x80
 8002338:	0249      	lsls	r1, r1, #9
 800233a:	468c      	mov	ip, r1
 800233c:	44e0      	add	r8, ip
 800233e:	4641      	mov	r1, r8
 8002340:	9102      	str	r1, [sp, #8]
 8002342:	0436      	lsls	r6, r6, #16
 8002344:	0c01      	lsrs	r1, r0, #16
 8002346:	0c36      	lsrs	r6, r6, #16
 8002348:	0400      	lsls	r0, r0, #16
 800234a:	468b      	mov	fp, r1
 800234c:	1981      	adds	r1, r0, r6
 800234e:	0c1e      	lsrs	r6, r3, #16
 8002350:	041b      	lsls	r3, r3, #16
 8002352:	0c1b      	lsrs	r3, r3, #16
 8002354:	9103      	str	r1, [sp, #12]
 8002356:	0019      	movs	r1, r3
 8002358:	4379      	muls	r1, r7
 800235a:	468c      	mov	ip, r1
 800235c:	0028      	movs	r0, r5
 800235e:	4375      	muls	r5, r6
 8002360:	4465      	add	r5, ip
 8002362:	46a8      	mov	r8, r5
 8002364:	4358      	muls	r0, r3
 8002366:	0c05      	lsrs	r5, r0, #16
 8002368:	4445      	add	r5, r8
 800236a:	4377      	muls	r7, r6
 800236c:	42a9      	cmp	r1, r5
 800236e:	d903      	bls.n	8002378 <__aeabi_dmul+0x22c>
 8002370:	2180      	movs	r1, #128	; 0x80
 8002372:	0249      	lsls	r1, r1, #9
 8002374:	468c      	mov	ip, r1
 8002376:	4467      	add	r7, ip
 8002378:	0c29      	lsrs	r1, r5, #16
 800237a:	468c      	mov	ip, r1
 800237c:	0039      	movs	r1, r7
 800237e:	0400      	lsls	r0, r0, #16
 8002380:	0c00      	lsrs	r0, r0, #16
 8002382:	042d      	lsls	r5, r5, #16
 8002384:	182d      	adds	r5, r5, r0
 8002386:	4461      	add	r1, ip
 8002388:	44ab      	add	fp, r5
 800238a:	9105      	str	r1, [sp, #20]
 800238c:	4659      	mov	r1, fp
 800238e:	9104      	str	r1, [sp, #16]
 8002390:	9901      	ldr	r1, [sp, #4]
 8002392:	040f      	lsls	r7, r1, #16
 8002394:	0c3f      	lsrs	r7, r7, #16
 8002396:	0c08      	lsrs	r0, r1, #16
 8002398:	0039      	movs	r1, r7
 800239a:	4351      	muls	r1, r2
 800239c:	4342      	muls	r2, r0
 800239e:	4690      	mov	r8, r2
 80023a0:	0002      	movs	r2, r0
 80023a2:	468c      	mov	ip, r1
 80023a4:	0c09      	lsrs	r1, r1, #16
 80023a6:	468b      	mov	fp, r1
 80023a8:	4362      	muls	r2, r4
 80023aa:	437c      	muls	r4, r7
 80023ac:	4444      	add	r4, r8
 80023ae:	445c      	add	r4, fp
 80023b0:	45a0      	cmp	r8, r4
 80023b2:	d903      	bls.n	80023bc <__aeabi_dmul+0x270>
 80023b4:	2180      	movs	r1, #128	; 0x80
 80023b6:	0249      	lsls	r1, r1, #9
 80023b8:	4688      	mov	r8, r1
 80023ba:	4442      	add	r2, r8
 80023bc:	0c21      	lsrs	r1, r4, #16
 80023be:	4688      	mov	r8, r1
 80023c0:	4661      	mov	r1, ip
 80023c2:	0409      	lsls	r1, r1, #16
 80023c4:	0c09      	lsrs	r1, r1, #16
 80023c6:	468c      	mov	ip, r1
 80023c8:	0039      	movs	r1, r7
 80023ca:	4359      	muls	r1, r3
 80023cc:	4343      	muls	r3, r0
 80023ce:	4370      	muls	r0, r6
 80023d0:	437e      	muls	r6, r7
 80023d2:	0c0f      	lsrs	r7, r1, #16
 80023d4:	18f6      	adds	r6, r6, r3
 80023d6:	0424      	lsls	r4, r4, #16
 80023d8:	19be      	adds	r6, r7, r6
 80023da:	4464      	add	r4, ip
 80023dc:	4442      	add	r2, r8
 80023de:	468c      	mov	ip, r1
 80023e0:	42b3      	cmp	r3, r6
 80023e2:	d903      	bls.n	80023ec <__aeabi_dmul+0x2a0>
 80023e4:	2380      	movs	r3, #128	; 0x80
 80023e6:	025b      	lsls	r3, r3, #9
 80023e8:	4698      	mov	r8, r3
 80023ea:	4440      	add	r0, r8
 80023ec:	9b02      	ldr	r3, [sp, #8]
 80023ee:	4661      	mov	r1, ip
 80023f0:	4698      	mov	r8, r3
 80023f2:	9b04      	ldr	r3, [sp, #16]
 80023f4:	0437      	lsls	r7, r6, #16
 80023f6:	4443      	add	r3, r8
 80023f8:	469b      	mov	fp, r3
 80023fa:	45ab      	cmp	fp, r5
 80023fc:	41ad      	sbcs	r5, r5
 80023fe:	426b      	negs	r3, r5
 8002400:	040d      	lsls	r5, r1, #16
 8002402:	9905      	ldr	r1, [sp, #20]
 8002404:	0c2d      	lsrs	r5, r5, #16
 8002406:	468c      	mov	ip, r1
 8002408:	197f      	adds	r7, r7, r5
 800240a:	4467      	add	r7, ip
 800240c:	18fd      	adds	r5, r7, r3
 800240e:	46a8      	mov	r8, r5
 8002410:	465d      	mov	r5, fp
 8002412:	192d      	adds	r5, r5, r4
 8002414:	42a5      	cmp	r5, r4
 8002416:	41a4      	sbcs	r4, r4
 8002418:	4693      	mov	fp, r2
 800241a:	4264      	negs	r4, r4
 800241c:	46a4      	mov	ip, r4
 800241e:	44c3      	add	fp, r8
 8002420:	44dc      	add	ip, fp
 8002422:	428f      	cmp	r7, r1
 8002424:	41bf      	sbcs	r7, r7
 8002426:	4598      	cmp	r8, r3
 8002428:	419b      	sbcs	r3, r3
 800242a:	4593      	cmp	fp, r2
 800242c:	4192      	sbcs	r2, r2
 800242e:	45a4      	cmp	ip, r4
 8002430:	41a4      	sbcs	r4, r4
 8002432:	425b      	negs	r3, r3
 8002434:	427f      	negs	r7, r7
 8002436:	431f      	orrs	r7, r3
 8002438:	0c36      	lsrs	r6, r6, #16
 800243a:	4252      	negs	r2, r2
 800243c:	4264      	negs	r4, r4
 800243e:	19bf      	adds	r7, r7, r6
 8002440:	4322      	orrs	r2, r4
 8002442:	18bf      	adds	r7, r7, r2
 8002444:	4662      	mov	r2, ip
 8002446:	1838      	adds	r0, r7, r0
 8002448:	0243      	lsls	r3, r0, #9
 800244a:	0dd2      	lsrs	r2, r2, #23
 800244c:	9903      	ldr	r1, [sp, #12]
 800244e:	4313      	orrs	r3, r2
 8002450:	026a      	lsls	r2, r5, #9
 8002452:	430a      	orrs	r2, r1
 8002454:	1e50      	subs	r0, r2, #1
 8002456:	4182      	sbcs	r2, r0
 8002458:	4661      	mov	r1, ip
 800245a:	0ded      	lsrs	r5, r5, #23
 800245c:	432a      	orrs	r2, r5
 800245e:	024e      	lsls	r6, r1, #9
 8002460:	4332      	orrs	r2, r6
 8002462:	01d9      	lsls	r1, r3, #7
 8002464:	d400      	bmi.n	8002468 <__aeabi_dmul+0x31c>
 8002466:	e0b3      	b.n	80025d0 <__aeabi_dmul+0x484>
 8002468:	2601      	movs	r6, #1
 800246a:	0850      	lsrs	r0, r2, #1
 800246c:	4032      	ands	r2, r6
 800246e:	4302      	orrs	r2, r0
 8002470:	07de      	lsls	r6, r3, #31
 8002472:	4332      	orrs	r2, r6
 8002474:	085b      	lsrs	r3, r3, #1
 8002476:	4c22      	ldr	r4, [pc, #136]	; (8002500 <__aeabi_dmul+0x3b4>)
 8002478:	4454      	add	r4, sl
 800247a:	2c00      	cmp	r4, #0
 800247c:	dd62      	ble.n	8002544 <__aeabi_dmul+0x3f8>
 800247e:	0751      	lsls	r1, r2, #29
 8002480:	d009      	beq.n	8002496 <__aeabi_dmul+0x34a>
 8002482:	200f      	movs	r0, #15
 8002484:	4010      	ands	r0, r2
 8002486:	2804      	cmp	r0, #4
 8002488:	d005      	beq.n	8002496 <__aeabi_dmul+0x34a>
 800248a:	1d10      	adds	r0, r2, #4
 800248c:	4290      	cmp	r0, r2
 800248e:	4192      	sbcs	r2, r2
 8002490:	4252      	negs	r2, r2
 8002492:	189b      	adds	r3, r3, r2
 8002494:	0002      	movs	r2, r0
 8002496:	01d9      	lsls	r1, r3, #7
 8002498:	d504      	bpl.n	80024a4 <__aeabi_dmul+0x358>
 800249a:	2480      	movs	r4, #128	; 0x80
 800249c:	4819      	ldr	r0, [pc, #100]	; (8002504 <__aeabi_dmul+0x3b8>)
 800249e:	00e4      	lsls	r4, r4, #3
 80024a0:	4003      	ands	r3, r0
 80024a2:	4454      	add	r4, sl
 80024a4:	4818      	ldr	r0, [pc, #96]	; (8002508 <__aeabi_dmul+0x3bc>)
 80024a6:	4284      	cmp	r4, r0
 80024a8:	dd00      	ble.n	80024ac <__aeabi_dmul+0x360>
 80024aa:	e727      	b.n	80022fc <__aeabi_dmul+0x1b0>
 80024ac:	075e      	lsls	r6, r3, #29
 80024ae:	025b      	lsls	r3, r3, #9
 80024b0:	08d2      	lsrs	r2, r2, #3
 80024b2:	0b1f      	lsrs	r7, r3, #12
 80024b4:	0563      	lsls	r3, r4, #21
 80024b6:	4316      	orrs	r6, r2
 80024b8:	0d5b      	lsrs	r3, r3, #21
 80024ba:	e6b2      	b.n	8002222 <__aeabi_dmul+0xd6>
 80024bc:	2300      	movs	r3, #0
 80024be:	4699      	mov	r9, r3
 80024c0:	3301      	adds	r3, #1
 80024c2:	2704      	movs	r7, #4
 80024c4:	2600      	movs	r6, #0
 80024c6:	469b      	mov	fp, r3
 80024c8:	e664      	b.n	8002194 <__aeabi_dmul+0x48>
 80024ca:	2303      	movs	r3, #3
 80024cc:	9701      	str	r7, [sp, #4]
 80024ce:	4681      	mov	r9, r0
 80024d0:	270c      	movs	r7, #12
 80024d2:	469b      	mov	fp, r3
 80024d4:	e65e      	b.n	8002194 <__aeabi_dmul+0x48>
 80024d6:	2201      	movs	r2, #1
 80024d8:	2001      	movs	r0, #1
 80024da:	4317      	orrs	r7, r2
 80024dc:	2200      	movs	r2, #0
 80024de:	e676      	b.n	80021ce <__aeabi_dmul+0x82>
 80024e0:	2303      	movs	r3, #3
 80024e2:	2003      	movs	r0, #3
 80024e4:	431f      	orrs	r7, r3
 80024e6:	4643      	mov	r3, r8
 80024e8:	e671      	b.n	80021ce <__aeabi_dmul+0x82>
 80024ea:	46c0      	nop			; (mov r8, r8)
 80024ec:	000007ff 	.word	0x000007ff
 80024f0:	fffffc01 	.word	0xfffffc01
 80024f4:	08007420 	.word	0x08007420
 80024f8:	800fffff 	.word	0x800fffff
 80024fc:	fffffc0d 	.word	0xfffffc0d
 8002500:	000003ff 	.word	0x000003ff
 8002504:	feffffff 	.word	0xfeffffff
 8002508:	000007fe 	.word	0x000007fe
 800250c:	2300      	movs	r3, #0
 800250e:	2780      	movs	r7, #128	; 0x80
 8002510:	9300      	str	r3, [sp, #0]
 8002512:	033f      	lsls	r7, r7, #12
 8002514:	2600      	movs	r6, #0
 8002516:	4b43      	ldr	r3, [pc, #268]	; (8002624 <__aeabi_dmul+0x4d8>)
 8002518:	e683      	b.n	8002222 <__aeabi_dmul+0xd6>
 800251a:	9b01      	ldr	r3, [sp, #4]
 800251c:	0032      	movs	r2, r6
 800251e:	46a4      	mov	ip, r4
 8002520:	4658      	mov	r0, fp
 8002522:	e670      	b.n	8002206 <__aeabi_dmul+0xba>
 8002524:	46ac      	mov	ip, r5
 8002526:	e66e      	b.n	8002206 <__aeabi_dmul+0xba>
 8002528:	2780      	movs	r7, #128	; 0x80
 800252a:	9901      	ldr	r1, [sp, #4]
 800252c:	033f      	lsls	r7, r7, #12
 800252e:	4239      	tst	r1, r7
 8002530:	d02d      	beq.n	800258e <__aeabi_dmul+0x442>
 8002532:	423b      	tst	r3, r7
 8002534:	d12b      	bne.n	800258e <__aeabi_dmul+0x442>
 8002536:	431f      	orrs	r7, r3
 8002538:	033f      	lsls	r7, r7, #12
 800253a:	0b3f      	lsrs	r7, r7, #12
 800253c:	9500      	str	r5, [sp, #0]
 800253e:	0016      	movs	r6, r2
 8002540:	4b38      	ldr	r3, [pc, #224]	; (8002624 <__aeabi_dmul+0x4d8>)
 8002542:	e66e      	b.n	8002222 <__aeabi_dmul+0xd6>
 8002544:	2501      	movs	r5, #1
 8002546:	1b2d      	subs	r5, r5, r4
 8002548:	2d38      	cmp	r5, #56	; 0x38
 800254a:	dd00      	ble.n	800254e <__aeabi_dmul+0x402>
 800254c:	e666      	b.n	800221c <__aeabi_dmul+0xd0>
 800254e:	2d1f      	cmp	r5, #31
 8002550:	dc40      	bgt.n	80025d4 <__aeabi_dmul+0x488>
 8002552:	4835      	ldr	r0, [pc, #212]	; (8002628 <__aeabi_dmul+0x4dc>)
 8002554:	001c      	movs	r4, r3
 8002556:	4450      	add	r0, sl
 8002558:	0016      	movs	r6, r2
 800255a:	4082      	lsls	r2, r0
 800255c:	4084      	lsls	r4, r0
 800255e:	40ee      	lsrs	r6, r5
 8002560:	1e50      	subs	r0, r2, #1
 8002562:	4182      	sbcs	r2, r0
 8002564:	4334      	orrs	r4, r6
 8002566:	4314      	orrs	r4, r2
 8002568:	40eb      	lsrs	r3, r5
 800256a:	0762      	lsls	r2, r4, #29
 800256c:	d009      	beq.n	8002582 <__aeabi_dmul+0x436>
 800256e:	220f      	movs	r2, #15
 8002570:	4022      	ands	r2, r4
 8002572:	2a04      	cmp	r2, #4
 8002574:	d005      	beq.n	8002582 <__aeabi_dmul+0x436>
 8002576:	0022      	movs	r2, r4
 8002578:	1d14      	adds	r4, r2, #4
 800257a:	4294      	cmp	r4, r2
 800257c:	4180      	sbcs	r0, r0
 800257e:	4240      	negs	r0, r0
 8002580:	181b      	adds	r3, r3, r0
 8002582:	021a      	lsls	r2, r3, #8
 8002584:	d53e      	bpl.n	8002604 <__aeabi_dmul+0x4b8>
 8002586:	2301      	movs	r3, #1
 8002588:	2700      	movs	r7, #0
 800258a:	2600      	movs	r6, #0
 800258c:	e649      	b.n	8002222 <__aeabi_dmul+0xd6>
 800258e:	2780      	movs	r7, #128	; 0x80
 8002590:	9b01      	ldr	r3, [sp, #4]
 8002592:	033f      	lsls	r7, r7, #12
 8002594:	431f      	orrs	r7, r3
 8002596:	033f      	lsls	r7, r7, #12
 8002598:	0b3f      	lsrs	r7, r7, #12
 800259a:	9400      	str	r4, [sp, #0]
 800259c:	4b21      	ldr	r3, [pc, #132]	; (8002624 <__aeabi_dmul+0x4d8>)
 800259e:	e640      	b.n	8002222 <__aeabi_dmul+0xd6>
 80025a0:	0003      	movs	r3, r0
 80025a2:	465a      	mov	r2, fp
 80025a4:	3b28      	subs	r3, #40	; 0x28
 80025a6:	409a      	lsls	r2, r3
 80025a8:	2600      	movs	r6, #0
 80025aa:	9201      	str	r2, [sp, #4]
 80025ac:	e66d      	b.n	800228a <__aeabi_dmul+0x13e>
 80025ae:	4658      	mov	r0, fp
 80025b0:	f000 fc96 	bl	8002ee0 <__clzsi2>
 80025b4:	3020      	adds	r0, #32
 80025b6:	e657      	b.n	8002268 <__aeabi_dmul+0x11c>
 80025b8:	0003      	movs	r3, r0
 80025ba:	4652      	mov	r2, sl
 80025bc:	3b28      	subs	r3, #40	; 0x28
 80025be:	409a      	lsls	r2, r3
 80025c0:	0013      	movs	r3, r2
 80025c2:	2200      	movs	r2, #0
 80025c4:	e693      	b.n	80022ee <__aeabi_dmul+0x1a2>
 80025c6:	4650      	mov	r0, sl
 80025c8:	f000 fc8a 	bl	8002ee0 <__clzsi2>
 80025cc:	3020      	adds	r0, #32
 80025ce:	e67b      	b.n	80022c8 <__aeabi_dmul+0x17c>
 80025d0:	46ca      	mov	sl, r9
 80025d2:	e750      	b.n	8002476 <__aeabi_dmul+0x32a>
 80025d4:	201f      	movs	r0, #31
 80025d6:	001e      	movs	r6, r3
 80025d8:	4240      	negs	r0, r0
 80025da:	1b04      	subs	r4, r0, r4
 80025dc:	40e6      	lsrs	r6, r4
 80025de:	2d20      	cmp	r5, #32
 80025e0:	d003      	beq.n	80025ea <__aeabi_dmul+0x49e>
 80025e2:	4c12      	ldr	r4, [pc, #72]	; (800262c <__aeabi_dmul+0x4e0>)
 80025e4:	4454      	add	r4, sl
 80025e6:	40a3      	lsls	r3, r4
 80025e8:	431a      	orrs	r2, r3
 80025ea:	1e50      	subs	r0, r2, #1
 80025ec:	4182      	sbcs	r2, r0
 80025ee:	4332      	orrs	r2, r6
 80025f0:	2607      	movs	r6, #7
 80025f2:	2700      	movs	r7, #0
 80025f4:	4016      	ands	r6, r2
 80025f6:	d009      	beq.n	800260c <__aeabi_dmul+0x4c0>
 80025f8:	200f      	movs	r0, #15
 80025fa:	2300      	movs	r3, #0
 80025fc:	4010      	ands	r0, r2
 80025fe:	0014      	movs	r4, r2
 8002600:	2804      	cmp	r0, #4
 8002602:	d1b9      	bne.n	8002578 <__aeabi_dmul+0x42c>
 8002604:	0022      	movs	r2, r4
 8002606:	075e      	lsls	r6, r3, #29
 8002608:	025b      	lsls	r3, r3, #9
 800260a:	0b1f      	lsrs	r7, r3, #12
 800260c:	08d2      	lsrs	r2, r2, #3
 800260e:	4316      	orrs	r6, r2
 8002610:	2300      	movs	r3, #0
 8002612:	e606      	b.n	8002222 <__aeabi_dmul+0xd6>
 8002614:	2780      	movs	r7, #128	; 0x80
 8002616:	033f      	lsls	r7, r7, #12
 8002618:	431f      	orrs	r7, r3
 800261a:	033f      	lsls	r7, r7, #12
 800261c:	0b3f      	lsrs	r7, r7, #12
 800261e:	0016      	movs	r6, r2
 8002620:	4b00      	ldr	r3, [pc, #0]	; (8002624 <__aeabi_dmul+0x4d8>)
 8002622:	e5fe      	b.n	8002222 <__aeabi_dmul+0xd6>
 8002624:	000007ff 	.word	0x000007ff
 8002628:	0000041e 	.word	0x0000041e
 800262c:	0000043e 	.word	0x0000043e

08002630 <__aeabi_dsub>:
 8002630:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002632:	4657      	mov	r7, sl
 8002634:	464e      	mov	r6, r9
 8002636:	4645      	mov	r5, r8
 8002638:	46de      	mov	lr, fp
 800263a:	000c      	movs	r4, r1
 800263c:	0309      	lsls	r1, r1, #12
 800263e:	b5e0      	push	{r5, r6, r7, lr}
 8002640:	0a49      	lsrs	r1, r1, #9
 8002642:	0f46      	lsrs	r6, r0, #29
 8002644:	005f      	lsls	r7, r3, #1
 8002646:	4331      	orrs	r1, r6
 8002648:	031e      	lsls	r6, r3, #12
 800264a:	0fdb      	lsrs	r3, r3, #31
 800264c:	0a76      	lsrs	r6, r6, #9
 800264e:	469b      	mov	fp, r3
 8002650:	0f53      	lsrs	r3, r2, #29
 8002652:	4333      	orrs	r3, r6
 8002654:	4ec8      	ldr	r6, [pc, #800]	; (8002978 <__aeabi_dsub+0x348>)
 8002656:	0065      	lsls	r5, r4, #1
 8002658:	00c0      	lsls	r0, r0, #3
 800265a:	0fe4      	lsrs	r4, r4, #31
 800265c:	00d2      	lsls	r2, r2, #3
 800265e:	0d6d      	lsrs	r5, r5, #21
 8002660:	46a2      	mov	sl, r4
 8002662:	4681      	mov	r9, r0
 8002664:	0d7f      	lsrs	r7, r7, #21
 8002666:	469c      	mov	ip, r3
 8002668:	4690      	mov	r8, r2
 800266a:	42b7      	cmp	r7, r6
 800266c:	d100      	bne.n	8002670 <__aeabi_dsub+0x40>
 800266e:	e0b9      	b.n	80027e4 <__aeabi_dsub+0x1b4>
 8002670:	465b      	mov	r3, fp
 8002672:	2601      	movs	r6, #1
 8002674:	4073      	eors	r3, r6
 8002676:	469b      	mov	fp, r3
 8002678:	1bee      	subs	r6, r5, r7
 800267a:	45a3      	cmp	fp, r4
 800267c:	d100      	bne.n	8002680 <__aeabi_dsub+0x50>
 800267e:	e083      	b.n	8002788 <__aeabi_dsub+0x158>
 8002680:	2e00      	cmp	r6, #0
 8002682:	dd63      	ble.n	800274c <__aeabi_dsub+0x11c>
 8002684:	2f00      	cmp	r7, #0
 8002686:	d000      	beq.n	800268a <__aeabi_dsub+0x5a>
 8002688:	e0b1      	b.n	80027ee <__aeabi_dsub+0x1be>
 800268a:	4663      	mov	r3, ip
 800268c:	4313      	orrs	r3, r2
 800268e:	d100      	bne.n	8002692 <__aeabi_dsub+0x62>
 8002690:	e123      	b.n	80028da <__aeabi_dsub+0x2aa>
 8002692:	1e73      	subs	r3, r6, #1
 8002694:	2b00      	cmp	r3, #0
 8002696:	d000      	beq.n	800269a <__aeabi_dsub+0x6a>
 8002698:	e1ba      	b.n	8002a10 <__aeabi_dsub+0x3e0>
 800269a:	1a86      	subs	r6, r0, r2
 800269c:	4663      	mov	r3, ip
 800269e:	42b0      	cmp	r0, r6
 80026a0:	4180      	sbcs	r0, r0
 80026a2:	2501      	movs	r5, #1
 80026a4:	1ac9      	subs	r1, r1, r3
 80026a6:	4240      	negs	r0, r0
 80026a8:	1a09      	subs	r1, r1, r0
 80026aa:	020b      	lsls	r3, r1, #8
 80026ac:	d400      	bmi.n	80026b0 <__aeabi_dsub+0x80>
 80026ae:	e147      	b.n	8002940 <__aeabi_dsub+0x310>
 80026b0:	0249      	lsls	r1, r1, #9
 80026b2:	0a4b      	lsrs	r3, r1, #9
 80026b4:	4698      	mov	r8, r3
 80026b6:	4643      	mov	r3, r8
 80026b8:	2b00      	cmp	r3, #0
 80026ba:	d100      	bne.n	80026be <__aeabi_dsub+0x8e>
 80026bc:	e189      	b.n	80029d2 <__aeabi_dsub+0x3a2>
 80026be:	4640      	mov	r0, r8
 80026c0:	f000 fc0e 	bl	8002ee0 <__clzsi2>
 80026c4:	0003      	movs	r3, r0
 80026c6:	3b08      	subs	r3, #8
 80026c8:	2b1f      	cmp	r3, #31
 80026ca:	dd00      	ble.n	80026ce <__aeabi_dsub+0x9e>
 80026cc:	e17c      	b.n	80029c8 <__aeabi_dsub+0x398>
 80026ce:	2220      	movs	r2, #32
 80026d0:	0030      	movs	r0, r6
 80026d2:	1ad2      	subs	r2, r2, r3
 80026d4:	4641      	mov	r1, r8
 80026d6:	40d0      	lsrs	r0, r2
 80026d8:	4099      	lsls	r1, r3
 80026da:	0002      	movs	r2, r0
 80026dc:	409e      	lsls	r6, r3
 80026de:	430a      	orrs	r2, r1
 80026e0:	429d      	cmp	r5, r3
 80026e2:	dd00      	ble.n	80026e6 <__aeabi_dsub+0xb6>
 80026e4:	e16a      	b.n	80029bc <__aeabi_dsub+0x38c>
 80026e6:	1b5d      	subs	r5, r3, r5
 80026e8:	1c6b      	adds	r3, r5, #1
 80026ea:	2b1f      	cmp	r3, #31
 80026ec:	dd00      	ble.n	80026f0 <__aeabi_dsub+0xc0>
 80026ee:	e194      	b.n	8002a1a <__aeabi_dsub+0x3ea>
 80026f0:	2120      	movs	r1, #32
 80026f2:	0010      	movs	r0, r2
 80026f4:	0035      	movs	r5, r6
 80026f6:	1ac9      	subs	r1, r1, r3
 80026f8:	408e      	lsls	r6, r1
 80026fa:	40da      	lsrs	r2, r3
 80026fc:	4088      	lsls	r0, r1
 80026fe:	40dd      	lsrs	r5, r3
 8002700:	1e71      	subs	r1, r6, #1
 8002702:	418e      	sbcs	r6, r1
 8002704:	0011      	movs	r1, r2
 8002706:	2207      	movs	r2, #7
 8002708:	4328      	orrs	r0, r5
 800270a:	2500      	movs	r5, #0
 800270c:	4306      	orrs	r6, r0
 800270e:	4032      	ands	r2, r6
 8002710:	2a00      	cmp	r2, #0
 8002712:	d009      	beq.n	8002728 <__aeabi_dsub+0xf8>
 8002714:	230f      	movs	r3, #15
 8002716:	4033      	ands	r3, r6
 8002718:	2b04      	cmp	r3, #4
 800271a:	d005      	beq.n	8002728 <__aeabi_dsub+0xf8>
 800271c:	1d33      	adds	r3, r6, #4
 800271e:	42b3      	cmp	r3, r6
 8002720:	41b6      	sbcs	r6, r6
 8002722:	4276      	negs	r6, r6
 8002724:	1989      	adds	r1, r1, r6
 8002726:	001e      	movs	r6, r3
 8002728:	020b      	lsls	r3, r1, #8
 800272a:	d400      	bmi.n	800272e <__aeabi_dsub+0xfe>
 800272c:	e23d      	b.n	8002baa <__aeabi_dsub+0x57a>
 800272e:	1c6a      	adds	r2, r5, #1
 8002730:	4b91      	ldr	r3, [pc, #580]	; (8002978 <__aeabi_dsub+0x348>)
 8002732:	0555      	lsls	r5, r2, #21
 8002734:	0d6d      	lsrs	r5, r5, #21
 8002736:	429a      	cmp	r2, r3
 8002738:	d100      	bne.n	800273c <__aeabi_dsub+0x10c>
 800273a:	e119      	b.n	8002970 <__aeabi_dsub+0x340>
 800273c:	4a8f      	ldr	r2, [pc, #572]	; (800297c <__aeabi_dsub+0x34c>)
 800273e:	08f6      	lsrs	r6, r6, #3
 8002740:	400a      	ands	r2, r1
 8002742:	0757      	lsls	r7, r2, #29
 8002744:	0252      	lsls	r2, r2, #9
 8002746:	4337      	orrs	r7, r6
 8002748:	0b12      	lsrs	r2, r2, #12
 800274a:	e09b      	b.n	8002884 <__aeabi_dsub+0x254>
 800274c:	2e00      	cmp	r6, #0
 800274e:	d000      	beq.n	8002752 <__aeabi_dsub+0x122>
 8002750:	e0c5      	b.n	80028de <__aeabi_dsub+0x2ae>
 8002752:	1c6e      	adds	r6, r5, #1
 8002754:	0576      	lsls	r6, r6, #21
 8002756:	0d76      	lsrs	r6, r6, #21
 8002758:	2e01      	cmp	r6, #1
 800275a:	dc00      	bgt.n	800275e <__aeabi_dsub+0x12e>
 800275c:	e148      	b.n	80029f0 <__aeabi_dsub+0x3c0>
 800275e:	4667      	mov	r7, ip
 8002760:	1a86      	subs	r6, r0, r2
 8002762:	1bcb      	subs	r3, r1, r7
 8002764:	42b0      	cmp	r0, r6
 8002766:	41bf      	sbcs	r7, r7
 8002768:	427f      	negs	r7, r7
 800276a:	46b8      	mov	r8, r7
 800276c:	001f      	movs	r7, r3
 800276e:	4643      	mov	r3, r8
 8002770:	1aff      	subs	r7, r7, r3
 8002772:	003b      	movs	r3, r7
 8002774:	46b8      	mov	r8, r7
 8002776:	021b      	lsls	r3, r3, #8
 8002778:	d500      	bpl.n	800277c <__aeabi_dsub+0x14c>
 800277a:	e15f      	b.n	8002a3c <__aeabi_dsub+0x40c>
 800277c:	4337      	orrs	r7, r6
 800277e:	d19a      	bne.n	80026b6 <__aeabi_dsub+0x86>
 8002780:	2200      	movs	r2, #0
 8002782:	2400      	movs	r4, #0
 8002784:	2500      	movs	r5, #0
 8002786:	e079      	b.n	800287c <__aeabi_dsub+0x24c>
 8002788:	2e00      	cmp	r6, #0
 800278a:	dc00      	bgt.n	800278e <__aeabi_dsub+0x15e>
 800278c:	e0fa      	b.n	8002984 <__aeabi_dsub+0x354>
 800278e:	2f00      	cmp	r7, #0
 8002790:	d100      	bne.n	8002794 <__aeabi_dsub+0x164>
 8002792:	e08d      	b.n	80028b0 <__aeabi_dsub+0x280>
 8002794:	4b78      	ldr	r3, [pc, #480]	; (8002978 <__aeabi_dsub+0x348>)
 8002796:	429d      	cmp	r5, r3
 8002798:	d067      	beq.n	800286a <__aeabi_dsub+0x23a>
 800279a:	2380      	movs	r3, #128	; 0x80
 800279c:	4667      	mov	r7, ip
 800279e:	041b      	lsls	r3, r3, #16
 80027a0:	431f      	orrs	r7, r3
 80027a2:	46bc      	mov	ip, r7
 80027a4:	2e38      	cmp	r6, #56	; 0x38
 80027a6:	dc00      	bgt.n	80027aa <__aeabi_dsub+0x17a>
 80027a8:	e152      	b.n	8002a50 <__aeabi_dsub+0x420>
 80027aa:	4663      	mov	r3, ip
 80027ac:	4313      	orrs	r3, r2
 80027ae:	1e5a      	subs	r2, r3, #1
 80027b0:	4193      	sbcs	r3, r2
 80027b2:	181e      	adds	r6, r3, r0
 80027b4:	4286      	cmp	r6, r0
 80027b6:	4180      	sbcs	r0, r0
 80027b8:	4240      	negs	r0, r0
 80027ba:	1809      	adds	r1, r1, r0
 80027bc:	020b      	lsls	r3, r1, #8
 80027be:	d400      	bmi.n	80027c2 <__aeabi_dsub+0x192>
 80027c0:	e0be      	b.n	8002940 <__aeabi_dsub+0x310>
 80027c2:	4b6d      	ldr	r3, [pc, #436]	; (8002978 <__aeabi_dsub+0x348>)
 80027c4:	3501      	adds	r5, #1
 80027c6:	429d      	cmp	r5, r3
 80027c8:	d100      	bne.n	80027cc <__aeabi_dsub+0x19c>
 80027ca:	e0d2      	b.n	8002972 <__aeabi_dsub+0x342>
 80027cc:	4a6b      	ldr	r2, [pc, #428]	; (800297c <__aeabi_dsub+0x34c>)
 80027ce:	0873      	lsrs	r3, r6, #1
 80027d0:	400a      	ands	r2, r1
 80027d2:	2101      	movs	r1, #1
 80027d4:	400e      	ands	r6, r1
 80027d6:	431e      	orrs	r6, r3
 80027d8:	0851      	lsrs	r1, r2, #1
 80027da:	07d3      	lsls	r3, r2, #31
 80027dc:	2207      	movs	r2, #7
 80027de:	431e      	orrs	r6, r3
 80027e0:	4032      	ands	r2, r6
 80027e2:	e795      	b.n	8002710 <__aeabi_dsub+0xe0>
 80027e4:	001e      	movs	r6, r3
 80027e6:	4316      	orrs	r6, r2
 80027e8:	d000      	beq.n	80027ec <__aeabi_dsub+0x1bc>
 80027ea:	e745      	b.n	8002678 <__aeabi_dsub+0x48>
 80027ec:	e740      	b.n	8002670 <__aeabi_dsub+0x40>
 80027ee:	4b62      	ldr	r3, [pc, #392]	; (8002978 <__aeabi_dsub+0x348>)
 80027f0:	429d      	cmp	r5, r3
 80027f2:	d03a      	beq.n	800286a <__aeabi_dsub+0x23a>
 80027f4:	2380      	movs	r3, #128	; 0x80
 80027f6:	4667      	mov	r7, ip
 80027f8:	041b      	lsls	r3, r3, #16
 80027fa:	431f      	orrs	r7, r3
 80027fc:	46bc      	mov	ip, r7
 80027fe:	2e38      	cmp	r6, #56	; 0x38
 8002800:	dd00      	ble.n	8002804 <__aeabi_dsub+0x1d4>
 8002802:	e0eb      	b.n	80029dc <__aeabi_dsub+0x3ac>
 8002804:	2e1f      	cmp	r6, #31
 8002806:	dc00      	bgt.n	800280a <__aeabi_dsub+0x1da>
 8002808:	e13a      	b.n	8002a80 <__aeabi_dsub+0x450>
 800280a:	0033      	movs	r3, r6
 800280c:	4667      	mov	r7, ip
 800280e:	3b20      	subs	r3, #32
 8002810:	40df      	lsrs	r7, r3
 8002812:	003b      	movs	r3, r7
 8002814:	2e20      	cmp	r6, #32
 8002816:	d005      	beq.n	8002824 <__aeabi_dsub+0x1f4>
 8002818:	2740      	movs	r7, #64	; 0x40
 800281a:	1bbf      	subs	r7, r7, r6
 800281c:	4666      	mov	r6, ip
 800281e:	40be      	lsls	r6, r7
 8002820:	4332      	orrs	r2, r6
 8002822:	4690      	mov	r8, r2
 8002824:	4646      	mov	r6, r8
 8002826:	1e72      	subs	r2, r6, #1
 8002828:	4196      	sbcs	r6, r2
 800282a:	4333      	orrs	r3, r6
 800282c:	e0da      	b.n	80029e4 <__aeabi_dsub+0x3b4>
 800282e:	2b00      	cmp	r3, #0
 8002830:	d100      	bne.n	8002834 <__aeabi_dsub+0x204>
 8002832:	e214      	b.n	8002c5e <__aeabi_dsub+0x62e>
 8002834:	4663      	mov	r3, ip
 8002836:	4313      	orrs	r3, r2
 8002838:	d100      	bne.n	800283c <__aeabi_dsub+0x20c>
 800283a:	e168      	b.n	8002b0e <__aeabi_dsub+0x4de>
 800283c:	2380      	movs	r3, #128	; 0x80
 800283e:	074e      	lsls	r6, r1, #29
 8002840:	08c0      	lsrs	r0, r0, #3
 8002842:	08c9      	lsrs	r1, r1, #3
 8002844:	031b      	lsls	r3, r3, #12
 8002846:	4306      	orrs	r6, r0
 8002848:	4219      	tst	r1, r3
 800284a:	d008      	beq.n	800285e <__aeabi_dsub+0x22e>
 800284c:	4660      	mov	r0, ip
 800284e:	08c0      	lsrs	r0, r0, #3
 8002850:	4218      	tst	r0, r3
 8002852:	d104      	bne.n	800285e <__aeabi_dsub+0x22e>
 8002854:	4663      	mov	r3, ip
 8002856:	0001      	movs	r1, r0
 8002858:	08d2      	lsrs	r2, r2, #3
 800285a:	075e      	lsls	r6, r3, #29
 800285c:	4316      	orrs	r6, r2
 800285e:	00f3      	lsls	r3, r6, #3
 8002860:	4699      	mov	r9, r3
 8002862:	00c9      	lsls	r1, r1, #3
 8002864:	0f72      	lsrs	r2, r6, #29
 8002866:	4d44      	ldr	r5, [pc, #272]	; (8002978 <__aeabi_dsub+0x348>)
 8002868:	4311      	orrs	r1, r2
 800286a:	464b      	mov	r3, r9
 800286c:	08de      	lsrs	r6, r3, #3
 800286e:	4b42      	ldr	r3, [pc, #264]	; (8002978 <__aeabi_dsub+0x348>)
 8002870:	074f      	lsls	r7, r1, #29
 8002872:	4337      	orrs	r7, r6
 8002874:	08ca      	lsrs	r2, r1, #3
 8002876:	429d      	cmp	r5, r3
 8002878:	d100      	bne.n	800287c <__aeabi_dsub+0x24c>
 800287a:	e06e      	b.n	800295a <__aeabi_dsub+0x32a>
 800287c:	0312      	lsls	r2, r2, #12
 800287e:	056d      	lsls	r5, r5, #21
 8002880:	0b12      	lsrs	r2, r2, #12
 8002882:	0d6d      	lsrs	r5, r5, #21
 8002884:	2100      	movs	r1, #0
 8002886:	0312      	lsls	r2, r2, #12
 8002888:	0b13      	lsrs	r3, r2, #12
 800288a:	0d0a      	lsrs	r2, r1, #20
 800288c:	0512      	lsls	r2, r2, #20
 800288e:	431a      	orrs	r2, r3
 8002890:	4b3b      	ldr	r3, [pc, #236]	; (8002980 <__aeabi_dsub+0x350>)
 8002892:	052d      	lsls	r5, r5, #20
 8002894:	4013      	ands	r3, r2
 8002896:	432b      	orrs	r3, r5
 8002898:	005b      	lsls	r3, r3, #1
 800289a:	07e4      	lsls	r4, r4, #31
 800289c:	085b      	lsrs	r3, r3, #1
 800289e:	4323      	orrs	r3, r4
 80028a0:	0038      	movs	r0, r7
 80028a2:	0019      	movs	r1, r3
 80028a4:	bc3c      	pop	{r2, r3, r4, r5}
 80028a6:	4690      	mov	r8, r2
 80028a8:	4699      	mov	r9, r3
 80028aa:	46a2      	mov	sl, r4
 80028ac:	46ab      	mov	fp, r5
 80028ae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80028b0:	4663      	mov	r3, ip
 80028b2:	4313      	orrs	r3, r2
 80028b4:	d011      	beq.n	80028da <__aeabi_dsub+0x2aa>
 80028b6:	1e73      	subs	r3, r6, #1
 80028b8:	2b00      	cmp	r3, #0
 80028ba:	d000      	beq.n	80028be <__aeabi_dsub+0x28e>
 80028bc:	e107      	b.n	8002ace <__aeabi_dsub+0x49e>
 80028be:	1886      	adds	r6, r0, r2
 80028c0:	4286      	cmp	r6, r0
 80028c2:	4180      	sbcs	r0, r0
 80028c4:	4461      	add	r1, ip
 80028c6:	4240      	negs	r0, r0
 80028c8:	1809      	adds	r1, r1, r0
 80028ca:	2501      	movs	r5, #1
 80028cc:	020b      	lsls	r3, r1, #8
 80028ce:	d537      	bpl.n	8002940 <__aeabi_dsub+0x310>
 80028d0:	2502      	movs	r5, #2
 80028d2:	e77b      	b.n	80027cc <__aeabi_dsub+0x19c>
 80028d4:	003e      	movs	r6, r7
 80028d6:	4661      	mov	r1, ip
 80028d8:	4691      	mov	r9, r2
 80028da:	0035      	movs	r5, r6
 80028dc:	e7c5      	b.n	800286a <__aeabi_dsub+0x23a>
 80028de:	465c      	mov	r4, fp
 80028e0:	2d00      	cmp	r5, #0
 80028e2:	d000      	beq.n	80028e6 <__aeabi_dsub+0x2b6>
 80028e4:	e0e1      	b.n	8002aaa <__aeabi_dsub+0x47a>
 80028e6:	000b      	movs	r3, r1
 80028e8:	4303      	orrs	r3, r0
 80028ea:	d0f3      	beq.n	80028d4 <__aeabi_dsub+0x2a4>
 80028ec:	1c73      	adds	r3, r6, #1
 80028ee:	d100      	bne.n	80028f2 <__aeabi_dsub+0x2c2>
 80028f0:	e1ac      	b.n	8002c4c <__aeabi_dsub+0x61c>
 80028f2:	4b21      	ldr	r3, [pc, #132]	; (8002978 <__aeabi_dsub+0x348>)
 80028f4:	429f      	cmp	r7, r3
 80028f6:	d100      	bne.n	80028fa <__aeabi_dsub+0x2ca>
 80028f8:	e13a      	b.n	8002b70 <__aeabi_dsub+0x540>
 80028fa:	43f3      	mvns	r3, r6
 80028fc:	2b38      	cmp	r3, #56	; 0x38
 80028fe:	dd00      	ble.n	8002902 <__aeabi_dsub+0x2d2>
 8002900:	e16f      	b.n	8002be2 <__aeabi_dsub+0x5b2>
 8002902:	2b1f      	cmp	r3, #31
 8002904:	dd00      	ble.n	8002908 <__aeabi_dsub+0x2d8>
 8002906:	e18c      	b.n	8002c22 <__aeabi_dsub+0x5f2>
 8002908:	2520      	movs	r5, #32
 800290a:	000e      	movs	r6, r1
 800290c:	1aed      	subs	r5, r5, r3
 800290e:	40ae      	lsls	r6, r5
 8002910:	46b0      	mov	r8, r6
 8002912:	0006      	movs	r6, r0
 8002914:	46aa      	mov	sl, r5
 8002916:	40de      	lsrs	r6, r3
 8002918:	4645      	mov	r5, r8
 800291a:	4335      	orrs	r5, r6
 800291c:	002e      	movs	r6, r5
 800291e:	4655      	mov	r5, sl
 8002920:	40d9      	lsrs	r1, r3
 8002922:	40a8      	lsls	r0, r5
 8002924:	4663      	mov	r3, ip
 8002926:	1e45      	subs	r5, r0, #1
 8002928:	41a8      	sbcs	r0, r5
 800292a:	1a5b      	subs	r3, r3, r1
 800292c:	469c      	mov	ip, r3
 800292e:	4330      	orrs	r0, r6
 8002930:	1a16      	subs	r6, r2, r0
 8002932:	42b2      	cmp	r2, r6
 8002934:	4192      	sbcs	r2, r2
 8002936:	4663      	mov	r3, ip
 8002938:	4252      	negs	r2, r2
 800293a:	1a99      	subs	r1, r3, r2
 800293c:	003d      	movs	r5, r7
 800293e:	e6b4      	b.n	80026aa <__aeabi_dsub+0x7a>
 8002940:	2207      	movs	r2, #7
 8002942:	4032      	ands	r2, r6
 8002944:	2a00      	cmp	r2, #0
 8002946:	d000      	beq.n	800294a <__aeabi_dsub+0x31a>
 8002948:	e6e4      	b.n	8002714 <__aeabi_dsub+0xe4>
 800294a:	4b0b      	ldr	r3, [pc, #44]	; (8002978 <__aeabi_dsub+0x348>)
 800294c:	08f6      	lsrs	r6, r6, #3
 800294e:	074f      	lsls	r7, r1, #29
 8002950:	4337      	orrs	r7, r6
 8002952:	08ca      	lsrs	r2, r1, #3
 8002954:	429d      	cmp	r5, r3
 8002956:	d000      	beq.n	800295a <__aeabi_dsub+0x32a>
 8002958:	e790      	b.n	800287c <__aeabi_dsub+0x24c>
 800295a:	003b      	movs	r3, r7
 800295c:	4313      	orrs	r3, r2
 800295e:	d100      	bne.n	8002962 <__aeabi_dsub+0x332>
 8002960:	e1a6      	b.n	8002cb0 <__aeabi_dsub+0x680>
 8002962:	2380      	movs	r3, #128	; 0x80
 8002964:	031b      	lsls	r3, r3, #12
 8002966:	431a      	orrs	r2, r3
 8002968:	0312      	lsls	r2, r2, #12
 800296a:	0b12      	lsrs	r2, r2, #12
 800296c:	4d02      	ldr	r5, [pc, #8]	; (8002978 <__aeabi_dsub+0x348>)
 800296e:	e789      	b.n	8002884 <__aeabi_dsub+0x254>
 8002970:	0015      	movs	r5, r2
 8002972:	2200      	movs	r2, #0
 8002974:	2700      	movs	r7, #0
 8002976:	e785      	b.n	8002884 <__aeabi_dsub+0x254>
 8002978:	000007ff 	.word	0x000007ff
 800297c:	ff7fffff 	.word	0xff7fffff
 8002980:	800fffff 	.word	0x800fffff
 8002984:	2e00      	cmp	r6, #0
 8002986:	d000      	beq.n	800298a <__aeabi_dsub+0x35a>
 8002988:	e0c7      	b.n	8002b1a <__aeabi_dsub+0x4ea>
 800298a:	1c6b      	adds	r3, r5, #1
 800298c:	055e      	lsls	r6, r3, #21
 800298e:	0d76      	lsrs	r6, r6, #21
 8002990:	2e01      	cmp	r6, #1
 8002992:	dc00      	bgt.n	8002996 <__aeabi_dsub+0x366>
 8002994:	e0f0      	b.n	8002b78 <__aeabi_dsub+0x548>
 8002996:	4dc8      	ldr	r5, [pc, #800]	; (8002cb8 <__aeabi_dsub+0x688>)
 8002998:	42ab      	cmp	r3, r5
 800299a:	d100      	bne.n	800299e <__aeabi_dsub+0x36e>
 800299c:	e0b9      	b.n	8002b12 <__aeabi_dsub+0x4e2>
 800299e:	1885      	adds	r5, r0, r2
 80029a0:	000a      	movs	r2, r1
 80029a2:	4285      	cmp	r5, r0
 80029a4:	4189      	sbcs	r1, r1
 80029a6:	4462      	add	r2, ip
 80029a8:	4249      	negs	r1, r1
 80029aa:	1851      	adds	r1, r2, r1
 80029ac:	2207      	movs	r2, #7
 80029ae:	07ce      	lsls	r6, r1, #31
 80029b0:	086d      	lsrs	r5, r5, #1
 80029b2:	432e      	orrs	r6, r5
 80029b4:	0849      	lsrs	r1, r1, #1
 80029b6:	4032      	ands	r2, r6
 80029b8:	001d      	movs	r5, r3
 80029ba:	e6a9      	b.n	8002710 <__aeabi_dsub+0xe0>
 80029bc:	49bf      	ldr	r1, [pc, #764]	; (8002cbc <__aeabi_dsub+0x68c>)
 80029be:	1aed      	subs	r5, r5, r3
 80029c0:	4011      	ands	r1, r2
 80029c2:	2207      	movs	r2, #7
 80029c4:	4032      	ands	r2, r6
 80029c6:	e6a3      	b.n	8002710 <__aeabi_dsub+0xe0>
 80029c8:	0032      	movs	r2, r6
 80029ca:	3828      	subs	r0, #40	; 0x28
 80029cc:	4082      	lsls	r2, r0
 80029ce:	2600      	movs	r6, #0
 80029d0:	e686      	b.n	80026e0 <__aeabi_dsub+0xb0>
 80029d2:	0030      	movs	r0, r6
 80029d4:	f000 fa84 	bl	8002ee0 <__clzsi2>
 80029d8:	3020      	adds	r0, #32
 80029da:	e673      	b.n	80026c4 <__aeabi_dsub+0x94>
 80029dc:	4663      	mov	r3, ip
 80029de:	4313      	orrs	r3, r2
 80029e0:	1e5a      	subs	r2, r3, #1
 80029e2:	4193      	sbcs	r3, r2
 80029e4:	1ac6      	subs	r6, r0, r3
 80029e6:	42b0      	cmp	r0, r6
 80029e8:	4180      	sbcs	r0, r0
 80029ea:	4240      	negs	r0, r0
 80029ec:	1a09      	subs	r1, r1, r0
 80029ee:	e65c      	b.n	80026aa <__aeabi_dsub+0x7a>
 80029f0:	000e      	movs	r6, r1
 80029f2:	4667      	mov	r7, ip
 80029f4:	4306      	orrs	r6, r0
 80029f6:	4317      	orrs	r7, r2
 80029f8:	2d00      	cmp	r5, #0
 80029fa:	d15e      	bne.n	8002aba <__aeabi_dsub+0x48a>
 80029fc:	2e00      	cmp	r6, #0
 80029fe:	d000      	beq.n	8002a02 <__aeabi_dsub+0x3d2>
 8002a00:	e0f3      	b.n	8002bea <__aeabi_dsub+0x5ba>
 8002a02:	2f00      	cmp	r7, #0
 8002a04:	d100      	bne.n	8002a08 <__aeabi_dsub+0x3d8>
 8002a06:	e11e      	b.n	8002c46 <__aeabi_dsub+0x616>
 8002a08:	465c      	mov	r4, fp
 8002a0a:	4661      	mov	r1, ip
 8002a0c:	4691      	mov	r9, r2
 8002a0e:	e72c      	b.n	800286a <__aeabi_dsub+0x23a>
 8002a10:	4fa9      	ldr	r7, [pc, #676]	; (8002cb8 <__aeabi_dsub+0x688>)
 8002a12:	42be      	cmp	r6, r7
 8002a14:	d07b      	beq.n	8002b0e <__aeabi_dsub+0x4de>
 8002a16:	001e      	movs	r6, r3
 8002a18:	e6f1      	b.n	80027fe <__aeabi_dsub+0x1ce>
 8002a1a:	0010      	movs	r0, r2
 8002a1c:	3d1f      	subs	r5, #31
 8002a1e:	40e8      	lsrs	r0, r5
 8002a20:	2b20      	cmp	r3, #32
 8002a22:	d003      	beq.n	8002a2c <__aeabi_dsub+0x3fc>
 8002a24:	2140      	movs	r1, #64	; 0x40
 8002a26:	1acb      	subs	r3, r1, r3
 8002a28:	409a      	lsls	r2, r3
 8002a2a:	4316      	orrs	r6, r2
 8002a2c:	1e73      	subs	r3, r6, #1
 8002a2e:	419e      	sbcs	r6, r3
 8002a30:	2207      	movs	r2, #7
 8002a32:	4306      	orrs	r6, r0
 8002a34:	4032      	ands	r2, r6
 8002a36:	2100      	movs	r1, #0
 8002a38:	2500      	movs	r5, #0
 8002a3a:	e783      	b.n	8002944 <__aeabi_dsub+0x314>
 8002a3c:	1a16      	subs	r6, r2, r0
 8002a3e:	4663      	mov	r3, ip
 8002a40:	42b2      	cmp	r2, r6
 8002a42:	4180      	sbcs	r0, r0
 8002a44:	1a59      	subs	r1, r3, r1
 8002a46:	4240      	negs	r0, r0
 8002a48:	1a0b      	subs	r3, r1, r0
 8002a4a:	4698      	mov	r8, r3
 8002a4c:	465c      	mov	r4, fp
 8002a4e:	e632      	b.n	80026b6 <__aeabi_dsub+0x86>
 8002a50:	2e1f      	cmp	r6, #31
 8002a52:	dd00      	ble.n	8002a56 <__aeabi_dsub+0x426>
 8002a54:	e0ab      	b.n	8002bae <__aeabi_dsub+0x57e>
 8002a56:	2720      	movs	r7, #32
 8002a58:	1bbb      	subs	r3, r7, r6
 8002a5a:	469a      	mov	sl, r3
 8002a5c:	4663      	mov	r3, ip
 8002a5e:	4657      	mov	r7, sl
 8002a60:	40bb      	lsls	r3, r7
 8002a62:	4699      	mov	r9, r3
 8002a64:	0013      	movs	r3, r2
 8002a66:	464f      	mov	r7, r9
 8002a68:	40f3      	lsrs	r3, r6
 8002a6a:	431f      	orrs	r7, r3
 8002a6c:	003b      	movs	r3, r7
 8002a6e:	4657      	mov	r7, sl
 8002a70:	40ba      	lsls	r2, r7
 8002a72:	1e57      	subs	r7, r2, #1
 8002a74:	41ba      	sbcs	r2, r7
 8002a76:	4313      	orrs	r3, r2
 8002a78:	4662      	mov	r2, ip
 8002a7a:	40f2      	lsrs	r2, r6
 8002a7c:	1889      	adds	r1, r1, r2
 8002a7e:	e698      	b.n	80027b2 <__aeabi_dsub+0x182>
 8002a80:	2720      	movs	r7, #32
 8002a82:	1bbb      	subs	r3, r7, r6
 8002a84:	469a      	mov	sl, r3
 8002a86:	4663      	mov	r3, ip
 8002a88:	4657      	mov	r7, sl
 8002a8a:	40bb      	lsls	r3, r7
 8002a8c:	4699      	mov	r9, r3
 8002a8e:	0013      	movs	r3, r2
 8002a90:	464f      	mov	r7, r9
 8002a92:	40f3      	lsrs	r3, r6
 8002a94:	431f      	orrs	r7, r3
 8002a96:	003b      	movs	r3, r7
 8002a98:	4657      	mov	r7, sl
 8002a9a:	40ba      	lsls	r2, r7
 8002a9c:	1e57      	subs	r7, r2, #1
 8002a9e:	41ba      	sbcs	r2, r7
 8002aa0:	4313      	orrs	r3, r2
 8002aa2:	4662      	mov	r2, ip
 8002aa4:	40f2      	lsrs	r2, r6
 8002aa6:	1a89      	subs	r1, r1, r2
 8002aa8:	e79c      	b.n	80029e4 <__aeabi_dsub+0x3b4>
 8002aaa:	4b83      	ldr	r3, [pc, #524]	; (8002cb8 <__aeabi_dsub+0x688>)
 8002aac:	429f      	cmp	r7, r3
 8002aae:	d05f      	beq.n	8002b70 <__aeabi_dsub+0x540>
 8002ab0:	2580      	movs	r5, #128	; 0x80
 8002ab2:	042d      	lsls	r5, r5, #16
 8002ab4:	4273      	negs	r3, r6
 8002ab6:	4329      	orrs	r1, r5
 8002ab8:	e720      	b.n	80028fc <__aeabi_dsub+0x2cc>
 8002aba:	2e00      	cmp	r6, #0
 8002abc:	d10c      	bne.n	8002ad8 <__aeabi_dsub+0x4a8>
 8002abe:	2f00      	cmp	r7, #0
 8002ac0:	d100      	bne.n	8002ac4 <__aeabi_dsub+0x494>
 8002ac2:	e0d0      	b.n	8002c66 <__aeabi_dsub+0x636>
 8002ac4:	465c      	mov	r4, fp
 8002ac6:	4661      	mov	r1, ip
 8002ac8:	4691      	mov	r9, r2
 8002aca:	4d7b      	ldr	r5, [pc, #492]	; (8002cb8 <__aeabi_dsub+0x688>)
 8002acc:	e6cd      	b.n	800286a <__aeabi_dsub+0x23a>
 8002ace:	4f7a      	ldr	r7, [pc, #488]	; (8002cb8 <__aeabi_dsub+0x688>)
 8002ad0:	42be      	cmp	r6, r7
 8002ad2:	d01c      	beq.n	8002b0e <__aeabi_dsub+0x4de>
 8002ad4:	001e      	movs	r6, r3
 8002ad6:	e665      	b.n	80027a4 <__aeabi_dsub+0x174>
 8002ad8:	2f00      	cmp	r7, #0
 8002ada:	d018      	beq.n	8002b0e <__aeabi_dsub+0x4de>
 8002adc:	08c0      	lsrs	r0, r0, #3
 8002ade:	074e      	lsls	r6, r1, #29
 8002ae0:	4306      	orrs	r6, r0
 8002ae2:	2080      	movs	r0, #128	; 0x80
 8002ae4:	08c9      	lsrs	r1, r1, #3
 8002ae6:	0300      	lsls	r0, r0, #12
 8002ae8:	4201      	tst	r1, r0
 8002aea:	d008      	beq.n	8002afe <__aeabi_dsub+0x4ce>
 8002aec:	4663      	mov	r3, ip
 8002aee:	08dc      	lsrs	r4, r3, #3
 8002af0:	4204      	tst	r4, r0
 8002af2:	d104      	bne.n	8002afe <__aeabi_dsub+0x4ce>
 8002af4:	0021      	movs	r1, r4
 8002af6:	46da      	mov	sl, fp
 8002af8:	08d2      	lsrs	r2, r2, #3
 8002afa:	075e      	lsls	r6, r3, #29
 8002afc:	4316      	orrs	r6, r2
 8002afe:	00f3      	lsls	r3, r6, #3
 8002b00:	4699      	mov	r9, r3
 8002b02:	2401      	movs	r4, #1
 8002b04:	4653      	mov	r3, sl
 8002b06:	00c9      	lsls	r1, r1, #3
 8002b08:	0f72      	lsrs	r2, r6, #29
 8002b0a:	4311      	orrs	r1, r2
 8002b0c:	401c      	ands	r4, r3
 8002b0e:	4d6a      	ldr	r5, [pc, #424]	; (8002cb8 <__aeabi_dsub+0x688>)
 8002b10:	e6ab      	b.n	800286a <__aeabi_dsub+0x23a>
 8002b12:	001d      	movs	r5, r3
 8002b14:	2200      	movs	r2, #0
 8002b16:	2700      	movs	r7, #0
 8002b18:	e6b4      	b.n	8002884 <__aeabi_dsub+0x254>
 8002b1a:	2d00      	cmp	r5, #0
 8002b1c:	d159      	bne.n	8002bd2 <__aeabi_dsub+0x5a2>
 8002b1e:	000b      	movs	r3, r1
 8002b20:	4303      	orrs	r3, r0
 8002b22:	d100      	bne.n	8002b26 <__aeabi_dsub+0x4f6>
 8002b24:	e6d6      	b.n	80028d4 <__aeabi_dsub+0x2a4>
 8002b26:	1c73      	adds	r3, r6, #1
 8002b28:	d100      	bne.n	8002b2c <__aeabi_dsub+0x4fc>
 8002b2a:	e0b2      	b.n	8002c92 <__aeabi_dsub+0x662>
 8002b2c:	4b62      	ldr	r3, [pc, #392]	; (8002cb8 <__aeabi_dsub+0x688>)
 8002b2e:	429f      	cmp	r7, r3
 8002b30:	d01e      	beq.n	8002b70 <__aeabi_dsub+0x540>
 8002b32:	43f3      	mvns	r3, r6
 8002b34:	2b38      	cmp	r3, #56	; 0x38
 8002b36:	dc6f      	bgt.n	8002c18 <__aeabi_dsub+0x5e8>
 8002b38:	2b1f      	cmp	r3, #31
 8002b3a:	dd00      	ble.n	8002b3e <__aeabi_dsub+0x50e>
 8002b3c:	e097      	b.n	8002c6e <__aeabi_dsub+0x63e>
 8002b3e:	2520      	movs	r5, #32
 8002b40:	000e      	movs	r6, r1
 8002b42:	1aed      	subs	r5, r5, r3
 8002b44:	40ae      	lsls	r6, r5
 8002b46:	46b0      	mov	r8, r6
 8002b48:	0006      	movs	r6, r0
 8002b4a:	46aa      	mov	sl, r5
 8002b4c:	40de      	lsrs	r6, r3
 8002b4e:	4645      	mov	r5, r8
 8002b50:	4335      	orrs	r5, r6
 8002b52:	002e      	movs	r6, r5
 8002b54:	4655      	mov	r5, sl
 8002b56:	40a8      	lsls	r0, r5
 8002b58:	40d9      	lsrs	r1, r3
 8002b5a:	1e45      	subs	r5, r0, #1
 8002b5c:	41a8      	sbcs	r0, r5
 8002b5e:	448c      	add	ip, r1
 8002b60:	4306      	orrs	r6, r0
 8002b62:	18b6      	adds	r6, r6, r2
 8002b64:	4296      	cmp	r6, r2
 8002b66:	4192      	sbcs	r2, r2
 8002b68:	4251      	negs	r1, r2
 8002b6a:	4461      	add	r1, ip
 8002b6c:	003d      	movs	r5, r7
 8002b6e:	e625      	b.n	80027bc <__aeabi_dsub+0x18c>
 8002b70:	003d      	movs	r5, r7
 8002b72:	4661      	mov	r1, ip
 8002b74:	4691      	mov	r9, r2
 8002b76:	e678      	b.n	800286a <__aeabi_dsub+0x23a>
 8002b78:	000b      	movs	r3, r1
 8002b7a:	4303      	orrs	r3, r0
 8002b7c:	2d00      	cmp	r5, #0
 8002b7e:	d000      	beq.n	8002b82 <__aeabi_dsub+0x552>
 8002b80:	e655      	b.n	800282e <__aeabi_dsub+0x1fe>
 8002b82:	2b00      	cmp	r3, #0
 8002b84:	d0f5      	beq.n	8002b72 <__aeabi_dsub+0x542>
 8002b86:	4663      	mov	r3, ip
 8002b88:	4313      	orrs	r3, r2
 8002b8a:	d100      	bne.n	8002b8e <__aeabi_dsub+0x55e>
 8002b8c:	e66d      	b.n	800286a <__aeabi_dsub+0x23a>
 8002b8e:	1886      	adds	r6, r0, r2
 8002b90:	4286      	cmp	r6, r0
 8002b92:	4180      	sbcs	r0, r0
 8002b94:	4461      	add	r1, ip
 8002b96:	4240      	negs	r0, r0
 8002b98:	1809      	adds	r1, r1, r0
 8002b9a:	2200      	movs	r2, #0
 8002b9c:	020b      	lsls	r3, r1, #8
 8002b9e:	d400      	bmi.n	8002ba2 <__aeabi_dsub+0x572>
 8002ba0:	e6d0      	b.n	8002944 <__aeabi_dsub+0x314>
 8002ba2:	4b46      	ldr	r3, [pc, #280]	; (8002cbc <__aeabi_dsub+0x68c>)
 8002ba4:	3501      	adds	r5, #1
 8002ba6:	4019      	ands	r1, r3
 8002ba8:	e5b2      	b.n	8002710 <__aeabi_dsub+0xe0>
 8002baa:	46b1      	mov	r9, r6
 8002bac:	e65d      	b.n	800286a <__aeabi_dsub+0x23a>
 8002bae:	0033      	movs	r3, r6
 8002bb0:	4667      	mov	r7, ip
 8002bb2:	3b20      	subs	r3, #32
 8002bb4:	40df      	lsrs	r7, r3
 8002bb6:	003b      	movs	r3, r7
 8002bb8:	2e20      	cmp	r6, #32
 8002bba:	d005      	beq.n	8002bc8 <__aeabi_dsub+0x598>
 8002bbc:	2740      	movs	r7, #64	; 0x40
 8002bbe:	1bbf      	subs	r7, r7, r6
 8002bc0:	4666      	mov	r6, ip
 8002bc2:	40be      	lsls	r6, r7
 8002bc4:	4332      	orrs	r2, r6
 8002bc6:	4690      	mov	r8, r2
 8002bc8:	4646      	mov	r6, r8
 8002bca:	1e72      	subs	r2, r6, #1
 8002bcc:	4196      	sbcs	r6, r2
 8002bce:	4333      	orrs	r3, r6
 8002bd0:	e5ef      	b.n	80027b2 <__aeabi_dsub+0x182>
 8002bd2:	4b39      	ldr	r3, [pc, #228]	; (8002cb8 <__aeabi_dsub+0x688>)
 8002bd4:	429f      	cmp	r7, r3
 8002bd6:	d0cb      	beq.n	8002b70 <__aeabi_dsub+0x540>
 8002bd8:	2580      	movs	r5, #128	; 0x80
 8002bda:	042d      	lsls	r5, r5, #16
 8002bdc:	4273      	negs	r3, r6
 8002bde:	4329      	orrs	r1, r5
 8002be0:	e7a8      	b.n	8002b34 <__aeabi_dsub+0x504>
 8002be2:	4308      	orrs	r0, r1
 8002be4:	1e41      	subs	r1, r0, #1
 8002be6:	4188      	sbcs	r0, r1
 8002be8:	e6a2      	b.n	8002930 <__aeabi_dsub+0x300>
 8002bea:	2f00      	cmp	r7, #0
 8002bec:	d100      	bne.n	8002bf0 <__aeabi_dsub+0x5c0>
 8002bee:	e63c      	b.n	800286a <__aeabi_dsub+0x23a>
 8002bf0:	4663      	mov	r3, ip
 8002bf2:	1a86      	subs	r6, r0, r2
 8002bf4:	1acf      	subs	r7, r1, r3
 8002bf6:	42b0      	cmp	r0, r6
 8002bf8:	419b      	sbcs	r3, r3
 8002bfa:	425b      	negs	r3, r3
 8002bfc:	1afb      	subs	r3, r7, r3
 8002bfe:	4698      	mov	r8, r3
 8002c00:	021b      	lsls	r3, r3, #8
 8002c02:	d54e      	bpl.n	8002ca2 <__aeabi_dsub+0x672>
 8002c04:	1a16      	subs	r6, r2, r0
 8002c06:	4663      	mov	r3, ip
 8002c08:	42b2      	cmp	r2, r6
 8002c0a:	4192      	sbcs	r2, r2
 8002c0c:	1a59      	subs	r1, r3, r1
 8002c0e:	4252      	negs	r2, r2
 8002c10:	1a89      	subs	r1, r1, r2
 8002c12:	465c      	mov	r4, fp
 8002c14:	2200      	movs	r2, #0
 8002c16:	e57b      	b.n	8002710 <__aeabi_dsub+0xe0>
 8002c18:	4301      	orrs	r1, r0
 8002c1a:	000e      	movs	r6, r1
 8002c1c:	1e71      	subs	r1, r6, #1
 8002c1e:	418e      	sbcs	r6, r1
 8002c20:	e79f      	b.n	8002b62 <__aeabi_dsub+0x532>
 8002c22:	001d      	movs	r5, r3
 8002c24:	000e      	movs	r6, r1
 8002c26:	3d20      	subs	r5, #32
 8002c28:	40ee      	lsrs	r6, r5
 8002c2a:	46b0      	mov	r8, r6
 8002c2c:	2b20      	cmp	r3, #32
 8002c2e:	d004      	beq.n	8002c3a <__aeabi_dsub+0x60a>
 8002c30:	2540      	movs	r5, #64	; 0x40
 8002c32:	1aeb      	subs	r3, r5, r3
 8002c34:	4099      	lsls	r1, r3
 8002c36:	4308      	orrs	r0, r1
 8002c38:	4681      	mov	r9, r0
 8002c3a:	4648      	mov	r0, r9
 8002c3c:	4643      	mov	r3, r8
 8002c3e:	1e41      	subs	r1, r0, #1
 8002c40:	4188      	sbcs	r0, r1
 8002c42:	4318      	orrs	r0, r3
 8002c44:	e674      	b.n	8002930 <__aeabi_dsub+0x300>
 8002c46:	2200      	movs	r2, #0
 8002c48:	2400      	movs	r4, #0
 8002c4a:	e617      	b.n	800287c <__aeabi_dsub+0x24c>
 8002c4c:	1a16      	subs	r6, r2, r0
 8002c4e:	4663      	mov	r3, ip
 8002c50:	42b2      	cmp	r2, r6
 8002c52:	4192      	sbcs	r2, r2
 8002c54:	1a59      	subs	r1, r3, r1
 8002c56:	4252      	negs	r2, r2
 8002c58:	1a89      	subs	r1, r1, r2
 8002c5a:	003d      	movs	r5, r7
 8002c5c:	e525      	b.n	80026aa <__aeabi_dsub+0x7a>
 8002c5e:	4661      	mov	r1, ip
 8002c60:	4691      	mov	r9, r2
 8002c62:	4d15      	ldr	r5, [pc, #84]	; (8002cb8 <__aeabi_dsub+0x688>)
 8002c64:	e601      	b.n	800286a <__aeabi_dsub+0x23a>
 8002c66:	2280      	movs	r2, #128	; 0x80
 8002c68:	2400      	movs	r4, #0
 8002c6a:	0312      	lsls	r2, r2, #12
 8002c6c:	e679      	b.n	8002962 <__aeabi_dsub+0x332>
 8002c6e:	001d      	movs	r5, r3
 8002c70:	000e      	movs	r6, r1
 8002c72:	3d20      	subs	r5, #32
 8002c74:	40ee      	lsrs	r6, r5
 8002c76:	46b0      	mov	r8, r6
 8002c78:	2b20      	cmp	r3, #32
 8002c7a:	d004      	beq.n	8002c86 <__aeabi_dsub+0x656>
 8002c7c:	2540      	movs	r5, #64	; 0x40
 8002c7e:	1aeb      	subs	r3, r5, r3
 8002c80:	4099      	lsls	r1, r3
 8002c82:	4308      	orrs	r0, r1
 8002c84:	4681      	mov	r9, r0
 8002c86:	464e      	mov	r6, r9
 8002c88:	4643      	mov	r3, r8
 8002c8a:	1e71      	subs	r1, r6, #1
 8002c8c:	418e      	sbcs	r6, r1
 8002c8e:	431e      	orrs	r6, r3
 8002c90:	e767      	b.n	8002b62 <__aeabi_dsub+0x532>
 8002c92:	1886      	adds	r6, r0, r2
 8002c94:	4296      	cmp	r6, r2
 8002c96:	419b      	sbcs	r3, r3
 8002c98:	4461      	add	r1, ip
 8002c9a:	425b      	negs	r3, r3
 8002c9c:	18c9      	adds	r1, r1, r3
 8002c9e:	003d      	movs	r5, r7
 8002ca0:	e58c      	b.n	80027bc <__aeabi_dsub+0x18c>
 8002ca2:	4647      	mov	r7, r8
 8002ca4:	4337      	orrs	r7, r6
 8002ca6:	d0ce      	beq.n	8002c46 <__aeabi_dsub+0x616>
 8002ca8:	2207      	movs	r2, #7
 8002caa:	4641      	mov	r1, r8
 8002cac:	4032      	ands	r2, r6
 8002cae:	e649      	b.n	8002944 <__aeabi_dsub+0x314>
 8002cb0:	2700      	movs	r7, #0
 8002cb2:	003a      	movs	r2, r7
 8002cb4:	e5e6      	b.n	8002884 <__aeabi_dsub+0x254>
 8002cb6:	46c0      	nop			; (mov r8, r8)
 8002cb8:	000007ff 	.word	0x000007ff
 8002cbc:	ff7fffff 	.word	0xff7fffff

08002cc0 <__aeabi_dcmpun>:
 8002cc0:	b570      	push	{r4, r5, r6, lr}
 8002cc2:	4e0c      	ldr	r6, [pc, #48]	; (8002cf4 <__aeabi_dcmpun+0x34>)
 8002cc4:	030d      	lsls	r5, r1, #12
 8002cc6:	031c      	lsls	r4, r3, #12
 8002cc8:	0049      	lsls	r1, r1, #1
 8002cca:	005b      	lsls	r3, r3, #1
 8002ccc:	0b2d      	lsrs	r5, r5, #12
 8002cce:	0d49      	lsrs	r1, r1, #21
 8002cd0:	0b24      	lsrs	r4, r4, #12
 8002cd2:	0d5b      	lsrs	r3, r3, #21
 8002cd4:	42b1      	cmp	r1, r6
 8002cd6:	d008      	beq.n	8002cea <__aeabi_dcmpun+0x2a>
 8002cd8:	4906      	ldr	r1, [pc, #24]	; (8002cf4 <__aeabi_dcmpun+0x34>)
 8002cda:	2000      	movs	r0, #0
 8002cdc:	428b      	cmp	r3, r1
 8002cde:	d103      	bne.n	8002ce8 <__aeabi_dcmpun+0x28>
 8002ce0:	4314      	orrs	r4, r2
 8002ce2:	0020      	movs	r0, r4
 8002ce4:	1e44      	subs	r4, r0, #1
 8002ce6:	41a0      	sbcs	r0, r4
 8002ce8:	bd70      	pop	{r4, r5, r6, pc}
 8002cea:	4305      	orrs	r5, r0
 8002cec:	2001      	movs	r0, #1
 8002cee:	2d00      	cmp	r5, #0
 8002cf0:	d1fa      	bne.n	8002ce8 <__aeabi_dcmpun+0x28>
 8002cf2:	e7f1      	b.n	8002cd8 <__aeabi_dcmpun+0x18>
 8002cf4:	000007ff 	.word	0x000007ff

08002cf8 <__aeabi_d2iz>:
 8002cf8:	b530      	push	{r4, r5, lr}
 8002cfa:	4d14      	ldr	r5, [pc, #80]	; (8002d4c <__aeabi_d2iz+0x54>)
 8002cfc:	030a      	lsls	r2, r1, #12
 8002cfe:	004b      	lsls	r3, r1, #1
 8002d00:	0b12      	lsrs	r2, r2, #12
 8002d02:	0d5b      	lsrs	r3, r3, #21
 8002d04:	0fc9      	lsrs	r1, r1, #31
 8002d06:	2400      	movs	r4, #0
 8002d08:	42ab      	cmp	r3, r5
 8002d0a:	dd11      	ble.n	8002d30 <__aeabi_d2iz+0x38>
 8002d0c:	4c10      	ldr	r4, [pc, #64]	; (8002d50 <__aeabi_d2iz+0x58>)
 8002d0e:	42a3      	cmp	r3, r4
 8002d10:	dc10      	bgt.n	8002d34 <__aeabi_d2iz+0x3c>
 8002d12:	2480      	movs	r4, #128	; 0x80
 8002d14:	0364      	lsls	r4, r4, #13
 8002d16:	4322      	orrs	r2, r4
 8002d18:	4c0e      	ldr	r4, [pc, #56]	; (8002d54 <__aeabi_d2iz+0x5c>)
 8002d1a:	1ae4      	subs	r4, r4, r3
 8002d1c:	2c1f      	cmp	r4, #31
 8002d1e:	dd0c      	ble.n	8002d3a <__aeabi_d2iz+0x42>
 8002d20:	480d      	ldr	r0, [pc, #52]	; (8002d58 <__aeabi_d2iz+0x60>)
 8002d22:	1ac3      	subs	r3, r0, r3
 8002d24:	40da      	lsrs	r2, r3
 8002d26:	0013      	movs	r3, r2
 8002d28:	425c      	negs	r4, r3
 8002d2a:	2900      	cmp	r1, #0
 8002d2c:	d100      	bne.n	8002d30 <__aeabi_d2iz+0x38>
 8002d2e:	001c      	movs	r4, r3
 8002d30:	0020      	movs	r0, r4
 8002d32:	bd30      	pop	{r4, r5, pc}
 8002d34:	4b09      	ldr	r3, [pc, #36]	; (8002d5c <__aeabi_d2iz+0x64>)
 8002d36:	18cc      	adds	r4, r1, r3
 8002d38:	e7fa      	b.n	8002d30 <__aeabi_d2iz+0x38>
 8002d3a:	4d09      	ldr	r5, [pc, #36]	; (8002d60 <__aeabi_d2iz+0x68>)
 8002d3c:	40e0      	lsrs	r0, r4
 8002d3e:	46ac      	mov	ip, r5
 8002d40:	4463      	add	r3, ip
 8002d42:	409a      	lsls	r2, r3
 8002d44:	0013      	movs	r3, r2
 8002d46:	4303      	orrs	r3, r0
 8002d48:	e7ee      	b.n	8002d28 <__aeabi_d2iz+0x30>
 8002d4a:	46c0      	nop			; (mov r8, r8)
 8002d4c:	000003fe 	.word	0x000003fe
 8002d50:	0000041d 	.word	0x0000041d
 8002d54:	00000433 	.word	0x00000433
 8002d58:	00000413 	.word	0x00000413
 8002d5c:	7fffffff 	.word	0x7fffffff
 8002d60:	fffffbed 	.word	0xfffffbed

08002d64 <__aeabi_i2d>:
 8002d64:	b570      	push	{r4, r5, r6, lr}
 8002d66:	2800      	cmp	r0, #0
 8002d68:	d02d      	beq.n	8002dc6 <__aeabi_i2d+0x62>
 8002d6a:	17c3      	asrs	r3, r0, #31
 8002d6c:	18c5      	adds	r5, r0, r3
 8002d6e:	405d      	eors	r5, r3
 8002d70:	0fc4      	lsrs	r4, r0, #31
 8002d72:	0028      	movs	r0, r5
 8002d74:	f000 f8b4 	bl	8002ee0 <__clzsi2>
 8002d78:	4b15      	ldr	r3, [pc, #84]	; (8002dd0 <__aeabi_i2d+0x6c>)
 8002d7a:	1a1b      	subs	r3, r3, r0
 8002d7c:	055b      	lsls	r3, r3, #21
 8002d7e:	0d5b      	lsrs	r3, r3, #21
 8002d80:	280a      	cmp	r0, #10
 8002d82:	dd15      	ble.n	8002db0 <__aeabi_i2d+0x4c>
 8002d84:	380b      	subs	r0, #11
 8002d86:	4085      	lsls	r5, r0
 8002d88:	2200      	movs	r2, #0
 8002d8a:	032d      	lsls	r5, r5, #12
 8002d8c:	0b2d      	lsrs	r5, r5, #12
 8002d8e:	2100      	movs	r1, #0
 8002d90:	0010      	movs	r0, r2
 8002d92:	032d      	lsls	r5, r5, #12
 8002d94:	0d0a      	lsrs	r2, r1, #20
 8002d96:	0b2d      	lsrs	r5, r5, #12
 8002d98:	0512      	lsls	r2, r2, #20
 8002d9a:	432a      	orrs	r2, r5
 8002d9c:	4d0d      	ldr	r5, [pc, #52]	; (8002dd4 <__aeabi_i2d+0x70>)
 8002d9e:	051b      	lsls	r3, r3, #20
 8002da0:	402a      	ands	r2, r5
 8002da2:	4313      	orrs	r3, r2
 8002da4:	005b      	lsls	r3, r3, #1
 8002da6:	07e4      	lsls	r4, r4, #31
 8002da8:	085b      	lsrs	r3, r3, #1
 8002daa:	4323      	orrs	r3, r4
 8002dac:	0019      	movs	r1, r3
 8002dae:	bd70      	pop	{r4, r5, r6, pc}
 8002db0:	0002      	movs	r2, r0
 8002db2:	0029      	movs	r1, r5
 8002db4:	3215      	adds	r2, #21
 8002db6:	4091      	lsls	r1, r2
 8002db8:	000a      	movs	r2, r1
 8002dba:	210b      	movs	r1, #11
 8002dbc:	1a08      	subs	r0, r1, r0
 8002dbe:	40c5      	lsrs	r5, r0
 8002dc0:	032d      	lsls	r5, r5, #12
 8002dc2:	0b2d      	lsrs	r5, r5, #12
 8002dc4:	e7e3      	b.n	8002d8e <__aeabi_i2d+0x2a>
 8002dc6:	2400      	movs	r4, #0
 8002dc8:	2300      	movs	r3, #0
 8002dca:	2500      	movs	r5, #0
 8002dcc:	2200      	movs	r2, #0
 8002dce:	e7de      	b.n	8002d8e <__aeabi_i2d+0x2a>
 8002dd0:	0000041e 	.word	0x0000041e
 8002dd4:	800fffff 	.word	0x800fffff

08002dd8 <__aeabi_ui2d>:
 8002dd8:	b510      	push	{r4, lr}
 8002dda:	1e04      	subs	r4, r0, #0
 8002ddc:	d025      	beq.n	8002e2a <__aeabi_ui2d+0x52>
 8002dde:	f000 f87f 	bl	8002ee0 <__clzsi2>
 8002de2:	4b14      	ldr	r3, [pc, #80]	; (8002e34 <__aeabi_ui2d+0x5c>)
 8002de4:	1a1b      	subs	r3, r3, r0
 8002de6:	055b      	lsls	r3, r3, #21
 8002de8:	0d5b      	lsrs	r3, r3, #21
 8002dea:	280a      	cmp	r0, #10
 8002dec:	dd12      	ble.n	8002e14 <__aeabi_ui2d+0x3c>
 8002dee:	380b      	subs	r0, #11
 8002df0:	4084      	lsls	r4, r0
 8002df2:	2200      	movs	r2, #0
 8002df4:	0324      	lsls	r4, r4, #12
 8002df6:	0b24      	lsrs	r4, r4, #12
 8002df8:	2100      	movs	r1, #0
 8002dfa:	0010      	movs	r0, r2
 8002dfc:	0324      	lsls	r4, r4, #12
 8002dfe:	0d0a      	lsrs	r2, r1, #20
 8002e00:	0b24      	lsrs	r4, r4, #12
 8002e02:	0512      	lsls	r2, r2, #20
 8002e04:	4322      	orrs	r2, r4
 8002e06:	4c0c      	ldr	r4, [pc, #48]	; (8002e38 <__aeabi_ui2d+0x60>)
 8002e08:	051b      	lsls	r3, r3, #20
 8002e0a:	4022      	ands	r2, r4
 8002e0c:	4313      	orrs	r3, r2
 8002e0e:	005b      	lsls	r3, r3, #1
 8002e10:	0859      	lsrs	r1, r3, #1
 8002e12:	bd10      	pop	{r4, pc}
 8002e14:	0002      	movs	r2, r0
 8002e16:	0021      	movs	r1, r4
 8002e18:	3215      	adds	r2, #21
 8002e1a:	4091      	lsls	r1, r2
 8002e1c:	000a      	movs	r2, r1
 8002e1e:	210b      	movs	r1, #11
 8002e20:	1a08      	subs	r0, r1, r0
 8002e22:	40c4      	lsrs	r4, r0
 8002e24:	0324      	lsls	r4, r4, #12
 8002e26:	0b24      	lsrs	r4, r4, #12
 8002e28:	e7e6      	b.n	8002df8 <__aeabi_ui2d+0x20>
 8002e2a:	2300      	movs	r3, #0
 8002e2c:	2400      	movs	r4, #0
 8002e2e:	2200      	movs	r2, #0
 8002e30:	e7e2      	b.n	8002df8 <__aeabi_ui2d+0x20>
 8002e32:	46c0      	nop			; (mov r8, r8)
 8002e34:	0000041e 	.word	0x0000041e
 8002e38:	800fffff 	.word	0x800fffff

08002e3c <__aeabi_f2d>:
 8002e3c:	0041      	lsls	r1, r0, #1
 8002e3e:	0e09      	lsrs	r1, r1, #24
 8002e40:	1c4b      	adds	r3, r1, #1
 8002e42:	b570      	push	{r4, r5, r6, lr}
 8002e44:	b2db      	uxtb	r3, r3
 8002e46:	0246      	lsls	r6, r0, #9
 8002e48:	0a75      	lsrs	r5, r6, #9
 8002e4a:	0fc4      	lsrs	r4, r0, #31
 8002e4c:	2b01      	cmp	r3, #1
 8002e4e:	dd14      	ble.n	8002e7a <__aeabi_f2d+0x3e>
 8002e50:	23e0      	movs	r3, #224	; 0xe0
 8002e52:	009b      	lsls	r3, r3, #2
 8002e54:	076d      	lsls	r5, r5, #29
 8002e56:	0b36      	lsrs	r6, r6, #12
 8002e58:	18cb      	adds	r3, r1, r3
 8002e5a:	2100      	movs	r1, #0
 8002e5c:	0d0a      	lsrs	r2, r1, #20
 8002e5e:	0028      	movs	r0, r5
 8002e60:	0512      	lsls	r2, r2, #20
 8002e62:	4d1c      	ldr	r5, [pc, #112]	; (8002ed4 <__aeabi_f2d+0x98>)
 8002e64:	4332      	orrs	r2, r6
 8002e66:	055b      	lsls	r3, r3, #21
 8002e68:	402a      	ands	r2, r5
 8002e6a:	085b      	lsrs	r3, r3, #1
 8002e6c:	4313      	orrs	r3, r2
 8002e6e:	005b      	lsls	r3, r3, #1
 8002e70:	07e4      	lsls	r4, r4, #31
 8002e72:	085b      	lsrs	r3, r3, #1
 8002e74:	4323      	orrs	r3, r4
 8002e76:	0019      	movs	r1, r3
 8002e78:	bd70      	pop	{r4, r5, r6, pc}
 8002e7a:	2900      	cmp	r1, #0
 8002e7c:	d114      	bne.n	8002ea8 <__aeabi_f2d+0x6c>
 8002e7e:	2d00      	cmp	r5, #0
 8002e80:	d01e      	beq.n	8002ec0 <__aeabi_f2d+0x84>
 8002e82:	0028      	movs	r0, r5
 8002e84:	f000 f82c 	bl	8002ee0 <__clzsi2>
 8002e88:	280a      	cmp	r0, #10
 8002e8a:	dc1c      	bgt.n	8002ec6 <__aeabi_f2d+0x8a>
 8002e8c:	230b      	movs	r3, #11
 8002e8e:	002a      	movs	r2, r5
 8002e90:	1a1b      	subs	r3, r3, r0
 8002e92:	40da      	lsrs	r2, r3
 8002e94:	0003      	movs	r3, r0
 8002e96:	3315      	adds	r3, #21
 8002e98:	409d      	lsls	r5, r3
 8002e9a:	4b0f      	ldr	r3, [pc, #60]	; (8002ed8 <__aeabi_f2d+0x9c>)
 8002e9c:	0312      	lsls	r2, r2, #12
 8002e9e:	1a1b      	subs	r3, r3, r0
 8002ea0:	055b      	lsls	r3, r3, #21
 8002ea2:	0b16      	lsrs	r6, r2, #12
 8002ea4:	0d5b      	lsrs	r3, r3, #21
 8002ea6:	e7d8      	b.n	8002e5a <__aeabi_f2d+0x1e>
 8002ea8:	2d00      	cmp	r5, #0
 8002eaa:	d006      	beq.n	8002eba <__aeabi_f2d+0x7e>
 8002eac:	0b32      	lsrs	r2, r6, #12
 8002eae:	2680      	movs	r6, #128	; 0x80
 8002eb0:	0336      	lsls	r6, r6, #12
 8002eb2:	076d      	lsls	r5, r5, #29
 8002eb4:	4316      	orrs	r6, r2
 8002eb6:	4b09      	ldr	r3, [pc, #36]	; (8002edc <__aeabi_f2d+0xa0>)
 8002eb8:	e7cf      	b.n	8002e5a <__aeabi_f2d+0x1e>
 8002eba:	4b08      	ldr	r3, [pc, #32]	; (8002edc <__aeabi_f2d+0xa0>)
 8002ebc:	2600      	movs	r6, #0
 8002ebe:	e7cc      	b.n	8002e5a <__aeabi_f2d+0x1e>
 8002ec0:	2300      	movs	r3, #0
 8002ec2:	2600      	movs	r6, #0
 8002ec4:	e7c9      	b.n	8002e5a <__aeabi_f2d+0x1e>
 8002ec6:	0003      	movs	r3, r0
 8002ec8:	002a      	movs	r2, r5
 8002eca:	3b0b      	subs	r3, #11
 8002ecc:	409a      	lsls	r2, r3
 8002ece:	2500      	movs	r5, #0
 8002ed0:	e7e3      	b.n	8002e9a <__aeabi_f2d+0x5e>
 8002ed2:	46c0      	nop			; (mov r8, r8)
 8002ed4:	800fffff 	.word	0x800fffff
 8002ed8:	00000389 	.word	0x00000389
 8002edc:	000007ff 	.word	0x000007ff

08002ee0 <__clzsi2>:
 8002ee0:	211c      	movs	r1, #28
 8002ee2:	2301      	movs	r3, #1
 8002ee4:	041b      	lsls	r3, r3, #16
 8002ee6:	4298      	cmp	r0, r3
 8002ee8:	d301      	bcc.n	8002eee <__clzsi2+0xe>
 8002eea:	0c00      	lsrs	r0, r0, #16
 8002eec:	3910      	subs	r1, #16
 8002eee:	0a1b      	lsrs	r3, r3, #8
 8002ef0:	4298      	cmp	r0, r3
 8002ef2:	d301      	bcc.n	8002ef8 <__clzsi2+0x18>
 8002ef4:	0a00      	lsrs	r0, r0, #8
 8002ef6:	3908      	subs	r1, #8
 8002ef8:	091b      	lsrs	r3, r3, #4
 8002efa:	4298      	cmp	r0, r3
 8002efc:	d301      	bcc.n	8002f02 <__clzsi2+0x22>
 8002efe:	0900      	lsrs	r0, r0, #4
 8002f00:	3904      	subs	r1, #4
 8002f02:	a202      	add	r2, pc, #8	; (adr r2, 8002f0c <__clzsi2+0x2c>)
 8002f04:	5c10      	ldrb	r0, [r2, r0]
 8002f06:	1840      	adds	r0, r0, r1
 8002f08:	4770      	bx	lr
 8002f0a:	46c0      	nop			; (mov r8, r8)
 8002f0c:	02020304 	.word	0x02020304
 8002f10:	01010101 	.word	0x01010101
	...

08002f1c <Init_SevSeg>:
 *      Author: vitlaiy2034
 */
#include<SevSeg.h>


inline void Init_SevSeg(){
 8002f1c:	b580      	push	{r7, lr}
 8002f1e:	b082      	sub	sp, #8
 8002f20:	af00      	add	r7, sp, #0


	//Enable clocking of GPIO
	RCC->AHBENR|=RCC_AHBENR_GPIOAEN;
 8002f22:	4b5c      	ldr	r3, [pc, #368]	; (8003094 <Init_SevSeg+0x178>)
 8002f24:	695a      	ldr	r2, [r3, #20]
 8002f26:	4b5b      	ldr	r3, [pc, #364]	; (8003094 <Init_SevSeg+0x178>)
 8002f28:	2180      	movs	r1, #128	; 0x80
 8002f2a:	0289      	lsls	r1, r1, #10
 8002f2c:	430a      	orrs	r2, r1
 8002f2e:	615a      	str	r2, [r3, #20]

	//Initialize pins to output PP of Stm32
	//which are connected to Seven Segment a,b,c,d,e,f,g,dt pins
	uint8_t i;
	for (i = 0; i <= 7; ++i) {
 8002f30:	1dfb      	adds	r3, r7, #7
 8002f32:	2200      	movs	r2, #0
 8002f34:	701a      	strb	r2, [r3, #0]
 8002f36:	e046      	b.n	8002fc6 <Init_SevSeg+0xaa>
		GPIOA->MODER|=1<<(ucaSegPins[i]*2);
 8002f38:	2390      	movs	r3, #144	; 0x90
 8002f3a:	05db      	lsls	r3, r3, #23
 8002f3c:	681a      	ldr	r2, [r3, #0]
 8002f3e:	1dfb      	adds	r3, r7, #7
 8002f40:	781b      	ldrb	r3, [r3, #0]
 8002f42:	4955      	ldr	r1, [pc, #340]	; (8003098 <Init_SevSeg+0x17c>)
 8002f44:	5ccb      	ldrb	r3, [r1, r3]
 8002f46:	005b      	lsls	r3, r3, #1
 8002f48:	2101      	movs	r1, #1
 8002f4a:	4099      	lsls	r1, r3
 8002f4c:	000b      	movs	r3, r1
 8002f4e:	0019      	movs	r1, r3
 8002f50:	2390      	movs	r3, #144	; 0x90
 8002f52:	05db      	lsls	r3, r3, #23
 8002f54:	430a      	orrs	r2, r1
 8002f56:	601a      	str	r2, [r3, #0]
		GPIOA->OTYPER&=~(1<<ucaSegPins[i]);
 8002f58:	2390      	movs	r3, #144	; 0x90
 8002f5a:	05db      	lsls	r3, r3, #23
 8002f5c:	685a      	ldr	r2, [r3, #4]
 8002f5e:	1dfb      	adds	r3, r7, #7
 8002f60:	781b      	ldrb	r3, [r3, #0]
 8002f62:	494d      	ldr	r1, [pc, #308]	; (8003098 <Init_SevSeg+0x17c>)
 8002f64:	5ccb      	ldrb	r3, [r1, r3]
 8002f66:	0019      	movs	r1, r3
 8002f68:	2301      	movs	r3, #1
 8002f6a:	408b      	lsls	r3, r1
 8002f6c:	43db      	mvns	r3, r3
 8002f6e:	0019      	movs	r1, r3
 8002f70:	2390      	movs	r3, #144	; 0x90
 8002f72:	05db      	lsls	r3, r3, #23
 8002f74:	400a      	ands	r2, r1
 8002f76:	605a      	str	r2, [r3, #4]
		GPIOA->OSPEEDR&=~(3<<(ucaSegPins[i]*2));
 8002f78:	2390      	movs	r3, #144	; 0x90
 8002f7a:	05db      	lsls	r3, r3, #23
 8002f7c:	689a      	ldr	r2, [r3, #8]
 8002f7e:	1dfb      	adds	r3, r7, #7
 8002f80:	781b      	ldrb	r3, [r3, #0]
 8002f82:	4945      	ldr	r1, [pc, #276]	; (8003098 <Init_SevSeg+0x17c>)
 8002f84:	5ccb      	ldrb	r3, [r1, r3]
 8002f86:	005b      	lsls	r3, r3, #1
 8002f88:	2103      	movs	r1, #3
 8002f8a:	4099      	lsls	r1, r3
 8002f8c:	000b      	movs	r3, r1
 8002f8e:	43db      	mvns	r3, r3
 8002f90:	0019      	movs	r1, r3
 8002f92:	2390      	movs	r3, #144	; 0x90
 8002f94:	05db      	lsls	r3, r3, #23
 8002f96:	400a      	ands	r2, r1
 8002f98:	609a      	str	r2, [r3, #8]
		GPIOA->PUPDR&=~(3<<(ucaSegPins[i]*2));
 8002f9a:	2390      	movs	r3, #144	; 0x90
 8002f9c:	05db      	lsls	r3, r3, #23
 8002f9e:	68da      	ldr	r2, [r3, #12]
 8002fa0:	1dfb      	adds	r3, r7, #7
 8002fa2:	781b      	ldrb	r3, [r3, #0]
 8002fa4:	493c      	ldr	r1, [pc, #240]	; (8003098 <Init_SevSeg+0x17c>)
 8002fa6:	5ccb      	ldrb	r3, [r1, r3]
 8002fa8:	005b      	lsls	r3, r3, #1
 8002faa:	2103      	movs	r1, #3
 8002fac:	4099      	lsls	r1, r3
 8002fae:	000b      	movs	r3, r1
 8002fb0:	43db      	mvns	r3, r3
 8002fb2:	0019      	movs	r1, r3
 8002fb4:	2390      	movs	r3, #144	; 0x90
 8002fb6:	05db      	lsls	r3, r3, #23
 8002fb8:	400a      	ands	r2, r1
 8002fba:	60da      	str	r2, [r3, #12]
	for (i = 0; i <= 7; ++i) {
 8002fbc:	1dfb      	adds	r3, r7, #7
 8002fbe:	1dfa      	adds	r2, r7, #7
 8002fc0:	7812      	ldrb	r2, [r2, #0]
 8002fc2:	3201      	adds	r2, #1
 8002fc4:	701a      	strb	r2, [r3, #0]
 8002fc6:	1dfb      	adds	r3, r7, #7
 8002fc8:	781b      	ldrb	r3, [r3, #0]
 8002fca:	2b07      	cmp	r3, #7
 8002fcc:	d9b4      	bls.n	8002f38 <Init_SevSeg+0x1c>
	}
	//Initialize pins of Stm32
	//which are connected to Seven Segment Cathodes pins
	for (i = 0; i <SEG_CNT; ++i) {
 8002fce:	1dfb      	adds	r3, r7, #7
 8002fd0:	2200      	movs	r2, #0
 8002fd2:	701a      	strb	r2, [r3, #0]
 8002fd4:	e055      	b.n	8003082 <Init_SevSeg+0x166>
		GPIOA->MODER|=1<<(ucaComPins[i]*2);
 8002fd6:	2390      	movs	r3, #144	; 0x90
 8002fd8:	05db      	lsls	r3, r3, #23
 8002fda:	681a      	ldr	r2, [r3, #0]
 8002fdc:	1dfb      	adds	r3, r7, #7
 8002fde:	781b      	ldrb	r3, [r3, #0]
 8002fe0:	492e      	ldr	r1, [pc, #184]	; (800309c <Init_SevSeg+0x180>)
 8002fe2:	5ccb      	ldrb	r3, [r1, r3]
 8002fe4:	005b      	lsls	r3, r3, #1
 8002fe6:	2101      	movs	r1, #1
 8002fe8:	4099      	lsls	r1, r3
 8002fea:	000b      	movs	r3, r1
 8002fec:	0019      	movs	r1, r3
 8002fee:	2390      	movs	r3, #144	; 0x90
 8002ff0:	05db      	lsls	r3, r3, #23
 8002ff2:	430a      	orrs	r2, r1
 8002ff4:	601a      	str	r2, [r3, #0]
		GPIOA->OTYPER&=~(1<<ucaComPins[i]);
 8002ff6:	2390      	movs	r3, #144	; 0x90
 8002ff8:	05db      	lsls	r3, r3, #23
 8002ffa:	685a      	ldr	r2, [r3, #4]
 8002ffc:	1dfb      	adds	r3, r7, #7
 8002ffe:	781b      	ldrb	r3, [r3, #0]
 8003000:	4926      	ldr	r1, [pc, #152]	; (800309c <Init_SevSeg+0x180>)
 8003002:	5ccb      	ldrb	r3, [r1, r3]
 8003004:	0019      	movs	r1, r3
 8003006:	2301      	movs	r3, #1
 8003008:	408b      	lsls	r3, r1
 800300a:	43db      	mvns	r3, r3
 800300c:	0019      	movs	r1, r3
 800300e:	2390      	movs	r3, #144	; 0x90
 8003010:	05db      	lsls	r3, r3, #23
 8003012:	400a      	ands	r2, r1
 8003014:	605a      	str	r2, [r3, #4]
		GPIOA->OSPEEDR&=~(3<<(ucaComPins[i]*2));
 8003016:	2390      	movs	r3, #144	; 0x90
 8003018:	05db      	lsls	r3, r3, #23
 800301a:	689a      	ldr	r2, [r3, #8]
 800301c:	1dfb      	adds	r3, r7, #7
 800301e:	781b      	ldrb	r3, [r3, #0]
 8003020:	491e      	ldr	r1, [pc, #120]	; (800309c <Init_SevSeg+0x180>)
 8003022:	5ccb      	ldrb	r3, [r1, r3]
 8003024:	005b      	lsls	r3, r3, #1
 8003026:	2103      	movs	r1, #3
 8003028:	4099      	lsls	r1, r3
 800302a:	000b      	movs	r3, r1
 800302c:	43db      	mvns	r3, r3
 800302e:	0019      	movs	r1, r3
 8003030:	2390      	movs	r3, #144	; 0x90
 8003032:	05db      	lsls	r3, r3, #23
 8003034:	400a      	ands	r2, r1
 8003036:	609a      	str	r2, [r3, #8]
		GPIOA->PUPDR&=~(3<<(ucaComPins[i]*2));
 8003038:	2390      	movs	r3, #144	; 0x90
 800303a:	05db      	lsls	r3, r3, #23
 800303c:	68da      	ldr	r2, [r3, #12]
 800303e:	1dfb      	adds	r3, r7, #7
 8003040:	781b      	ldrb	r3, [r3, #0]
 8003042:	4916      	ldr	r1, [pc, #88]	; (800309c <Init_SevSeg+0x180>)
 8003044:	5ccb      	ldrb	r3, [r1, r3]
 8003046:	005b      	lsls	r3, r3, #1
 8003048:	2103      	movs	r1, #3
 800304a:	4099      	lsls	r1, r3
 800304c:	000b      	movs	r3, r1
 800304e:	43db      	mvns	r3, r3
 8003050:	0019      	movs	r1, r3
 8003052:	2390      	movs	r3, #144	; 0x90
 8003054:	05db      	lsls	r3, r3, #23
 8003056:	400a      	ands	r2, r1
 8003058:	60da      	str	r2, [r3, #12]
		GPIOA->ODR|=1<<(ucaComPins[i]);
 800305a:	2390      	movs	r3, #144	; 0x90
 800305c:	05db      	lsls	r3, r3, #23
 800305e:	695a      	ldr	r2, [r3, #20]
 8003060:	1dfb      	adds	r3, r7, #7
 8003062:	781b      	ldrb	r3, [r3, #0]
 8003064:	490d      	ldr	r1, [pc, #52]	; (800309c <Init_SevSeg+0x180>)
 8003066:	5ccb      	ldrb	r3, [r1, r3]
 8003068:	0019      	movs	r1, r3
 800306a:	2301      	movs	r3, #1
 800306c:	408b      	lsls	r3, r1
 800306e:	0019      	movs	r1, r3
 8003070:	2390      	movs	r3, #144	; 0x90
 8003072:	05db      	lsls	r3, r3, #23
 8003074:	430a      	orrs	r2, r1
 8003076:	615a      	str	r2, [r3, #20]
	for (i = 0; i <SEG_CNT; ++i) {
 8003078:	1dfb      	adds	r3, r7, #7
 800307a:	1dfa      	adds	r2, r7, #7
 800307c:	7812      	ldrb	r2, [r2, #0]
 800307e:	3201      	adds	r2, #1
 8003080:	701a      	strb	r2, [r3, #0]
 8003082:	1dfb      	adds	r3, r7, #7
 8003084:	781b      	ldrb	r3, [r3, #0]
 8003086:	2b03      	cmp	r3, #3
 8003088:	d9a5      	bls.n	8002fd6 <Init_SevSeg+0xba>
	}

}
 800308a:	46c0      	nop			; (mov r8, r8)
 800308c:	46bd      	mov	sp, r7
 800308e:	b002      	add	sp, #8
 8003090:	bd80      	pop	{r7, pc}
 8003092:	46c0      	nop			; (mov r8, r8)
 8003094:	40021000 	.word	0x40021000
 8003098:	20000000 	.word	0x20000000
 800309c:	20000008 	.word	0x20000008

080030a0 <ShowSim_SevSeg>:

void ShowSim_SevSeg(char cSim,uint8_t u8SegNum){
 80030a0:	b580      	push	{r7, lr}
 80030a2:	b082      	sub	sp, #8
 80030a4:	af00      	add	r7, sp, #0
 80030a6:	0002      	movs	r2, r0
 80030a8:	1dfb      	adds	r3, r7, #7
 80030aa:	701a      	strb	r2, [r3, #0]
 80030ac:	1dbb      	adds	r3, r7, #6
 80030ae:	1c0a      	adds	r2, r1, #0
 80030b0:	701a      	strb	r2, [r3, #0]
	//assert(u8SegNum<SEG_CNT);
	GPIOA->ODR&=~(1<<ucaComPins[u8SegNum]);
 80030b2:	2390      	movs	r3, #144	; 0x90
 80030b4:	05db      	lsls	r3, r3, #23
 80030b6:	695a      	ldr	r2, [r3, #20]
 80030b8:	1dbb      	adds	r3, r7, #6
 80030ba:	781b      	ldrb	r3, [r3, #0]
 80030bc:	49d4      	ldr	r1, [pc, #848]	; (8003410 <ShowSim_SevSeg+0x370>)
 80030be:	5ccb      	ldrb	r3, [r1, r3]
 80030c0:	0019      	movs	r1, r3
 80030c2:	2301      	movs	r3, #1
 80030c4:	408b      	lsls	r3, r1
 80030c6:	43db      	mvns	r3, r3
 80030c8:	0019      	movs	r1, r3
 80030ca:	2390      	movs	r3, #144	; 0x90
 80030cc:	05db      	lsls	r3, r3, #23
 80030ce:	400a      	ands	r2, r1
 80030d0:	615a      	str	r2, [r3, #20]
	switch (cSim) {
 80030d2:	1dfb      	adds	r3, r7, #7
 80030d4:	781b      	ldrb	r3, [r3, #0]
 80030d6:	3b2e      	subs	r3, #46	; 0x2e
 80030d8:	2b0b      	cmp	r3, #11
 80030da:	d900      	bls.n	80030de <ShowSim_SevSeg+0x3e>
 80030dc:	e192      	b.n	8003404 <ShowSim_SevSeg+0x364>
 80030de:	009a      	lsls	r2, r3, #2
 80030e0:	4bcc      	ldr	r3, [pc, #816]	; (8003414 <ShowSim_SevSeg+0x374>)
 80030e2:	18d3      	adds	r3, r2, r3
 80030e4:	681b      	ldr	r3, [r3, #0]
 80030e6:	469f      	mov	pc, r3
	case '.':{
		GPIOA->ODR|=1<<ucaSegPins[7];
 80030e8:	2390      	movs	r3, #144	; 0x90
 80030ea:	05db      	lsls	r3, r3, #23
 80030ec:	695a      	ldr	r2, [r3, #20]
 80030ee:	4bca      	ldr	r3, [pc, #808]	; (8003418 <ShowSim_SevSeg+0x378>)
 80030f0:	79db      	ldrb	r3, [r3, #7]
 80030f2:	0019      	movs	r1, r3
 80030f4:	2301      	movs	r3, #1
 80030f6:	408b      	lsls	r3, r1
 80030f8:	0019      	movs	r1, r3
 80030fa:	2390      	movs	r3, #144	; 0x90
 80030fc:	05db      	lsls	r3, r3, #23
 80030fe:	430a      	orrs	r2, r1
 8003100:	615a      	str	r2, [r3, #20]
		break;
 8003102:	e180      	b.n	8003406 <ShowSim_SevSeg+0x366>
	}
	case '0':{
		GPIOA->ODR|=(1<<ucaSegPins[0])|(1<<ucaSegPins[1])|(1<<ucaSegPins[2])|
 8003104:	2390      	movs	r3, #144	; 0x90
 8003106:	05db      	lsls	r3, r3, #23
 8003108:	695a      	ldr	r2, [r3, #20]
 800310a:	4bc3      	ldr	r3, [pc, #780]	; (8003418 <ShowSim_SevSeg+0x378>)
 800310c:	781b      	ldrb	r3, [r3, #0]
 800310e:	0019      	movs	r1, r3
 8003110:	2301      	movs	r3, #1
 8003112:	408b      	lsls	r3, r1
 8003114:	0019      	movs	r1, r3
 8003116:	4bc0      	ldr	r3, [pc, #768]	; (8003418 <ShowSim_SevSeg+0x378>)
 8003118:	785b      	ldrb	r3, [r3, #1]
 800311a:	0018      	movs	r0, r3
 800311c:	2301      	movs	r3, #1
 800311e:	4083      	lsls	r3, r0
 8003120:	4319      	orrs	r1, r3
 8003122:	4bbd      	ldr	r3, [pc, #756]	; (8003418 <ShowSim_SevSeg+0x378>)
 8003124:	789b      	ldrb	r3, [r3, #2]
 8003126:	0018      	movs	r0, r3
 8003128:	2301      	movs	r3, #1
 800312a:	4083      	lsls	r3, r0
 800312c:	4319      	orrs	r1, r3
				(1<<ucaSegPins[3])|(1<<ucaSegPins[4])|
 800312e:	4bba      	ldr	r3, [pc, #744]	; (8003418 <ShowSim_SevSeg+0x378>)
 8003130:	78db      	ldrb	r3, [r3, #3]
 8003132:	0018      	movs	r0, r3
 8003134:	2301      	movs	r3, #1
 8003136:	4083      	lsls	r3, r0
		GPIOA->ODR|=(1<<ucaSegPins[0])|(1<<ucaSegPins[1])|(1<<ucaSegPins[2])|
 8003138:	4319      	orrs	r1, r3
				(1<<ucaSegPins[3])|(1<<ucaSegPins[4])|
 800313a:	4bb7      	ldr	r3, [pc, #732]	; (8003418 <ShowSim_SevSeg+0x378>)
 800313c:	791b      	ldrb	r3, [r3, #4]
 800313e:	0018      	movs	r0, r3
 8003140:	2301      	movs	r3, #1
 8003142:	4083      	lsls	r3, r0
 8003144:	4319      	orrs	r1, r3
				(1<<ucaSegPins[5]);
 8003146:	4bb4      	ldr	r3, [pc, #720]	; (8003418 <ShowSim_SevSeg+0x378>)
 8003148:	795b      	ldrb	r3, [r3, #5]
 800314a:	0018      	movs	r0, r3
 800314c:	2301      	movs	r3, #1
 800314e:	4083      	lsls	r3, r0
				(1<<ucaSegPins[3])|(1<<ucaSegPins[4])|
 8003150:	430b      	orrs	r3, r1
 8003152:	0019      	movs	r1, r3
		GPIOA->ODR|=(1<<ucaSegPins[0])|(1<<ucaSegPins[1])|(1<<ucaSegPins[2])|
 8003154:	2390      	movs	r3, #144	; 0x90
 8003156:	05db      	lsls	r3, r3, #23
 8003158:	430a      	orrs	r2, r1
 800315a:	615a      	str	r2, [r3, #20]
		break;
 800315c:	e153      	b.n	8003406 <ShowSim_SevSeg+0x366>
	}
	case '1':{
		GPIOA->ODR|=(1<<ucaSegPins[1])|(1<<ucaSegPins[2]);
 800315e:	2390      	movs	r3, #144	; 0x90
 8003160:	05db      	lsls	r3, r3, #23
 8003162:	695a      	ldr	r2, [r3, #20]
 8003164:	4bac      	ldr	r3, [pc, #688]	; (8003418 <ShowSim_SevSeg+0x378>)
 8003166:	785b      	ldrb	r3, [r3, #1]
 8003168:	0019      	movs	r1, r3
 800316a:	2301      	movs	r3, #1
 800316c:	408b      	lsls	r3, r1
 800316e:	0019      	movs	r1, r3
 8003170:	4ba9      	ldr	r3, [pc, #676]	; (8003418 <ShowSim_SevSeg+0x378>)
 8003172:	789b      	ldrb	r3, [r3, #2]
 8003174:	0018      	movs	r0, r3
 8003176:	2301      	movs	r3, #1
 8003178:	4083      	lsls	r3, r0
 800317a:	430b      	orrs	r3, r1
 800317c:	0019      	movs	r1, r3
 800317e:	2390      	movs	r3, #144	; 0x90
 8003180:	05db      	lsls	r3, r3, #23
 8003182:	430a      	orrs	r2, r1
 8003184:	615a      	str	r2, [r3, #20]
		break;
 8003186:	e13e      	b.n	8003406 <ShowSim_SevSeg+0x366>
	}
	case '2':{
		GPIOA->ODR|=(1<<ucaSegPins[0])|(1<<ucaSegPins[1])|(1<<ucaSegPins[3])
 8003188:	2390      	movs	r3, #144	; 0x90
 800318a:	05db      	lsls	r3, r3, #23
 800318c:	695a      	ldr	r2, [r3, #20]
 800318e:	4ba2      	ldr	r3, [pc, #648]	; (8003418 <ShowSim_SevSeg+0x378>)
 8003190:	781b      	ldrb	r3, [r3, #0]
 8003192:	0019      	movs	r1, r3
 8003194:	2301      	movs	r3, #1
 8003196:	408b      	lsls	r3, r1
 8003198:	0019      	movs	r1, r3
 800319a:	4b9f      	ldr	r3, [pc, #636]	; (8003418 <ShowSim_SevSeg+0x378>)
 800319c:	785b      	ldrb	r3, [r3, #1]
 800319e:	0018      	movs	r0, r3
 80031a0:	2301      	movs	r3, #1
 80031a2:	4083      	lsls	r3, r0
 80031a4:	4319      	orrs	r1, r3
 80031a6:	4b9c      	ldr	r3, [pc, #624]	; (8003418 <ShowSim_SevSeg+0x378>)
 80031a8:	78db      	ldrb	r3, [r3, #3]
 80031aa:	0018      	movs	r0, r3
 80031ac:	2301      	movs	r3, #1
 80031ae:	4083      	lsls	r3, r0
 80031b0:	4319      	orrs	r1, r3
									|(1<<ucaSegPins[4])|(1<<ucaSegPins[6]);
 80031b2:	4b99      	ldr	r3, [pc, #612]	; (8003418 <ShowSim_SevSeg+0x378>)
 80031b4:	791b      	ldrb	r3, [r3, #4]
 80031b6:	0018      	movs	r0, r3
 80031b8:	2301      	movs	r3, #1
 80031ba:	4083      	lsls	r3, r0
 80031bc:	4319      	orrs	r1, r3
 80031be:	4b96      	ldr	r3, [pc, #600]	; (8003418 <ShowSim_SevSeg+0x378>)
 80031c0:	799b      	ldrb	r3, [r3, #6]
 80031c2:	0018      	movs	r0, r3
 80031c4:	2301      	movs	r3, #1
 80031c6:	4083      	lsls	r3, r0
 80031c8:	430b      	orrs	r3, r1
 80031ca:	0019      	movs	r1, r3
		GPIOA->ODR|=(1<<ucaSegPins[0])|(1<<ucaSegPins[1])|(1<<ucaSegPins[3])
 80031cc:	2390      	movs	r3, #144	; 0x90
 80031ce:	05db      	lsls	r3, r3, #23
 80031d0:	430a      	orrs	r2, r1
 80031d2:	615a      	str	r2, [r3, #20]
		break;
 80031d4:	e117      	b.n	8003406 <ShowSim_SevSeg+0x366>
	}
	case '3':{
		GPIOA->ODR|=(1<<ucaSegPins[0])|(1<<ucaSegPins[1])|(1<<ucaSegPins[2])|
 80031d6:	2390      	movs	r3, #144	; 0x90
 80031d8:	05db      	lsls	r3, r3, #23
 80031da:	695a      	ldr	r2, [r3, #20]
 80031dc:	4b8e      	ldr	r3, [pc, #568]	; (8003418 <ShowSim_SevSeg+0x378>)
 80031de:	781b      	ldrb	r3, [r3, #0]
 80031e0:	0019      	movs	r1, r3
 80031e2:	2301      	movs	r3, #1
 80031e4:	408b      	lsls	r3, r1
 80031e6:	0019      	movs	r1, r3
 80031e8:	4b8b      	ldr	r3, [pc, #556]	; (8003418 <ShowSim_SevSeg+0x378>)
 80031ea:	785b      	ldrb	r3, [r3, #1]
 80031ec:	0018      	movs	r0, r3
 80031ee:	2301      	movs	r3, #1
 80031f0:	4083      	lsls	r3, r0
 80031f2:	4319      	orrs	r1, r3
 80031f4:	4b88      	ldr	r3, [pc, #544]	; (8003418 <ShowSim_SevSeg+0x378>)
 80031f6:	789b      	ldrb	r3, [r3, #2]
 80031f8:	0018      	movs	r0, r3
 80031fa:	2301      	movs	r3, #1
 80031fc:	4083      	lsls	r3, r0
 80031fe:	4319      	orrs	r1, r3
				(1<<ucaSegPins[3])|(1<<ucaSegPins[6]);
 8003200:	4b85      	ldr	r3, [pc, #532]	; (8003418 <ShowSim_SevSeg+0x378>)
 8003202:	78db      	ldrb	r3, [r3, #3]
 8003204:	0018      	movs	r0, r3
 8003206:	2301      	movs	r3, #1
 8003208:	4083      	lsls	r3, r0
		GPIOA->ODR|=(1<<ucaSegPins[0])|(1<<ucaSegPins[1])|(1<<ucaSegPins[2])|
 800320a:	4319      	orrs	r1, r3
				(1<<ucaSegPins[3])|(1<<ucaSegPins[6]);
 800320c:	4b82      	ldr	r3, [pc, #520]	; (8003418 <ShowSim_SevSeg+0x378>)
 800320e:	799b      	ldrb	r3, [r3, #6]
 8003210:	0018      	movs	r0, r3
 8003212:	2301      	movs	r3, #1
 8003214:	4083      	lsls	r3, r0
 8003216:	430b      	orrs	r3, r1
 8003218:	0019      	movs	r1, r3
		GPIOA->ODR|=(1<<ucaSegPins[0])|(1<<ucaSegPins[1])|(1<<ucaSegPins[2])|
 800321a:	2390      	movs	r3, #144	; 0x90
 800321c:	05db      	lsls	r3, r3, #23
 800321e:	430a      	orrs	r2, r1
 8003220:	615a      	str	r2, [r3, #20]
		break;
 8003222:	e0f0      	b.n	8003406 <ShowSim_SevSeg+0x366>
	}
	case '4':{
		GPIOA->ODR|=(1<<ucaSegPins[1])|(1<<ucaSegPins[2])|
 8003224:	2390      	movs	r3, #144	; 0x90
 8003226:	05db      	lsls	r3, r3, #23
 8003228:	695a      	ldr	r2, [r3, #20]
 800322a:	4b7b      	ldr	r3, [pc, #492]	; (8003418 <ShowSim_SevSeg+0x378>)
 800322c:	785b      	ldrb	r3, [r3, #1]
 800322e:	0019      	movs	r1, r3
 8003230:	2301      	movs	r3, #1
 8003232:	408b      	lsls	r3, r1
 8003234:	0019      	movs	r1, r3
 8003236:	4b78      	ldr	r3, [pc, #480]	; (8003418 <ShowSim_SevSeg+0x378>)
 8003238:	789b      	ldrb	r3, [r3, #2]
 800323a:	0018      	movs	r0, r3
 800323c:	2301      	movs	r3, #1
 800323e:	4083      	lsls	r3, r0
 8003240:	4319      	orrs	r1, r3
				(1<<ucaSegPins[5])|(1<<ucaSegPins[6]);
 8003242:	4b75      	ldr	r3, [pc, #468]	; (8003418 <ShowSim_SevSeg+0x378>)
 8003244:	795b      	ldrb	r3, [r3, #5]
 8003246:	0018      	movs	r0, r3
 8003248:	2301      	movs	r3, #1
 800324a:	4083      	lsls	r3, r0
		GPIOA->ODR|=(1<<ucaSegPins[1])|(1<<ucaSegPins[2])|
 800324c:	4319      	orrs	r1, r3
				(1<<ucaSegPins[5])|(1<<ucaSegPins[6]);
 800324e:	4b72      	ldr	r3, [pc, #456]	; (8003418 <ShowSim_SevSeg+0x378>)
 8003250:	799b      	ldrb	r3, [r3, #6]
 8003252:	0018      	movs	r0, r3
 8003254:	2301      	movs	r3, #1
 8003256:	4083      	lsls	r3, r0
 8003258:	430b      	orrs	r3, r1
 800325a:	0019      	movs	r1, r3
		GPIOA->ODR|=(1<<ucaSegPins[1])|(1<<ucaSegPins[2])|
 800325c:	2390      	movs	r3, #144	; 0x90
 800325e:	05db      	lsls	r3, r3, #23
 8003260:	430a      	orrs	r2, r1
 8003262:	615a      	str	r2, [r3, #20]
		break;
 8003264:	e0cf      	b.n	8003406 <ShowSim_SevSeg+0x366>
	}
	case '5':{
		GPIOA->ODR|=(1<<ucaSegPins[0])|(1<<ucaSegPins[2])|(1<<ucaSegPins[3])|
 8003266:	2390      	movs	r3, #144	; 0x90
 8003268:	05db      	lsls	r3, r3, #23
 800326a:	695a      	ldr	r2, [r3, #20]
 800326c:	4b6a      	ldr	r3, [pc, #424]	; (8003418 <ShowSim_SevSeg+0x378>)
 800326e:	781b      	ldrb	r3, [r3, #0]
 8003270:	0019      	movs	r1, r3
 8003272:	2301      	movs	r3, #1
 8003274:	408b      	lsls	r3, r1
 8003276:	0019      	movs	r1, r3
 8003278:	4b67      	ldr	r3, [pc, #412]	; (8003418 <ShowSim_SevSeg+0x378>)
 800327a:	789b      	ldrb	r3, [r3, #2]
 800327c:	0018      	movs	r0, r3
 800327e:	2301      	movs	r3, #1
 8003280:	4083      	lsls	r3, r0
 8003282:	4319      	orrs	r1, r3
 8003284:	4b64      	ldr	r3, [pc, #400]	; (8003418 <ShowSim_SevSeg+0x378>)
 8003286:	78db      	ldrb	r3, [r3, #3]
 8003288:	0018      	movs	r0, r3
 800328a:	2301      	movs	r3, #1
 800328c:	4083      	lsls	r3, r0
 800328e:	4319      	orrs	r1, r3
				(1<<ucaSegPins[5])|(1<<ucaSegPins[6]);
 8003290:	4b61      	ldr	r3, [pc, #388]	; (8003418 <ShowSim_SevSeg+0x378>)
 8003292:	795b      	ldrb	r3, [r3, #5]
 8003294:	0018      	movs	r0, r3
 8003296:	2301      	movs	r3, #1
 8003298:	4083      	lsls	r3, r0
		GPIOA->ODR|=(1<<ucaSegPins[0])|(1<<ucaSegPins[2])|(1<<ucaSegPins[3])|
 800329a:	4319      	orrs	r1, r3
				(1<<ucaSegPins[5])|(1<<ucaSegPins[6]);
 800329c:	4b5e      	ldr	r3, [pc, #376]	; (8003418 <ShowSim_SevSeg+0x378>)
 800329e:	799b      	ldrb	r3, [r3, #6]
 80032a0:	0018      	movs	r0, r3
 80032a2:	2301      	movs	r3, #1
 80032a4:	4083      	lsls	r3, r0
 80032a6:	430b      	orrs	r3, r1
 80032a8:	0019      	movs	r1, r3
		GPIOA->ODR|=(1<<ucaSegPins[0])|(1<<ucaSegPins[2])|(1<<ucaSegPins[3])|
 80032aa:	2390      	movs	r3, #144	; 0x90
 80032ac:	05db      	lsls	r3, r3, #23
 80032ae:	430a      	orrs	r2, r1
 80032b0:	615a      	str	r2, [r3, #20]
		break;
 80032b2:	e0a8      	b.n	8003406 <ShowSim_SevSeg+0x366>
	}
	case '6':{
		GPIOA->ODR|=(1<<ucaSegPins[0])|(1<<ucaSegPins[5])|(1<<ucaSegPins[2])|
 80032b4:	2390      	movs	r3, #144	; 0x90
 80032b6:	05db      	lsls	r3, r3, #23
 80032b8:	695a      	ldr	r2, [r3, #20]
 80032ba:	4b57      	ldr	r3, [pc, #348]	; (8003418 <ShowSim_SevSeg+0x378>)
 80032bc:	781b      	ldrb	r3, [r3, #0]
 80032be:	0019      	movs	r1, r3
 80032c0:	2301      	movs	r3, #1
 80032c2:	408b      	lsls	r3, r1
 80032c4:	0019      	movs	r1, r3
 80032c6:	4b54      	ldr	r3, [pc, #336]	; (8003418 <ShowSim_SevSeg+0x378>)
 80032c8:	795b      	ldrb	r3, [r3, #5]
 80032ca:	0018      	movs	r0, r3
 80032cc:	2301      	movs	r3, #1
 80032ce:	4083      	lsls	r3, r0
 80032d0:	4319      	orrs	r1, r3
 80032d2:	4b51      	ldr	r3, [pc, #324]	; (8003418 <ShowSim_SevSeg+0x378>)
 80032d4:	789b      	ldrb	r3, [r3, #2]
 80032d6:	0018      	movs	r0, r3
 80032d8:	2301      	movs	r3, #1
 80032da:	4083      	lsls	r3, r0
 80032dc:	4319      	orrs	r1, r3
				(1<<ucaSegPins[3])|(1<<ucaSegPins[4])|
 80032de:	4b4e      	ldr	r3, [pc, #312]	; (8003418 <ShowSim_SevSeg+0x378>)
 80032e0:	78db      	ldrb	r3, [r3, #3]
 80032e2:	0018      	movs	r0, r3
 80032e4:	2301      	movs	r3, #1
 80032e6:	4083      	lsls	r3, r0
		GPIOA->ODR|=(1<<ucaSegPins[0])|(1<<ucaSegPins[5])|(1<<ucaSegPins[2])|
 80032e8:	4319      	orrs	r1, r3
				(1<<ucaSegPins[3])|(1<<ucaSegPins[4])|
 80032ea:	4b4b      	ldr	r3, [pc, #300]	; (8003418 <ShowSim_SevSeg+0x378>)
 80032ec:	791b      	ldrb	r3, [r3, #4]
 80032ee:	0018      	movs	r0, r3
 80032f0:	2301      	movs	r3, #1
 80032f2:	4083      	lsls	r3, r0
 80032f4:	4319      	orrs	r1, r3
				(1<<ucaSegPins[6]);
 80032f6:	4b48      	ldr	r3, [pc, #288]	; (8003418 <ShowSim_SevSeg+0x378>)
 80032f8:	799b      	ldrb	r3, [r3, #6]
 80032fa:	0018      	movs	r0, r3
 80032fc:	2301      	movs	r3, #1
 80032fe:	4083      	lsls	r3, r0
				(1<<ucaSegPins[3])|(1<<ucaSegPins[4])|
 8003300:	430b      	orrs	r3, r1
 8003302:	0019      	movs	r1, r3
		GPIOA->ODR|=(1<<ucaSegPins[0])|(1<<ucaSegPins[5])|(1<<ucaSegPins[2])|
 8003304:	2390      	movs	r3, #144	; 0x90
 8003306:	05db      	lsls	r3, r3, #23
 8003308:	430a      	orrs	r2, r1
 800330a:	615a      	str	r2, [r3, #20]
		break;
 800330c:	e07b      	b.n	8003406 <ShowSim_SevSeg+0x366>
	}
	case '7':{
		GPIOA->ODR|=(1<<ucaSegPins[0])|(1<<ucaSegPins[1])|(1<<ucaSegPins[2]);
 800330e:	2390      	movs	r3, #144	; 0x90
 8003310:	05db      	lsls	r3, r3, #23
 8003312:	695a      	ldr	r2, [r3, #20]
 8003314:	4b40      	ldr	r3, [pc, #256]	; (8003418 <ShowSim_SevSeg+0x378>)
 8003316:	781b      	ldrb	r3, [r3, #0]
 8003318:	0019      	movs	r1, r3
 800331a:	2301      	movs	r3, #1
 800331c:	408b      	lsls	r3, r1
 800331e:	0019      	movs	r1, r3
 8003320:	4b3d      	ldr	r3, [pc, #244]	; (8003418 <ShowSim_SevSeg+0x378>)
 8003322:	785b      	ldrb	r3, [r3, #1]
 8003324:	0018      	movs	r0, r3
 8003326:	2301      	movs	r3, #1
 8003328:	4083      	lsls	r3, r0
 800332a:	4319      	orrs	r1, r3
 800332c:	4b3a      	ldr	r3, [pc, #232]	; (8003418 <ShowSim_SevSeg+0x378>)
 800332e:	789b      	ldrb	r3, [r3, #2]
 8003330:	0018      	movs	r0, r3
 8003332:	2301      	movs	r3, #1
 8003334:	4083      	lsls	r3, r0
 8003336:	430b      	orrs	r3, r1
 8003338:	0019      	movs	r1, r3
 800333a:	2390      	movs	r3, #144	; 0x90
 800333c:	05db      	lsls	r3, r3, #23
 800333e:	430a      	orrs	r2, r1
 8003340:	615a      	str	r2, [r3, #20]
		break;
 8003342:	e060      	b.n	8003406 <ShowSim_SevSeg+0x366>
	}
	case '8':{
		GPIOA->ODR|=(1<<ucaSegPins[0])|(1<<ucaSegPins[1])|(1<<ucaSegPins[2])|
 8003344:	2390      	movs	r3, #144	; 0x90
 8003346:	05db      	lsls	r3, r3, #23
 8003348:	695a      	ldr	r2, [r3, #20]
 800334a:	4b33      	ldr	r3, [pc, #204]	; (8003418 <ShowSim_SevSeg+0x378>)
 800334c:	781b      	ldrb	r3, [r3, #0]
 800334e:	0019      	movs	r1, r3
 8003350:	2301      	movs	r3, #1
 8003352:	408b      	lsls	r3, r1
 8003354:	0019      	movs	r1, r3
 8003356:	4b30      	ldr	r3, [pc, #192]	; (8003418 <ShowSim_SevSeg+0x378>)
 8003358:	785b      	ldrb	r3, [r3, #1]
 800335a:	0018      	movs	r0, r3
 800335c:	2301      	movs	r3, #1
 800335e:	4083      	lsls	r3, r0
 8003360:	4319      	orrs	r1, r3
 8003362:	4b2d      	ldr	r3, [pc, #180]	; (8003418 <ShowSim_SevSeg+0x378>)
 8003364:	789b      	ldrb	r3, [r3, #2]
 8003366:	0018      	movs	r0, r3
 8003368:	2301      	movs	r3, #1
 800336a:	4083      	lsls	r3, r0
 800336c:	4319      	orrs	r1, r3
				(1<<ucaSegPins[3])|(1<<ucaSegPins[4])|
 800336e:	4b2a      	ldr	r3, [pc, #168]	; (8003418 <ShowSim_SevSeg+0x378>)
 8003370:	78db      	ldrb	r3, [r3, #3]
 8003372:	0018      	movs	r0, r3
 8003374:	2301      	movs	r3, #1
 8003376:	4083      	lsls	r3, r0
		GPIOA->ODR|=(1<<ucaSegPins[0])|(1<<ucaSegPins[1])|(1<<ucaSegPins[2])|
 8003378:	4319      	orrs	r1, r3
				(1<<ucaSegPins[3])|(1<<ucaSegPins[4])|
 800337a:	4b27      	ldr	r3, [pc, #156]	; (8003418 <ShowSim_SevSeg+0x378>)
 800337c:	791b      	ldrb	r3, [r3, #4]
 800337e:	0018      	movs	r0, r3
 8003380:	2301      	movs	r3, #1
 8003382:	4083      	lsls	r3, r0
 8003384:	4319      	orrs	r1, r3
				(1<<ucaSegPins[5])|(1<<ucaSegPins[6]);
 8003386:	4b24      	ldr	r3, [pc, #144]	; (8003418 <ShowSim_SevSeg+0x378>)
 8003388:	795b      	ldrb	r3, [r3, #5]
 800338a:	0018      	movs	r0, r3
 800338c:	2301      	movs	r3, #1
 800338e:	4083      	lsls	r3, r0
				(1<<ucaSegPins[3])|(1<<ucaSegPins[4])|
 8003390:	4319      	orrs	r1, r3
				(1<<ucaSegPins[5])|(1<<ucaSegPins[6]);
 8003392:	4b21      	ldr	r3, [pc, #132]	; (8003418 <ShowSim_SevSeg+0x378>)
 8003394:	799b      	ldrb	r3, [r3, #6]
 8003396:	0018      	movs	r0, r3
 8003398:	2301      	movs	r3, #1
 800339a:	4083      	lsls	r3, r0
 800339c:	430b      	orrs	r3, r1
 800339e:	0019      	movs	r1, r3
		GPIOA->ODR|=(1<<ucaSegPins[0])|(1<<ucaSegPins[1])|(1<<ucaSegPins[2])|
 80033a0:	2390      	movs	r3, #144	; 0x90
 80033a2:	05db      	lsls	r3, r3, #23
 80033a4:	430a      	orrs	r2, r1
 80033a6:	615a      	str	r2, [r3, #20]
		break;
 80033a8:	e02d      	b.n	8003406 <ShowSim_SevSeg+0x366>
	}
	case '9':{
		GPIOA->ODR|=(1<<ucaSegPins[0])|(1<<ucaSegPins[1])|(1<<ucaSegPins[2])|
 80033aa:	2390      	movs	r3, #144	; 0x90
 80033ac:	05db      	lsls	r3, r3, #23
 80033ae:	695a      	ldr	r2, [r3, #20]
 80033b0:	4b19      	ldr	r3, [pc, #100]	; (8003418 <ShowSim_SevSeg+0x378>)
 80033b2:	781b      	ldrb	r3, [r3, #0]
 80033b4:	0019      	movs	r1, r3
 80033b6:	2301      	movs	r3, #1
 80033b8:	408b      	lsls	r3, r1
 80033ba:	0019      	movs	r1, r3
 80033bc:	4b16      	ldr	r3, [pc, #88]	; (8003418 <ShowSim_SevSeg+0x378>)
 80033be:	785b      	ldrb	r3, [r3, #1]
 80033c0:	0018      	movs	r0, r3
 80033c2:	2301      	movs	r3, #1
 80033c4:	4083      	lsls	r3, r0
 80033c6:	4319      	orrs	r1, r3
 80033c8:	4b13      	ldr	r3, [pc, #76]	; (8003418 <ShowSim_SevSeg+0x378>)
 80033ca:	789b      	ldrb	r3, [r3, #2]
 80033cc:	0018      	movs	r0, r3
 80033ce:	2301      	movs	r3, #1
 80033d0:	4083      	lsls	r3, r0
 80033d2:	4319      	orrs	r1, r3
				(1<<ucaSegPins[3])|(1<<ucaSegPins[5])
 80033d4:	4b10      	ldr	r3, [pc, #64]	; (8003418 <ShowSim_SevSeg+0x378>)
 80033d6:	78db      	ldrb	r3, [r3, #3]
 80033d8:	0018      	movs	r0, r3
 80033da:	2301      	movs	r3, #1
 80033dc:	4083      	lsls	r3, r0
		GPIOA->ODR|=(1<<ucaSegPins[0])|(1<<ucaSegPins[1])|(1<<ucaSegPins[2])|
 80033de:	4319      	orrs	r1, r3
				(1<<ucaSegPins[3])|(1<<ucaSegPins[5])
 80033e0:	4b0d      	ldr	r3, [pc, #52]	; (8003418 <ShowSim_SevSeg+0x378>)
 80033e2:	795b      	ldrb	r3, [r3, #5]
 80033e4:	0018      	movs	r0, r3
 80033e6:	2301      	movs	r3, #1
 80033e8:	4083      	lsls	r3, r0
 80033ea:	4319      	orrs	r1, r3
				|(1<<ucaSegPins[6]);
 80033ec:	4b0a      	ldr	r3, [pc, #40]	; (8003418 <ShowSim_SevSeg+0x378>)
 80033ee:	799b      	ldrb	r3, [r3, #6]
 80033f0:	0018      	movs	r0, r3
 80033f2:	2301      	movs	r3, #1
 80033f4:	4083      	lsls	r3, r0
 80033f6:	430b      	orrs	r3, r1
 80033f8:	0019      	movs	r1, r3
		GPIOA->ODR|=(1<<ucaSegPins[0])|(1<<ucaSegPins[1])|(1<<ucaSegPins[2])|
 80033fa:	2390      	movs	r3, #144	; 0x90
 80033fc:	05db      	lsls	r3, r3, #23
 80033fe:	430a      	orrs	r2, r1
 8003400:	615a      	str	r2, [r3, #20]
		break;
 8003402:	e000      	b.n	8003406 <ShowSim_SevSeg+0x366>
	}
	default:
		//assert(false);
		break;
 8003404:	46c0      	nop			; (mov r8, r8)
	}
}
 8003406:	46c0      	nop			; (mov r8, r8)
 8003408:	46bd      	mov	sp, r7
 800340a:	b002      	add	sp, #8
 800340c:	bd80      	pop	{r7, pc}
 800340e:	46c0      	nop			; (mov r8, r8)
 8003410:	20000008 	.word	0x20000008
 8003414:	08007460 	.word	0x08007460
 8003418:	20000000 	.word	0x20000000

0800341c <ClearSeg_SevSeg>:

void ClearSeg_SevSeg(uint8_t u8SegNum){
 800341c:	b580      	push	{r7, lr}
 800341e:	b082      	sub	sp, #8
 8003420:	af00      	add	r7, sp, #0
 8003422:	0002      	movs	r2, r0
 8003424:	1dfb      	adds	r3, r7, #7
 8003426:	701a      	strb	r2, [r3, #0]
	GPIOA->ODR|=(1<<ucaComPins[u8SegNum]);
 8003428:	2390      	movs	r3, #144	; 0x90
 800342a:	05db      	lsls	r3, r3, #23
 800342c:	695a      	ldr	r2, [r3, #20]
 800342e:	1dfb      	adds	r3, r7, #7
 8003430:	781b      	ldrb	r3, [r3, #0]
 8003432:	4923      	ldr	r1, [pc, #140]	; (80034c0 <ClearSeg_SevSeg+0xa4>)
 8003434:	5ccb      	ldrb	r3, [r1, r3]
 8003436:	0019      	movs	r1, r3
 8003438:	2301      	movs	r3, #1
 800343a:	408b      	lsls	r3, r1
 800343c:	0019      	movs	r1, r3
 800343e:	2390      	movs	r3, #144	; 0x90
 8003440:	05db      	lsls	r3, r3, #23
 8003442:	430a      	orrs	r2, r1
 8003444:	615a      	str	r2, [r3, #20]
	GPIOA->ODR&=~((1<<ucaSegPins[0])|(1<<ucaSegPins[1])|(1<<ucaSegPins[2])|
 8003446:	2390      	movs	r3, #144	; 0x90
 8003448:	05db      	lsls	r3, r3, #23
 800344a:	695a      	ldr	r2, [r3, #20]
 800344c:	4b1d      	ldr	r3, [pc, #116]	; (80034c4 <ClearSeg_SevSeg+0xa8>)
 800344e:	781b      	ldrb	r3, [r3, #0]
 8003450:	0019      	movs	r1, r3
 8003452:	2301      	movs	r3, #1
 8003454:	408b      	lsls	r3, r1
 8003456:	0019      	movs	r1, r3
 8003458:	4b1a      	ldr	r3, [pc, #104]	; (80034c4 <ClearSeg_SevSeg+0xa8>)
 800345a:	785b      	ldrb	r3, [r3, #1]
 800345c:	0018      	movs	r0, r3
 800345e:	2301      	movs	r3, #1
 8003460:	4083      	lsls	r3, r0
 8003462:	4319      	orrs	r1, r3
 8003464:	4b17      	ldr	r3, [pc, #92]	; (80034c4 <ClearSeg_SevSeg+0xa8>)
 8003466:	789b      	ldrb	r3, [r3, #2]
 8003468:	0018      	movs	r0, r3
 800346a:	2301      	movs	r3, #1
 800346c:	4083      	lsls	r3, r0
 800346e:	4319      	orrs	r1, r3
			(1<<ucaSegPins[3])|(1<<ucaSegPins[4])|
 8003470:	4b14      	ldr	r3, [pc, #80]	; (80034c4 <ClearSeg_SevSeg+0xa8>)
 8003472:	78db      	ldrb	r3, [r3, #3]
 8003474:	0018      	movs	r0, r3
 8003476:	2301      	movs	r3, #1
 8003478:	4083      	lsls	r3, r0
	GPIOA->ODR&=~((1<<ucaSegPins[0])|(1<<ucaSegPins[1])|(1<<ucaSegPins[2])|
 800347a:	4319      	orrs	r1, r3
			(1<<ucaSegPins[3])|(1<<ucaSegPins[4])|
 800347c:	4b11      	ldr	r3, [pc, #68]	; (80034c4 <ClearSeg_SevSeg+0xa8>)
 800347e:	791b      	ldrb	r3, [r3, #4]
 8003480:	0018      	movs	r0, r3
 8003482:	2301      	movs	r3, #1
 8003484:	4083      	lsls	r3, r0
 8003486:	4319      	orrs	r1, r3
			(1<<ucaSegPins[5])|(1<<ucaSegPins[6])|
 8003488:	4b0e      	ldr	r3, [pc, #56]	; (80034c4 <ClearSeg_SevSeg+0xa8>)
 800348a:	795b      	ldrb	r3, [r3, #5]
 800348c:	0018      	movs	r0, r3
 800348e:	2301      	movs	r3, #1
 8003490:	4083      	lsls	r3, r0
			(1<<ucaSegPins[3])|(1<<ucaSegPins[4])|
 8003492:	4319      	orrs	r1, r3
			(1<<ucaSegPins[5])|(1<<ucaSegPins[6])|
 8003494:	4b0b      	ldr	r3, [pc, #44]	; (80034c4 <ClearSeg_SevSeg+0xa8>)
 8003496:	799b      	ldrb	r3, [r3, #6]
 8003498:	0018      	movs	r0, r3
 800349a:	2301      	movs	r3, #1
 800349c:	4083      	lsls	r3, r0
 800349e:	4319      	orrs	r1, r3
			(1<<ucaSegPins[7]));
 80034a0:	4b08      	ldr	r3, [pc, #32]	; (80034c4 <ClearSeg_SevSeg+0xa8>)
 80034a2:	79db      	ldrb	r3, [r3, #7]
 80034a4:	0018      	movs	r0, r3
 80034a6:	2301      	movs	r3, #1
 80034a8:	4083      	lsls	r3, r0
			(1<<ucaSegPins[5])|(1<<ucaSegPins[6])|
 80034aa:	430b      	orrs	r3, r1
	GPIOA->ODR&=~((1<<ucaSegPins[0])|(1<<ucaSegPins[1])|(1<<ucaSegPins[2])|
 80034ac:	43db      	mvns	r3, r3
 80034ae:	0019      	movs	r1, r3
 80034b0:	2390      	movs	r3, #144	; 0x90
 80034b2:	05db      	lsls	r3, r3, #23
 80034b4:	400a      	ands	r2, r1
 80034b6:	615a      	str	r2, [r3, #20]
}
 80034b8:	46c0      	nop			; (mov r8, r8)
 80034ba:	46bd      	mov	sp, r7
 80034bc:	b002      	add	sp, #8
 80034be:	bd80      	pop	{r7, pc}
 80034c0:	20000008 	.word	0x20000008
 80034c4:	20000000 	.word	0x20000000

080034c8 <ShowDgt_SevSeg>:

void ShowDgt_SevSeg(float fDigit, uint16_t delay, uint16_t count){
 80034c8:	b5b0      	push	{r4, r5, r7, lr}
 80034ca:	b088      	sub	sp, #32
 80034cc:	af00      	add	r7, sp, #0
 80034ce:	6078      	str	r0, [r7, #4]
 80034d0:	0008      	movs	r0, r1
 80034d2:	0011      	movs	r1, r2
 80034d4:	1cbb      	adds	r3, r7, #2
 80034d6:	1c02      	adds	r2, r0, #0
 80034d8:	801a      	strh	r2, [r3, #0]
 80034da:	003b      	movs	r3, r7
 80034dc:	1c0a      	adds	r2, r1, #0
 80034de:	801a      	strh	r2, [r3, #0]
	float iPow=10,fDevBuf,
 80034e0:	4b41      	ldr	r3, [pc, #260]	; (80035e8 <ShowDgt_SevSeg+0x120>)
 80034e2:	61fb      	str	r3, [r7, #28]
			fDigBuf=fDigit;
 80034e4:	687b      	ldr	r3, [r7, #4]
 80034e6:	617b      	str	r3, [r7, #20]
	int16_t cDigit;

	while(iPow<fabs(fDigit))
 80034e8:	e005      	b.n	80034f6 <ShowDgt_SevSeg+0x2e>
		iPow*=10;
 80034ea:	493f      	ldr	r1, [pc, #252]	; (80035e8 <ShowDgt_SevSeg+0x120>)
 80034ec:	69f8      	ldr	r0, [r7, #28]
 80034ee:	f7fd fba7 	bl	8000c40 <__aeabi_fmul>
 80034f2:	1c03      	adds	r3, r0, #0
 80034f4:	61fb      	str	r3, [r7, #28]
	while(iPow<fabs(fDigit))
 80034f6:	687b      	ldr	r3, [r7, #4]
 80034f8:	005b      	lsls	r3, r3, #1
 80034fa:	085b      	lsrs	r3, r3, #1
 80034fc:	1c19      	adds	r1, r3, #0
 80034fe:	69f8      	ldr	r0, [r7, #28]
 8003500:	f7fc ffda 	bl	80004b8 <__aeabi_fcmplt>
 8003504:	1e03      	subs	r3, r0, #0
 8003506:	d1f0      	bne.n	80034ea <ShowDgt_SevSeg+0x22>
	fDevBuf=iPow;
 8003508:	69fb      	ldr	r3, [r7, #28]
 800350a:	613b      	str	r3, [r7, #16]
	uint8_t i;
	while(count--){
 800350c:	e060      	b.n	80035d0 <ShowDgt_SevSeg+0x108>
		fDigit=fDigBuf;
 800350e:	697b      	ldr	r3, [r7, #20]
 8003510:	607b      	str	r3, [r7, #4]
		iPow=fDevBuf;
 8003512:	693b      	ldr	r3, [r7, #16]
 8003514:	61fb      	str	r3, [r7, #28]
		for (i = 0; i < SEG_CNT; ++i) {
 8003516:	231b      	movs	r3, #27
 8003518:	18fb      	adds	r3, r7, r3
 800351a:	2200      	movs	r2, #0
 800351c:	701a      	strb	r2, [r3, #0]
 800351e:	e052      	b.n	80035c6 <ShowDgt_SevSeg+0xfe>
			iPow/=10;
 8003520:	4931      	ldr	r1, [pc, #196]	; (80035e8 <ShowDgt_SevSeg+0x120>)
 8003522:	69f8      	ldr	r0, [r7, #28]
 8003524:	f7fd f9b4 	bl	8000890 <__aeabi_fdiv>
 8003528:	1c03      	adds	r3, r0, #0
 800352a:	61fb      	str	r3, [r7, #28]
			if(iPow==1.0f)
 800352c:	21fe      	movs	r1, #254	; 0xfe
 800352e:	0589      	lsls	r1, r1, #22
 8003530:	69f8      	ldr	r0, [r7, #28]
 8003532:	f7fc ffbb 	bl	80004ac <__aeabi_fcmpeq>
 8003536:	1e03      	subs	r3, r0, #0
 8003538:	d006      	beq.n	8003548 <ShowDgt_SevSeg+0x80>
				ShowSim_SevSeg('.', i);
 800353a:	231b      	movs	r3, #27
 800353c:	18fb      	adds	r3, r7, r3
 800353e:	781b      	ldrb	r3, [r3, #0]
 8003540:	0019      	movs	r1, r3
 8003542:	202e      	movs	r0, #46	; 0x2e
 8003544:	f7ff fdac 	bl	80030a0 <ShowSim_SevSeg>



			cDigit=fDigit/iPow;
 8003548:	69f9      	ldr	r1, [r7, #28]
 800354a:	6878      	ldr	r0, [r7, #4]
 800354c:	f7fd f9a0 	bl	8000890 <__aeabi_fdiv>
 8003550:	1c03      	adds	r3, r0, #0
 8003552:	240e      	movs	r4, #14
 8003554:	0025      	movs	r5, r4
 8003556:	193c      	adds	r4, r7, r4
 8003558:	1c18      	adds	r0, r3, #0
 800355a:	f7fd fe67 	bl	800122c <__aeabi_f2iz>
 800355e:	0003      	movs	r3, r0
 8003560:	8023      	strh	r3, [r4, #0]
			fDigit-=cDigit*iPow;
 8003562:	002c      	movs	r4, r5
 8003564:	193b      	adds	r3, r7, r4
 8003566:	2200      	movs	r2, #0
 8003568:	5e9b      	ldrsh	r3, [r3, r2]
 800356a:	0018      	movs	r0, r3
 800356c:	f7fd fe7e 	bl	800126c <__aeabi_i2f>
 8003570:	1c03      	adds	r3, r0, #0
 8003572:	69f9      	ldr	r1, [r7, #28]
 8003574:	1c18      	adds	r0, r3, #0
 8003576:	f7fd fb63 	bl	8000c40 <__aeabi_fmul>
 800357a:	1c03      	adds	r3, r0, #0
 800357c:	1c19      	adds	r1, r3, #0
 800357e:	6878      	ldr	r0, [r7, #4]
 8003580:	f7fd fc90 	bl	8000ea4 <__aeabi_fsub>
 8003584:	1c03      	adds	r3, r0, #0
 8003586:	607b      	str	r3, [r7, #4]
			//	assert(!(0<=cDigit&&cDigit<=9));

			ShowSim_SevSeg(abs(cDigit)+'0', i);
 8003588:	193b      	adds	r3, r7, r4
 800358a:	2200      	movs	r2, #0
 800358c:	5e9b      	ldrsh	r3, [r3, r2]
 800358e:	17da      	asrs	r2, r3, #31
 8003590:	189b      	adds	r3, r3, r2
 8003592:	4053      	eors	r3, r2
 8003594:	b2db      	uxtb	r3, r3
 8003596:	3330      	adds	r3, #48	; 0x30
 8003598:	b2da      	uxtb	r2, r3
 800359a:	241b      	movs	r4, #27
 800359c:	193b      	adds	r3, r7, r4
 800359e:	781b      	ldrb	r3, [r3, #0]
 80035a0:	0019      	movs	r1, r3
 80035a2:	0010      	movs	r0, r2
 80035a4:	f7ff fd7c 	bl	80030a0 <ShowSim_SevSeg>
			Sleep_ms(delay);
 80035a8:	1cbb      	adds	r3, r7, #2
 80035aa:	881b      	ldrh	r3, [r3, #0]
 80035ac:	0018      	movs	r0, r3
 80035ae:	f000 f81d 	bl	80035ec <Sleep_ms>
			ClearSeg_SevSeg(i);
 80035b2:	193b      	adds	r3, r7, r4
 80035b4:	781b      	ldrb	r3, [r3, #0]
 80035b6:	0018      	movs	r0, r3
 80035b8:	f7ff ff30 	bl	800341c <ClearSeg_SevSeg>
		for (i = 0; i < SEG_CNT; ++i) {
 80035bc:	193b      	adds	r3, r7, r4
 80035be:	193a      	adds	r2, r7, r4
 80035c0:	7812      	ldrb	r2, [r2, #0]
 80035c2:	3201      	adds	r2, #1
 80035c4:	701a      	strb	r2, [r3, #0]
 80035c6:	231b      	movs	r3, #27
 80035c8:	18fb      	adds	r3, r7, r3
 80035ca:	781b      	ldrb	r3, [r3, #0]
 80035cc:	2b03      	cmp	r3, #3
 80035ce:	d9a7      	bls.n	8003520 <ShowDgt_SevSeg+0x58>
	while(count--){
 80035d0:	003b      	movs	r3, r7
 80035d2:	881b      	ldrh	r3, [r3, #0]
 80035d4:	003a      	movs	r2, r7
 80035d6:	1e59      	subs	r1, r3, #1
 80035d8:	8011      	strh	r1, [r2, #0]
 80035da:	2b00      	cmp	r3, #0
 80035dc:	d197      	bne.n	800350e <ShowDgt_SevSeg+0x46>
		}
	}
}
 80035de:	46c0      	nop			; (mov r8, r8)
 80035e0:	46bd      	mov	sp, r7
 80035e2:	b008      	add	sp, #32
 80035e4:	bdb0      	pop	{r4, r5, r7, pc}
 80035e6:	46c0      	nop			; (mov r8, r8)
 80035e8:	41200000 	.word	0x41200000

080035ec <Sleep_ms>:
	TIM->PSC=8000;
	TIM->CR1|=TIM_CR1_ARPE|TIM_CR1_DIR;
	STIM=TIM;
}

void Sleep_ms(uint16_t ms){
 80035ec:	b580      	push	{r7, lr}
 80035ee:	b084      	sub	sp, #16
 80035f0:	af00      	add	r7, sp, #0
 80035f2:	0002      	movs	r2, r0
 80035f4:	1dbb      	adds	r3, r7, #6
 80035f6:	801a      	strh	r2, [r3, #0]

	for (int i = 0; i < ms*800; ++i) {
 80035f8:	2300      	movs	r3, #0
 80035fa:	60fb      	str	r3, [r7, #12]
 80035fc:	e002      	b.n	8003604 <Sleep_ms+0x18>
 80035fe:	68fb      	ldr	r3, [r7, #12]
 8003600:	3301      	adds	r3, #1
 8003602:	60fb      	str	r3, [r7, #12]
 8003604:	1dbb      	adds	r3, r7, #6
 8003606:	881a      	ldrh	r2, [r3, #0]
 8003608:	0013      	movs	r3, r2
 800360a:	009b      	lsls	r3, r3, #2
 800360c:	189b      	adds	r3, r3, r2
 800360e:	009a      	lsls	r2, r3, #2
 8003610:	189b      	adds	r3, r3, r2
 8003612:	015b      	lsls	r3, r3, #5
 8003614:	001a      	movs	r2, r3
 8003616:	68fb      	ldr	r3, [r7, #12]
 8003618:	4293      	cmp	r3, r2
 800361a:	dbf0      	blt.n	80035fe <Sleep_ms+0x12>
//	STIM->CR1|=TIM_CR1_CEN;
//	while(!STIM->SR&TIM_SR_UIF);
////	__WFE();
//	STIM->SR|=TIM_SR_UIF;
//	STIM->CR1&=~(TIM_CR1_CEN);
}
 800361c:	46c0      	nop			; (mov r8, r8)
 800361e:	46bd      	mov	sp, r7
 8003620:	b004      	add	sp, #16
 8003622:	bd80      	pop	{r7, pc}

08003624 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8003624:	b590      	push	{r4, r7, lr}
 8003626:	b087      	sub	sp, #28
 8003628:	af00      	add	r7, sp, #0
  

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 800362a:	f000 f9cf 	bl	80039cc <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 800362e:	f000 f83f 	bl	80036b0 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8003632:	f000 f8c5 	bl	80037c0 <MX_GPIO_Init>
  MX_USART1_UART_Init();
 8003636:	f000 f893 	bl	8003760 <MX_USART1_UART_Init>
  /* USER CODE BEGIN 2 */
  Init_SevSeg();
 800363a:	f7ff fc6f 	bl	8002f1c <Init_SevSeg>
  unsigned char text[20];
  float value;
  while (1)
  {
    /* USER CODE END WHILE */
	  	 value= 25.0f+((rand()%10)-5)/100.0f;
 800363e:	f002 f9fb 	bl	8005a38 <rand>
 8003642:	0003      	movs	r3, r0
 8003644:	210a      	movs	r1, #10
 8003646:	0018      	movs	r0, r3
 8003648:	f7fc fee0 	bl	800040c <__aeabi_idivmod>
 800364c:	000b      	movs	r3, r1
 800364e:	3b05      	subs	r3, #5
 8003650:	0018      	movs	r0, r3
 8003652:	f7fd fe0b 	bl	800126c <__aeabi_i2f>
 8003656:	1c03      	adds	r3, r0, #0
 8003658:	4911      	ldr	r1, [pc, #68]	; (80036a0 <main+0x7c>)
 800365a:	1c18      	adds	r0, r3, #0
 800365c:	f7fd f918 	bl	8000890 <__aeabi_fdiv>
 8003660:	1c03      	adds	r3, r0, #0
 8003662:	4910      	ldr	r1, [pc, #64]	; (80036a4 <main+0x80>)
 8003664:	1c18      	adds	r0, r3, #0
 8003666:	f7fc ff79 	bl	800055c <__aeabi_fadd>
 800366a:	1c03      	adds	r3, r0, #0
 800366c:	617b      	str	r3, [r7, #20]
	  	 sprintf((char *)text,"%f\n\r",value);
 800366e:	6978      	ldr	r0, [r7, #20]
 8003670:	f7ff fbe4 	bl	8002e3c <__aeabi_f2d>
 8003674:	0003      	movs	r3, r0
 8003676:	000c      	movs	r4, r1
 8003678:	490b      	ldr	r1, [pc, #44]	; (80036a8 <main+0x84>)
 800367a:	0038      	movs	r0, r7
 800367c:	001a      	movs	r2, r3
 800367e:	0023      	movs	r3, r4
 8003680:	f002 fa0c 	bl	8005a9c <siprintf>
	  	 HAL_UART_Transmit(&huart1,text, 20, 100);
 8003684:	0039      	movs	r1, r7
 8003686:	4809      	ldr	r0, [pc, #36]	; (80036ac <main+0x88>)
 8003688:	2364      	movs	r3, #100	; 0x64
 800368a:	2214      	movs	r2, #20
 800368c:	f001 f9b6 	bl	80049fc <HAL_UART_Transmit>
	  	 ShowDgt_SevSeg(value, 1,100);
 8003690:	697b      	ldr	r3, [r7, #20]
 8003692:	2264      	movs	r2, #100	; 0x64
 8003694:	2101      	movs	r1, #1
 8003696:	1c18      	adds	r0, r3, #0
 8003698:	f7ff ff16 	bl	80034c8 <ShowDgt_SevSeg>
	  	 value= 25.0f+((rand()%10)-5)/100.0f;
 800369c:	e7cf      	b.n	800363e <main+0x1a>
 800369e:	46c0      	nop			; (mov r8, r8)
 80036a0:	42c80000 	.word	0x42c80000
 80036a4:	41c80000 	.word	0x41c80000
 80036a8:	080072f8 	.word	0x080072f8
 80036ac:	20000210 	.word	0x20000210

080036b0 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80036b0:	b590      	push	{r4, r7, lr}
 80036b2:	b095      	sub	sp, #84	; 0x54
 80036b4:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80036b6:	2420      	movs	r4, #32
 80036b8:	193b      	adds	r3, r7, r4
 80036ba:	0018      	movs	r0, r3
 80036bc:	2330      	movs	r3, #48	; 0x30
 80036be:	001a      	movs	r2, r3
 80036c0:	2100      	movs	r1, #0
 80036c2:	f001 fd53 	bl	800516c <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80036c6:	2310      	movs	r3, #16
 80036c8:	18fb      	adds	r3, r7, r3
 80036ca:	0018      	movs	r0, r3
 80036cc:	2310      	movs	r3, #16
 80036ce:	001a      	movs	r2, r3
 80036d0:	2100      	movs	r1, #0
 80036d2:	f001 fd4b 	bl	800516c <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 80036d6:	003b      	movs	r3, r7
 80036d8:	0018      	movs	r0, r3
 80036da:	2310      	movs	r3, #16
 80036dc:	001a      	movs	r2, r3
 80036de:	2100      	movs	r1, #0
 80036e0:	f001 fd44 	bl	800516c <memset>

  /** Initializes the CPU, AHB and APB busses clocks 
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 80036e4:	0021      	movs	r1, r4
 80036e6:	187b      	adds	r3, r7, r1
 80036e8:	2202      	movs	r2, #2
 80036ea:	601a      	str	r2, [r3, #0]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80036ec:	187b      	adds	r3, r7, r1
 80036ee:	2201      	movs	r2, #1
 80036f0:	60da      	str	r2, [r3, #12]
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 80036f2:	187b      	adds	r3, r7, r1
 80036f4:	2210      	movs	r2, #16
 80036f6:	611a      	str	r2, [r3, #16]
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 80036f8:	187b      	adds	r3, r7, r1
 80036fa:	2200      	movs	r2, #0
 80036fc:	621a      	str	r2, [r3, #32]
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80036fe:	187b      	adds	r3, r7, r1
 8003700:	0018      	movs	r0, r3
 8003702:	f000 fbeb 	bl	8003edc <HAL_RCC_OscConfig>
 8003706:	1e03      	subs	r3, r0, #0
 8003708:	d001      	beq.n	800370e <SystemClock_Config+0x5e>
  {
    Error_Handler();
 800370a:	f000 f871 	bl	80037f0 <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB busses clocks 
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 800370e:	2110      	movs	r1, #16
 8003710:	187b      	adds	r3, r7, r1
 8003712:	2207      	movs	r2, #7
 8003714:	601a      	str	r2, [r3, #0]
                              |RCC_CLOCKTYPE_PCLK1;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 8003716:	187b      	adds	r3, r7, r1
 8003718:	2200      	movs	r2, #0
 800371a:	605a      	str	r2, [r3, #4]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800371c:	187b      	adds	r3, r7, r1
 800371e:	2200      	movs	r2, #0
 8003720:	609a      	str	r2, [r3, #8]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8003722:	187b      	adds	r3, r7, r1
 8003724:	2200      	movs	r2, #0
 8003726:	60da      	str	r2, [r3, #12]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 8003728:	187b      	adds	r3, r7, r1
 800372a:	2100      	movs	r1, #0
 800372c:	0018      	movs	r0, r3
 800372e:	f000 fef1 	bl	8004514 <HAL_RCC_ClockConfig>
 8003732:	1e03      	subs	r3, r0, #0
 8003734:	d001      	beq.n	800373a <SystemClock_Config+0x8a>
  {
    Error_Handler();
 8003736:	f000 f85b 	bl	80037f0 <Error_Handler>
  }
  PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1;
 800373a:	003b      	movs	r3, r7
 800373c:	2201      	movs	r2, #1
 800373e:	601a      	str	r2, [r3, #0]
  PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
 8003740:	003b      	movs	r3, r7
 8003742:	2200      	movs	r2, #0
 8003744:	609a      	str	r2, [r3, #8]
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8003746:	003b      	movs	r3, r7
 8003748:	0018      	movs	r0, r3
 800374a:	f001 f835 	bl	80047b8 <HAL_RCCEx_PeriphCLKConfig>
 800374e:	1e03      	subs	r3, r0, #0
 8003750:	d001      	beq.n	8003756 <SystemClock_Config+0xa6>
  {
    Error_Handler();
 8003752:	f000 f84d 	bl	80037f0 <Error_Handler>
  }
}
 8003756:	46c0      	nop			; (mov r8, r8)
 8003758:	46bd      	mov	sp, r7
 800375a:	b015      	add	sp, #84	; 0x54
 800375c:	bd90      	pop	{r4, r7, pc}
	...

08003760 <MX_USART1_UART_Init>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 8003760:	b580      	push	{r7, lr}
 8003762:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 8003764:	4b14      	ldr	r3, [pc, #80]	; (80037b8 <MX_USART1_UART_Init+0x58>)
 8003766:	4a15      	ldr	r2, [pc, #84]	; (80037bc <MX_USART1_UART_Init+0x5c>)
 8003768:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 115200;
 800376a:	4b13      	ldr	r3, [pc, #76]	; (80037b8 <MX_USART1_UART_Init+0x58>)
 800376c:	22e1      	movs	r2, #225	; 0xe1
 800376e:	0252      	lsls	r2, r2, #9
 8003770:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 8003772:	4b11      	ldr	r3, [pc, #68]	; (80037b8 <MX_USART1_UART_Init+0x58>)
 8003774:	2200      	movs	r2, #0
 8003776:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 8003778:	4b0f      	ldr	r3, [pc, #60]	; (80037b8 <MX_USART1_UART_Init+0x58>)
 800377a:	2200      	movs	r2, #0
 800377c:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 800377e:	4b0e      	ldr	r3, [pc, #56]	; (80037b8 <MX_USART1_UART_Init+0x58>)
 8003780:	2200      	movs	r2, #0
 8003782:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 8003784:	4b0c      	ldr	r3, [pc, #48]	; (80037b8 <MX_USART1_UART_Init+0x58>)
 8003786:	220c      	movs	r2, #12
 8003788:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800378a:	4b0b      	ldr	r3, [pc, #44]	; (80037b8 <MX_USART1_UART_Init+0x58>)
 800378c:	2200      	movs	r2, #0
 800378e:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8003790:	4b09      	ldr	r3, [pc, #36]	; (80037b8 <MX_USART1_UART_Init+0x58>)
 8003792:	2200      	movs	r2, #0
 8003794:	61da      	str	r2, [r3, #28]
  huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8003796:	4b08      	ldr	r3, [pc, #32]	; (80037b8 <MX_USART1_UART_Init+0x58>)
 8003798:	2200      	movs	r2, #0
 800379a:	621a      	str	r2, [r3, #32]
  huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 800379c:	4b06      	ldr	r3, [pc, #24]	; (80037b8 <MX_USART1_UART_Init+0x58>)
 800379e:	2200      	movs	r2, #0
 80037a0:	625a      	str	r2, [r3, #36]	; 0x24
  if (HAL_UART_Init(&huart1) != HAL_OK)
 80037a2:	4b05      	ldr	r3, [pc, #20]	; (80037b8 <MX_USART1_UART_Init+0x58>)
 80037a4:	0018      	movs	r0, r3
 80037a6:	f001 f8d5 	bl	8004954 <HAL_UART_Init>
 80037aa:	1e03      	subs	r3, r0, #0
 80037ac:	d001      	beq.n	80037b2 <MX_USART1_UART_Init+0x52>
  {
    Error_Handler();
 80037ae:	f000 f81f 	bl	80037f0 <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 80037b2:	46c0      	nop			; (mov r8, r8)
 80037b4:	46bd      	mov	sp, r7
 80037b6:	bd80      	pop	{r7, pc}
 80037b8:	20000210 	.word	0x20000210
 80037bc:	40013800 	.word	0x40013800

080037c0 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 80037c0:	b580      	push	{r7, lr}
 80037c2:	b082      	sub	sp, #8
 80037c4:	af00      	add	r7, sp, #0

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80037c6:	4b09      	ldr	r3, [pc, #36]	; (80037ec <MX_GPIO_Init+0x2c>)
 80037c8:	695a      	ldr	r2, [r3, #20]
 80037ca:	4b08      	ldr	r3, [pc, #32]	; (80037ec <MX_GPIO_Init+0x2c>)
 80037cc:	2180      	movs	r1, #128	; 0x80
 80037ce:	02c9      	lsls	r1, r1, #11
 80037d0:	430a      	orrs	r2, r1
 80037d2:	615a      	str	r2, [r3, #20]
 80037d4:	4b05      	ldr	r3, [pc, #20]	; (80037ec <MX_GPIO_Init+0x2c>)
 80037d6:	695a      	ldr	r2, [r3, #20]
 80037d8:	2380      	movs	r3, #128	; 0x80
 80037da:	02db      	lsls	r3, r3, #11
 80037dc:	4013      	ands	r3, r2
 80037de:	607b      	str	r3, [r7, #4]
 80037e0:	687b      	ldr	r3, [r7, #4]

}
 80037e2:	46c0      	nop			; (mov r8, r8)
 80037e4:	46bd      	mov	sp, r7
 80037e6:	b002      	add	sp, #8
 80037e8:	bd80      	pop	{r7, pc}
 80037ea:	46c0      	nop			; (mov r8, r8)
 80037ec:	40021000 	.word	0x40021000

080037f0 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80037f0:	b580      	push	{r7, lr}
 80037f2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 80037f4:	46c0      	nop			; (mov r8, r8)
 80037f6:	46bd      	mov	sp, r7
 80037f8:	bd80      	pop	{r7, pc}
	...

080037fc <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80037fc:	b580      	push	{r7, lr}
 80037fe:	b082      	sub	sp, #8
 8003800:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8003802:	4b0f      	ldr	r3, [pc, #60]	; (8003840 <HAL_MspInit+0x44>)
 8003804:	699a      	ldr	r2, [r3, #24]
 8003806:	4b0e      	ldr	r3, [pc, #56]	; (8003840 <HAL_MspInit+0x44>)
 8003808:	2101      	movs	r1, #1
 800380a:	430a      	orrs	r2, r1
 800380c:	619a      	str	r2, [r3, #24]
 800380e:	4b0c      	ldr	r3, [pc, #48]	; (8003840 <HAL_MspInit+0x44>)
 8003810:	699b      	ldr	r3, [r3, #24]
 8003812:	2201      	movs	r2, #1
 8003814:	4013      	ands	r3, r2
 8003816:	607b      	str	r3, [r7, #4]
 8003818:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 800381a:	4b09      	ldr	r3, [pc, #36]	; (8003840 <HAL_MspInit+0x44>)
 800381c:	69da      	ldr	r2, [r3, #28]
 800381e:	4b08      	ldr	r3, [pc, #32]	; (8003840 <HAL_MspInit+0x44>)
 8003820:	2180      	movs	r1, #128	; 0x80
 8003822:	0549      	lsls	r1, r1, #21
 8003824:	430a      	orrs	r2, r1
 8003826:	61da      	str	r2, [r3, #28]
 8003828:	4b05      	ldr	r3, [pc, #20]	; (8003840 <HAL_MspInit+0x44>)
 800382a:	69da      	ldr	r2, [r3, #28]
 800382c:	2380      	movs	r3, #128	; 0x80
 800382e:	055b      	lsls	r3, r3, #21
 8003830:	4013      	ands	r3, r2
 8003832:	603b      	str	r3, [r7, #0]
 8003834:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8003836:	46c0      	nop			; (mov r8, r8)
 8003838:	46bd      	mov	sp, r7
 800383a:	b002      	add	sp, #8
 800383c:	bd80      	pop	{r7, pc}
 800383e:	46c0      	nop			; (mov r8, r8)
 8003840:	40021000 	.word	0x40021000

08003844 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8003844:	b580      	push	{r7, lr}
 8003846:	b08a      	sub	sp, #40	; 0x28
 8003848:	af00      	add	r7, sp, #0
 800384a:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800384c:	2314      	movs	r3, #20
 800384e:	18fb      	adds	r3, r7, r3
 8003850:	0018      	movs	r0, r3
 8003852:	2314      	movs	r3, #20
 8003854:	001a      	movs	r2, r3
 8003856:	2100      	movs	r1, #0
 8003858:	f001 fc88 	bl	800516c <memset>
  if(huart->Instance==USART1)
 800385c:	687b      	ldr	r3, [r7, #4]
 800385e:	681b      	ldr	r3, [r3, #0]
 8003860:	4a1c      	ldr	r2, [pc, #112]	; (80038d4 <HAL_UART_MspInit+0x90>)
 8003862:	4293      	cmp	r3, r2
 8003864:	d131      	bne.n	80038ca <HAL_UART_MspInit+0x86>
  {
  /* USER CODE BEGIN USART1_MspInit 0 */

  /* USER CODE END USART1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 8003866:	4b1c      	ldr	r3, [pc, #112]	; (80038d8 <HAL_UART_MspInit+0x94>)
 8003868:	699a      	ldr	r2, [r3, #24]
 800386a:	4b1b      	ldr	r3, [pc, #108]	; (80038d8 <HAL_UART_MspInit+0x94>)
 800386c:	2180      	movs	r1, #128	; 0x80
 800386e:	01c9      	lsls	r1, r1, #7
 8003870:	430a      	orrs	r2, r1
 8003872:	619a      	str	r2, [r3, #24]
 8003874:	4b18      	ldr	r3, [pc, #96]	; (80038d8 <HAL_UART_MspInit+0x94>)
 8003876:	699a      	ldr	r2, [r3, #24]
 8003878:	2380      	movs	r3, #128	; 0x80
 800387a:	01db      	lsls	r3, r3, #7
 800387c:	4013      	ands	r3, r2
 800387e:	613b      	str	r3, [r7, #16]
 8003880:	693b      	ldr	r3, [r7, #16]
  
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8003882:	4b15      	ldr	r3, [pc, #84]	; (80038d8 <HAL_UART_MspInit+0x94>)
 8003884:	695a      	ldr	r2, [r3, #20]
 8003886:	4b14      	ldr	r3, [pc, #80]	; (80038d8 <HAL_UART_MspInit+0x94>)
 8003888:	2180      	movs	r1, #128	; 0x80
 800388a:	02c9      	lsls	r1, r1, #11
 800388c:	430a      	orrs	r2, r1
 800388e:	615a      	str	r2, [r3, #20]
 8003890:	4b11      	ldr	r3, [pc, #68]	; (80038d8 <HAL_UART_MspInit+0x94>)
 8003892:	695a      	ldr	r2, [r3, #20]
 8003894:	2380      	movs	r3, #128	; 0x80
 8003896:	02db      	lsls	r3, r3, #11
 8003898:	4013      	ands	r3, r2
 800389a:	60fb      	str	r3, [r7, #12]
 800389c:	68fb      	ldr	r3, [r7, #12]
    /**USART1 GPIO Configuration    
    PB6     ------> USART1_TX
    PB7     ------> USART1_RX 
    */
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 800389e:	2114      	movs	r1, #20
 80038a0:	187b      	adds	r3, r7, r1
 80038a2:	22c0      	movs	r2, #192	; 0xc0
 80038a4:	601a      	str	r2, [r3, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80038a6:	187b      	adds	r3, r7, r1
 80038a8:	2202      	movs	r2, #2
 80038aa:	605a      	str	r2, [r3, #4]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80038ac:	187b      	adds	r3, r7, r1
 80038ae:	2200      	movs	r2, #0
 80038b0:	609a      	str	r2, [r3, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80038b2:	187b      	adds	r3, r7, r1
 80038b4:	2203      	movs	r2, #3
 80038b6:	60da      	str	r2, [r3, #12]
    GPIO_InitStruct.Alternate = GPIO_AF0_USART1;
 80038b8:	187b      	adds	r3, r7, r1
 80038ba:	2200      	movs	r2, #0
 80038bc:	611a      	str	r2, [r3, #16]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80038be:	187b      	adds	r3, r7, r1
 80038c0:	4a06      	ldr	r2, [pc, #24]	; (80038dc <HAL_UART_MspInit+0x98>)
 80038c2:	0019      	movs	r1, r3
 80038c4:	0010      	movs	r0, r2
 80038c6:	f000 f999 	bl	8003bfc <HAL_GPIO_Init>
  /* USER CODE BEGIN USART1_MspInit 1 */

  /* USER CODE END USART1_MspInit 1 */
  }

}
 80038ca:	46c0      	nop			; (mov r8, r8)
 80038cc:	46bd      	mov	sp, r7
 80038ce:	b00a      	add	sp, #40	; 0x28
 80038d0:	bd80      	pop	{r7, pc}
 80038d2:	46c0      	nop			; (mov r8, r8)
 80038d4:	40013800 	.word	0x40013800
 80038d8:	40021000 	.word	0x40021000
 80038dc:	48000400 	.word	0x48000400

080038e0 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 80038e0:	b580      	push	{r7, lr}
 80038e2:	af00      	add	r7, sp, #0

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 80038e4:	46c0      	nop			; (mov r8, r8)
 80038e6:	46bd      	mov	sp, r7
 80038e8:	bd80      	pop	{r7, pc}

080038ea <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 80038ea:	b580      	push	{r7, lr}
 80038ec:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80038ee:	e7fe      	b.n	80038ee <HardFault_Handler+0x4>

080038f0 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 80038f0:	b580      	push	{r7, lr}
 80038f2:	af00      	add	r7, sp, #0

  /* USER CODE END SVC_IRQn 0 */
  /* USER CODE BEGIN SVC_IRQn 1 */

  /* USER CODE END SVC_IRQn 1 */
}
 80038f4:	46c0      	nop			; (mov r8, r8)
 80038f6:	46bd      	mov	sp, r7
 80038f8:	bd80      	pop	{r7, pc}

080038fa <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 80038fa:	b580      	push	{r7, lr}
 80038fc:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 80038fe:	46c0      	nop			; (mov r8, r8)
 8003900:	46bd      	mov	sp, r7
 8003902:	bd80      	pop	{r7, pc}

08003904 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8003904:	b580      	push	{r7, lr}
 8003906:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8003908:	f000 f8a8 	bl	8003a5c <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 800390c:	46c0      	nop			; (mov r8, r8)
 800390e:	46bd      	mov	sp, r7
 8003910:	bd80      	pop	{r7, pc}
	...

08003914 <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
caddr_t _sbrk(int incr)
{
 8003914:	b580      	push	{r7, lr}
 8003916:	b084      	sub	sp, #16
 8003918:	af00      	add	r7, sp, #0
 800391a:	6078      	str	r0, [r7, #4]
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 800391c:	4b11      	ldr	r3, [pc, #68]	; (8003964 <_sbrk+0x50>)
 800391e:	681b      	ldr	r3, [r3, #0]
 8003920:	2b00      	cmp	r3, #0
 8003922:	d102      	bne.n	800392a <_sbrk+0x16>
		heap_end = &end;
 8003924:	4b0f      	ldr	r3, [pc, #60]	; (8003964 <_sbrk+0x50>)
 8003926:	4a10      	ldr	r2, [pc, #64]	; (8003968 <_sbrk+0x54>)
 8003928:	601a      	str	r2, [r3, #0]

	prev_heap_end = heap_end;
 800392a:	4b0e      	ldr	r3, [pc, #56]	; (8003964 <_sbrk+0x50>)
 800392c:	681b      	ldr	r3, [r3, #0]
 800392e:	60fb      	str	r3, [r7, #12]
	if (heap_end + incr > stack_ptr)
 8003930:	4b0c      	ldr	r3, [pc, #48]	; (8003964 <_sbrk+0x50>)
 8003932:	681a      	ldr	r2, [r3, #0]
 8003934:	687b      	ldr	r3, [r7, #4]
 8003936:	18d3      	adds	r3, r2, r3
 8003938:	466a      	mov	r2, sp
 800393a:	4293      	cmp	r3, r2
 800393c:	d907      	bls.n	800394e <_sbrk+0x3a>
	{
		errno = ENOMEM;
 800393e:	f001 fbeb 	bl	8005118 <__errno>
 8003942:	0003      	movs	r3, r0
 8003944:	220c      	movs	r2, #12
 8003946:	601a      	str	r2, [r3, #0]
		return (caddr_t) -1;
 8003948:	2301      	movs	r3, #1
 800394a:	425b      	negs	r3, r3
 800394c:	e006      	b.n	800395c <_sbrk+0x48>
	}

	heap_end += incr;
 800394e:	4b05      	ldr	r3, [pc, #20]	; (8003964 <_sbrk+0x50>)
 8003950:	681a      	ldr	r2, [r3, #0]
 8003952:	687b      	ldr	r3, [r7, #4]
 8003954:	18d2      	adds	r2, r2, r3
 8003956:	4b03      	ldr	r3, [pc, #12]	; (8003964 <_sbrk+0x50>)
 8003958:	601a      	str	r2, [r3, #0]

	return (caddr_t) prev_heap_end;
 800395a:	68fb      	ldr	r3, [r7, #12]
}
 800395c:	0018      	movs	r0, r3
 800395e:	46bd      	mov	sp, r7
 8003960:	b004      	add	sp, #16
 8003962:	bd80      	pop	{r7, pc}
 8003964:	20000204 	.word	0x20000204
 8003968:	20000298 	.word	0x20000298

0800396c <SystemInit>:
  * @brief  Setup the microcontroller system.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 800396c:	b580      	push	{r7, lr}
 800396e:	af00      	add	r7, sp, #0
                         before branch to main program. This call is made inside
                         the "startup_stm32f0xx.s" file.
                         User can setups the default system clock (System clock source, PLL Multiplier
                         and Divider factors, AHB/APBx prescalers and Flash settings).
   */
}
 8003970:	46c0      	nop			; (mov r8, r8)
 8003972:	46bd      	mov	sp, r7
 8003974:	bd80      	pop	{r7, pc}
	...

08003978 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8003978:	480d      	ldr	r0, [pc, #52]	; (80039b0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800397a:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800397c:	480d      	ldr	r0, [pc, #52]	; (80039b4 <LoopForever+0x6>)
  ldr r1, =_edata
 800397e:	490e      	ldr	r1, [pc, #56]	; (80039b8 <LoopForever+0xa>)
  ldr r2, =_sidata
 8003980:	4a0e      	ldr	r2, [pc, #56]	; (80039bc <LoopForever+0xe>)
  movs r3, #0
 8003982:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8003984:	e002      	b.n	800398c <LoopCopyDataInit>

08003986 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8003986:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8003988:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800398a:	3304      	adds	r3, #4

0800398c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800398c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800398e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8003990:	d3f9      	bcc.n	8003986 <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8003992:	4a0b      	ldr	r2, [pc, #44]	; (80039c0 <LoopForever+0x12>)
  ldr r4, =_ebss
 8003994:	4c0b      	ldr	r4, [pc, #44]	; (80039c4 <LoopForever+0x16>)
  movs r3, #0
 8003996:	2300      	movs	r3, #0
  b LoopFillZerobss
 8003998:	e001      	b.n	800399e <LoopFillZerobss>

0800399a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800399a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800399c:	3204      	adds	r2, #4

0800399e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800399e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80039a0:	d3fb      	bcc.n	800399a <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 80039a2:	f7ff ffe3 	bl	800396c <SystemInit>
/* Call static constructors */
  bl __libc_init_array
 80039a6:	f001 fbbd 	bl	8005124 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80039aa:	f7ff fe3b 	bl	8003624 <main>

080039ae <LoopForever>:

LoopForever:
    b LoopForever
 80039ae:	e7fe      	b.n	80039ae <LoopForever>
  ldr   r0, =_estack
 80039b0:	20001000 	.word	0x20001000
  ldr r0, =_sdata
 80039b4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80039b8:	200001e8 	.word	0x200001e8
  ldr r2, =_sidata
 80039bc:	08007710 	.word	0x08007710
  ldr r2, =_sbss
 80039c0:	200001e8 	.word	0x200001e8
  ldr r4, =_ebss
 80039c4:	20000298 	.word	0x20000298

080039c8 <ADC1_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80039c8:	e7fe      	b.n	80039c8 <ADC1_IRQHandler>
	...

080039cc <HAL_Init>:
  *       In the default implementation,Systick is used as source of time base.
  *       The tick variable is incremented each 1ms in its ISR.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 80039cc:	b580      	push	{r7, lr}
 80039ce:	af00      	add	r7, sp, #0
  /* Configure Flash prefetch */ 
#if (PREFETCH_ENABLE != 0)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 80039d0:	4b07      	ldr	r3, [pc, #28]	; (80039f0 <HAL_Init+0x24>)
 80039d2:	681a      	ldr	r2, [r3, #0]
 80039d4:	4b06      	ldr	r3, [pc, #24]	; (80039f0 <HAL_Init+0x24>)
 80039d6:	2110      	movs	r1, #16
 80039d8:	430a      	orrs	r2, r1
 80039da:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */

  HAL_InitTick(TICK_INT_PRIORITY);
 80039dc:	2000      	movs	r0, #0
 80039de:	f000 f809 	bl	80039f4 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 80039e2:	f7ff ff0b 	bl	80037fc <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 80039e6:	2300      	movs	r3, #0
}
 80039e8:	0018      	movs	r0, r3
 80039ea:	46bd      	mov	sp, r7
 80039ec:	bd80      	pop	{r7, pc}
 80039ee:	46c0      	nop			; (mov r8, r8)
 80039f0:	40022000 	.word	0x40022000

080039f4 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 80039f4:	b590      	push	{r4, r7, lr}
 80039f6:	b083      	sub	sp, #12
 80039f8:	af00      	add	r7, sp, #0
 80039fa:	6078      	str	r0, [r7, #4]
  /*Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 80039fc:	4b14      	ldr	r3, [pc, #80]	; (8003a50 <HAL_InitTick+0x5c>)
 80039fe:	681c      	ldr	r4, [r3, #0]
 8003a00:	4b14      	ldr	r3, [pc, #80]	; (8003a54 <HAL_InitTick+0x60>)
 8003a02:	781b      	ldrb	r3, [r3, #0]
 8003a04:	0019      	movs	r1, r3
 8003a06:	23fa      	movs	r3, #250	; 0xfa
 8003a08:	0098      	lsls	r0, r3, #2
 8003a0a:	f7fc fb8f 	bl	800012c <__udivsi3>
 8003a0e:	0003      	movs	r3, r0
 8003a10:	0019      	movs	r1, r3
 8003a12:	0020      	movs	r0, r4
 8003a14:	f7fc fb8a 	bl	800012c <__udivsi3>
 8003a18:	0003      	movs	r3, r0
 8003a1a:	0018      	movs	r0, r3
 8003a1c:	f000 f8e1 	bl	8003be2 <HAL_SYSTICK_Config>
 8003a20:	1e03      	subs	r3, r0, #0
 8003a22:	d001      	beq.n	8003a28 <HAL_InitTick+0x34>
  {
    return HAL_ERROR;
 8003a24:	2301      	movs	r3, #1
 8003a26:	e00f      	b.n	8003a48 <HAL_InitTick+0x54>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8003a28:	687b      	ldr	r3, [r7, #4]
 8003a2a:	2b03      	cmp	r3, #3
 8003a2c:	d80b      	bhi.n	8003a46 <HAL_InitTick+0x52>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8003a2e:	6879      	ldr	r1, [r7, #4]
 8003a30:	2301      	movs	r3, #1
 8003a32:	425b      	negs	r3, r3
 8003a34:	2200      	movs	r2, #0
 8003a36:	0018      	movs	r0, r3
 8003a38:	f000 f8be 	bl	8003bb8 <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 8003a3c:	4b06      	ldr	r3, [pc, #24]	; (8003a58 <HAL_InitTick+0x64>)
 8003a3e:	687a      	ldr	r2, [r7, #4]
 8003a40:	601a      	str	r2, [r3, #0]
  {
    return HAL_ERROR;
  }

   /* Return function status */
  return HAL_OK;
 8003a42:	2300      	movs	r3, #0
 8003a44:	e000      	b.n	8003a48 <HAL_InitTick+0x54>
    return HAL_ERROR;
 8003a46:	2301      	movs	r3, #1
}
 8003a48:	0018      	movs	r0, r3
 8003a4a:	46bd      	mov	sp, r7
 8003a4c:	b003      	add	sp, #12
 8003a4e:	bd90      	pop	{r4, r7, pc}
 8003a50:	2000000c 	.word	0x2000000c
 8003a54:	20000014 	.word	0x20000014
 8003a58:	20000010 	.word	0x20000010

08003a5c <HAL_IncTick>:
  * @note This function is declared as __weak to be overwritten in case of other 
  *       implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8003a5c:	b580      	push	{r7, lr}
 8003a5e:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 8003a60:	4b05      	ldr	r3, [pc, #20]	; (8003a78 <HAL_IncTick+0x1c>)
 8003a62:	781b      	ldrb	r3, [r3, #0]
 8003a64:	001a      	movs	r2, r3
 8003a66:	4b05      	ldr	r3, [pc, #20]	; (8003a7c <HAL_IncTick+0x20>)
 8003a68:	681b      	ldr	r3, [r3, #0]
 8003a6a:	18d2      	adds	r2, r2, r3
 8003a6c:	4b03      	ldr	r3, [pc, #12]	; (8003a7c <HAL_IncTick+0x20>)
 8003a6e:	601a      	str	r2, [r3, #0]
}
 8003a70:	46c0      	nop			; (mov r8, r8)
 8003a72:	46bd      	mov	sp, r7
 8003a74:	bd80      	pop	{r7, pc}
 8003a76:	46c0      	nop			; (mov r8, r8)
 8003a78:	20000014 	.word	0x20000014
 8003a7c:	20000290 	.word	0x20000290

08003a80 <HAL_GetTick>:
  * @note   This function is declared as __weak  to be overwritten  in case of other 
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 8003a80:	b580      	push	{r7, lr}
 8003a82:	af00      	add	r7, sp, #0
  return uwTick;
 8003a84:	4b02      	ldr	r3, [pc, #8]	; (8003a90 <HAL_GetTick+0x10>)
 8003a86:	681b      	ldr	r3, [r3, #0]
}
 8003a88:	0018      	movs	r0, r3
 8003a8a:	46bd      	mov	sp, r7
 8003a8c:	bd80      	pop	{r7, pc}
 8003a8e:	46c0      	nop			; (mov r8, r8)
 8003a90:	20000290 	.word	0x20000290

08003a94 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8003a94:	b590      	push	{r4, r7, lr}
 8003a96:	b083      	sub	sp, #12
 8003a98:	af00      	add	r7, sp, #0
 8003a9a:	0002      	movs	r2, r0
 8003a9c:	6039      	str	r1, [r7, #0]
 8003a9e:	1dfb      	adds	r3, r7, #7
 8003aa0:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
 8003aa2:	1dfb      	adds	r3, r7, #7
 8003aa4:	781b      	ldrb	r3, [r3, #0]
 8003aa6:	2b7f      	cmp	r3, #127	; 0x7f
 8003aa8:	d828      	bhi.n	8003afc <__NVIC_SetPriority+0x68>
  {
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8003aaa:	4a2f      	ldr	r2, [pc, #188]	; (8003b68 <__NVIC_SetPriority+0xd4>)
 8003aac:	1dfb      	adds	r3, r7, #7
 8003aae:	781b      	ldrb	r3, [r3, #0]
 8003ab0:	b25b      	sxtb	r3, r3
 8003ab2:	089b      	lsrs	r3, r3, #2
 8003ab4:	33c0      	adds	r3, #192	; 0xc0
 8003ab6:	009b      	lsls	r3, r3, #2
 8003ab8:	589b      	ldr	r3, [r3, r2]
 8003aba:	1dfa      	adds	r2, r7, #7
 8003abc:	7812      	ldrb	r2, [r2, #0]
 8003abe:	0011      	movs	r1, r2
 8003ac0:	2203      	movs	r2, #3
 8003ac2:	400a      	ands	r2, r1
 8003ac4:	00d2      	lsls	r2, r2, #3
 8003ac6:	21ff      	movs	r1, #255	; 0xff
 8003ac8:	4091      	lsls	r1, r2
 8003aca:	000a      	movs	r2, r1
 8003acc:	43d2      	mvns	r2, r2
 8003ace:	401a      	ands	r2, r3
 8003ad0:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 8003ad2:	683b      	ldr	r3, [r7, #0]
 8003ad4:	019b      	lsls	r3, r3, #6
 8003ad6:	22ff      	movs	r2, #255	; 0xff
 8003ad8:	401a      	ands	r2, r3
 8003ada:	1dfb      	adds	r3, r7, #7
 8003adc:	781b      	ldrb	r3, [r3, #0]
 8003ade:	0018      	movs	r0, r3
 8003ae0:	2303      	movs	r3, #3
 8003ae2:	4003      	ands	r3, r0
 8003ae4:	00db      	lsls	r3, r3, #3
 8003ae6:	409a      	lsls	r2, r3
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8003ae8:	481f      	ldr	r0, [pc, #124]	; (8003b68 <__NVIC_SetPriority+0xd4>)
 8003aea:	1dfb      	adds	r3, r7, #7
 8003aec:	781b      	ldrb	r3, [r3, #0]
 8003aee:	b25b      	sxtb	r3, r3
 8003af0:	089b      	lsrs	r3, r3, #2
 8003af2:	430a      	orrs	r2, r1
 8003af4:	33c0      	adds	r3, #192	; 0xc0
 8003af6:	009b      	lsls	r3, r3, #2
 8003af8:	501a      	str	r2, [r3, r0]
  else
  {
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
  }
}
 8003afa:	e031      	b.n	8003b60 <__NVIC_SetPriority+0xcc>
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8003afc:	4a1b      	ldr	r2, [pc, #108]	; (8003b6c <__NVIC_SetPriority+0xd8>)
 8003afe:	1dfb      	adds	r3, r7, #7
 8003b00:	781b      	ldrb	r3, [r3, #0]
 8003b02:	0019      	movs	r1, r3
 8003b04:	230f      	movs	r3, #15
 8003b06:	400b      	ands	r3, r1
 8003b08:	3b08      	subs	r3, #8
 8003b0a:	089b      	lsrs	r3, r3, #2
 8003b0c:	3306      	adds	r3, #6
 8003b0e:	009b      	lsls	r3, r3, #2
 8003b10:	18d3      	adds	r3, r2, r3
 8003b12:	3304      	adds	r3, #4
 8003b14:	681b      	ldr	r3, [r3, #0]
 8003b16:	1dfa      	adds	r2, r7, #7
 8003b18:	7812      	ldrb	r2, [r2, #0]
 8003b1a:	0011      	movs	r1, r2
 8003b1c:	2203      	movs	r2, #3
 8003b1e:	400a      	ands	r2, r1
 8003b20:	00d2      	lsls	r2, r2, #3
 8003b22:	21ff      	movs	r1, #255	; 0xff
 8003b24:	4091      	lsls	r1, r2
 8003b26:	000a      	movs	r2, r1
 8003b28:	43d2      	mvns	r2, r2
 8003b2a:	401a      	ands	r2, r3
 8003b2c:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 8003b2e:	683b      	ldr	r3, [r7, #0]
 8003b30:	019b      	lsls	r3, r3, #6
 8003b32:	22ff      	movs	r2, #255	; 0xff
 8003b34:	401a      	ands	r2, r3
 8003b36:	1dfb      	adds	r3, r7, #7
 8003b38:	781b      	ldrb	r3, [r3, #0]
 8003b3a:	0018      	movs	r0, r3
 8003b3c:	2303      	movs	r3, #3
 8003b3e:	4003      	ands	r3, r0
 8003b40:	00db      	lsls	r3, r3, #3
 8003b42:	409a      	lsls	r2, r3
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8003b44:	4809      	ldr	r0, [pc, #36]	; (8003b6c <__NVIC_SetPriority+0xd8>)
 8003b46:	1dfb      	adds	r3, r7, #7
 8003b48:	781b      	ldrb	r3, [r3, #0]
 8003b4a:	001c      	movs	r4, r3
 8003b4c:	230f      	movs	r3, #15
 8003b4e:	4023      	ands	r3, r4
 8003b50:	3b08      	subs	r3, #8
 8003b52:	089b      	lsrs	r3, r3, #2
 8003b54:	430a      	orrs	r2, r1
 8003b56:	3306      	adds	r3, #6
 8003b58:	009b      	lsls	r3, r3, #2
 8003b5a:	18c3      	adds	r3, r0, r3
 8003b5c:	3304      	adds	r3, #4
 8003b5e:	601a      	str	r2, [r3, #0]
}
 8003b60:	46c0      	nop			; (mov r8, r8)
 8003b62:	46bd      	mov	sp, r7
 8003b64:	b003      	add	sp, #12
 8003b66:	bd90      	pop	{r4, r7, pc}
 8003b68:	e000e100 	.word	0xe000e100
 8003b6c:	e000ed00 	.word	0xe000ed00

08003b70 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 8003b70:	b580      	push	{r7, lr}
 8003b72:	b082      	sub	sp, #8
 8003b74:	af00      	add	r7, sp, #0
 8003b76:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8003b78:	687b      	ldr	r3, [r7, #4]
 8003b7a:	3b01      	subs	r3, #1
 8003b7c:	4a0c      	ldr	r2, [pc, #48]	; (8003bb0 <SysTick_Config+0x40>)
 8003b7e:	4293      	cmp	r3, r2
 8003b80:	d901      	bls.n	8003b86 <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 8003b82:	2301      	movs	r3, #1
 8003b84:	e010      	b.n	8003ba8 <SysTick_Config+0x38>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8003b86:	4b0b      	ldr	r3, [pc, #44]	; (8003bb4 <SysTick_Config+0x44>)
 8003b88:	687a      	ldr	r2, [r7, #4]
 8003b8a:	3a01      	subs	r2, #1
 8003b8c:	605a      	str	r2, [r3, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 8003b8e:	2301      	movs	r3, #1
 8003b90:	425b      	negs	r3, r3
 8003b92:	2103      	movs	r1, #3
 8003b94:	0018      	movs	r0, r3
 8003b96:	f7ff ff7d 	bl	8003a94 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8003b9a:	4b06      	ldr	r3, [pc, #24]	; (8003bb4 <SysTick_Config+0x44>)
 8003b9c:	2200      	movs	r2, #0
 8003b9e:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8003ba0:	4b04      	ldr	r3, [pc, #16]	; (8003bb4 <SysTick_Config+0x44>)
 8003ba2:	2207      	movs	r2, #7
 8003ba4:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8003ba6:	2300      	movs	r3, #0
}
 8003ba8:	0018      	movs	r0, r3
 8003baa:	46bd      	mov	sp, r7
 8003bac:	b002      	add	sp, #8
 8003bae:	bd80      	pop	{r7, pc}
 8003bb0:	00ffffff 	.word	0x00ffffff
 8003bb4:	e000e010 	.word	0xe000e010

08003bb8 <HAL_NVIC_SetPriority>:
  *         with stm32f0xx devices, this parameter is a dummy value and it is ignored, because 
  *         no subpriority supported in Cortex M0 based products.   
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8003bb8:	b580      	push	{r7, lr}
 8003bba:	b084      	sub	sp, #16
 8003bbc:	af00      	add	r7, sp, #0
 8003bbe:	60b9      	str	r1, [r7, #8]
 8003bc0:	607a      	str	r2, [r7, #4]
 8003bc2:	210f      	movs	r1, #15
 8003bc4:	187b      	adds	r3, r7, r1
 8003bc6:	1c02      	adds	r2, r0, #0
 8003bc8:	701a      	strb	r2, [r3, #0]
  /* Check the parameters */
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  NVIC_SetPriority(IRQn,PreemptPriority);
 8003bca:	68ba      	ldr	r2, [r7, #8]
 8003bcc:	187b      	adds	r3, r7, r1
 8003bce:	781b      	ldrb	r3, [r3, #0]
 8003bd0:	b25b      	sxtb	r3, r3
 8003bd2:	0011      	movs	r1, r2
 8003bd4:	0018      	movs	r0, r3
 8003bd6:	f7ff ff5d 	bl	8003a94 <__NVIC_SetPriority>
}
 8003bda:	46c0      	nop			; (mov r8, r8)
 8003bdc:	46bd      	mov	sp, r7
 8003bde:	b004      	add	sp, #16
 8003be0:	bd80      	pop	{r7, pc}

08003be2 <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 8003be2:	b580      	push	{r7, lr}
 8003be4:	b082      	sub	sp, #8
 8003be6:	af00      	add	r7, sp, #0
 8003be8:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 8003bea:	687b      	ldr	r3, [r7, #4]
 8003bec:	0018      	movs	r0, r3
 8003bee:	f7ff ffbf 	bl	8003b70 <SysTick_Config>
 8003bf2:	0003      	movs	r3, r0
}
 8003bf4:	0018      	movs	r0, r3
 8003bf6:	46bd      	mov	sp, r7
 8003bf8:	b002      	add	sp, #8
 8003bfa:	bd80      	pop	{r7, pc}

08003bfc <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{ 
 8003bfc:	b580      	push	{r7, lr}
 8003bfe:	b086      	sub	sp, #24
 8003c00:	af00      	add	r7, sp, #0
 8003c02:	6078      	str	r0, [r7, #4]
 8003c04:	6039      	str	r1, [r7, #0]
  uint32_t position = 0x00u;
 8003c06:	2300      	movs	r3, #0
 8003c08:	617b      	str	r3, [r7, #20]
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
  assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 8003c0a:	e14f      	b.n	8003eac <HAL_GPIO_Init+0x2b0>
  {
    /* Get current io position */
    iocurrent = (GPIO_Init->Pin) & (1uL << position);
 8003c0c:	683b      	ldr	r3, [r7, #0]
 8003c0e:	681b      	ldr	r3, [r3, #0]
 8003c10:	2101      	movs	r1, #1
 8003c12:	697a      	ldr	r2, [r7, #20]
 8003c14:	4091      	lsls	r1, r2
 8003c16:	000a      	movs	r2, r1
 8003c18:	4013      	ands	r3, r2
 8003c1a:	60fb      	str	r3, [r7, #12]

    if (iocurrent != 0x00u)
 8003c1c:	68fb      	ldr	r3, [r7, #12]
 8003c1e:	2b00      	cmp	r3, #0
 8003c20:	d100      	bne.n	8003c24 <HAL_GPIO_Init+0x28>
 8003c22:	e140      	b.n	8003ea6 <HAL_GPIO_Init+0x2aa>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Alternate function mode selection */
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8003c24:	683b      	ldr	r3, [r7, #0]
 8003c26:	685b      	ldr	r3, [r3, #4]
 8003c28:	2b02      	cmp	r3, #2
 8003c2a:	d003      	beq.n	8003c34 <HAL_GPIO_Init+0x38>
 8003c2c:	683b      	ldr	r3, [r7, #0]
 8003c2e:	685b      	ldr	r3, [r3, #4]
 8003c30:	2b12      	cmp	r3, #18
 8003c32:	d123      	bne.n	8003c7c <HAL_GPIO_Init+0x80>
        /* Check the Alternate function parameters */
        assert_param(IS_GPIO_AF_INSTANCE(GPIOx));
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));

        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3u];
 8003c34:	697b      	ldr	r3, [r7, #20]
 8003c36:	08da      	lsrs	r2, r3, #3
 8003c38:	687b      	ldr	r3, [r7, #4]
 8003c3a:	3208      	adds	r2, #8
 8003c3c:	0092      	lsls	r2, r2, #2
 8003c3e:	58d3      	ldr	r3, [r2, r3]
 8003c40:	613b      	str	r3, [r7, #16]
        temp &= ~(0xFu << ((position & 0x07u) * 4u));
 8003c42:	697b      	ldr	r3, [r7, #20]
 8003c44:	2207      	movs	r2, #7
 8003c46:	4013      	ands	r3, r2
 8003c48:	009b      	lsls	r3, r3, #2
 8003c4a:	220f      	movs	r2, #15
 8003c4c:	409a      	lsls	r2, r3
 8003c4e:	0013      	movs	r3, r2
 8003c50:	43da      	mvns	r2, r3
 8003c52:	693b      	ldr	r3, [r7, #16]
 8003c54:	4013      	ands	r3, r2
 8003c56:	613b      	str	r3, [r7, #16]
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07u) * 4u));
 8003c58:	683b      	ldr	r3, [r7, #0]
 8003c5a:	691a      	ldr	r2, [r3, #16]
 8003c5c:	697b      	ldr	r3, [r7, #20]
 8003c5e:	2107      	movs	r1, #7
 8003c60:	400b      	ands	r3, r1
 8003c62:	009b      	lsls	r3, r3, #2
 8003c64:	409a      	lsls	r2, r3
 8003c66:	0013      	movs	r3, r2
 8003c68:	693a      	ldr	r2, [r7, #16]
 8003c6a:	4313      	orrs	r3, r2
 8003c6c:	613b      	str	r3, [r7, #16]
        GPIOx->AFR[position >> 3u] = temp;
 8003c6e:	697b      	ldr	r3, [r7, #20]
 8003c70:	08da      	lsrs	r2, r3, #3
 8003c72:	687b      	ldr	r3, [r7, #4]
 8003c74:	3208      	adds	r2, #8
 8003c76:	0092      	lsls	r2, r2, #2
 8003c78:	6939      	ldr	r1, [r7, #16]
 8003c7a:	50d1      	str	r1, [r2, r3]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 8003c7c:	687b      	ldr	r3, [r7, #4]
 8003c7e:	681b      	ldr	r3, [r3, #0]
 8003c80:	613b      	str	r3, [r7, #16]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2u));
 8003c82:	697b      	ldr	r3, [r7, #20]
 8003c84:	005b      	lsls	r3, r3, #1
 8003c86:	2203      	movs	r2, #3
 8003c88:	409a      	lsls	r2, r3
 8003c8a:	0013      	movs	r3, r2
 8003c8c:	43da      	mvns	r2, r3
 8003c8e:	693b      	ldr	r3, [r7, #16]
 8003c90:	4013      	ands	r3, r2
 8003c92:	613b      	str	r3, [r7, #16]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2u));
 8003c94:	683b      	ldr	r3, [r7, #0]
 8003c96:	685b      	ldr	r3, [r3, #4]
 8003c98:	2203      	movs	r2, #3
 8003c9a:	401a      	ands	r2, r3
 8003c9c:	697b      	ldr	r3, [r7, #20]
 8003c9e:	005b      	lsls	r3, r3, #1
 8003ca0:	409a      	lsls	r2, r3
 8003ca2:	0013      	movs	r3, r2
 8003ca4:	693a      	ldr	r2, [r7, #16]
 8003ca6:	4313      	orrs	r3, r2
 8003ca8:	613b      	str	r3, [r7, #16]
      GPIOx->MODER = temp;
 8003caa:	687b      	ldr	r3, [r7, #4]
 8003cac:	693a      	ldr	r2, [r7, #16]
 8003cae:	601a      	str	r2, [r3, #0]

      /* In case of Output or Alternate function mode selection */
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8003cb0:	683b      	ldr	r3, [r7, #0]
 8003cb2:	685b      	ldr	r3, [r3, #4]
 8003cb4:	2b01      	cmp	r3, #1
 8003cb6:	d00b      	beq.n	8003cd0 <HAL_GPIO_Init+0xd4>
 8003cb8:	683b      	ldr	r3, [r7, #0]
 8003cba:	685b      	ldr	r3, [r3, #4]
 8003cbc:	2b02      	cmp	r3, #2
 8003cbe:	d007      	beq.n	8003cd0 <HAL_GPIO_Init+0xd4>
         (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8003cc0:	683b      	ldr	r3, [r7, #0]
 8003cc2:	685b      	ldr	r3, [r3, #4]
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8003cc4:	2b11      	cmp	r3, #17
 8003cc6:	d003      	beq.n	8003cd0 <HAL_GPIO_Init+0xd4>
         (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8003cc8:	683b      	ldr	r3, [r7, #0]
 8003cca:	685b      	ldr	r3, [r3, #4]
 8003ccc:	2b12      	cmp	r3, #18
 8003cce:	d130      	bne.n	8003d32 <HAL_GPIO_Init+0x136>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR;
 8003cd0:	687b      	ldr	r3, [r7, #4]
 8003cd2:	689b      	ldr	r3, [r3, #8]
 8003cd4:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2u));
 8003cd6:	697b      	ldr	r3, [r7, #20]
 8003cd8:	005b      	lsls	r3, r3, #1
 8003cda:	2203      	movs	r2, #3
 8003cdc:	409a      	lsls	r2, r3
 8003cde:	0013      	movs	r3, r2
 8003ce0:	43da      	mvns	r2, r3
 8003ce2:	693b      	ldr	r3, [r7, #16]
 8003ce4:	4013      	ands	r3, r2
 8003ce6:	613b      	str	r3, [r7, #16]
        temp |= (GPIO_Init->Speed << (position * 2u));
 8003ce8:	683b      	ldr	r3, [r7, #0]
 8003cea:	68da      	ldr	r2, [r3, #12]
 8003cec:	697b      	ldr	r3, [r7, #20]
 8003cee:	005b      	lsls	r3, r3, #1
 8003cf0:	409a      	lsls	r2, r3
 8003cf2:	0013      	movs	r3, r2
 8003cf4:	693a      	ldr	r2, [r7, #16]
 8003cf6:	4313      	orrs	r3, r2
 8003cf8:	613b      	str	r3, [r7, #16]
        GPIOx->OSPEEDR = temp;
 8003cfa:	687b      	ldr	r3, [r7, #4]
 8003cfc:	693a      	ldr	r2, [r7, #16]
 8003cfe:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 8003d00:	687b      	ldr	r3, [r7, #4]
 8003d02:	685b      	ldr	r3, [r3, #4]
 8003d04:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8003d06:	2201      	movs	r2, #1
 8003d08:	697b      	ldr	r3, [r7, #20]
 8003d0a:	409a      	lsls	r2, r3
 8003d0c:	0013      	movs	r3, r2
 8003d0e:	43da      	mvns	r2, r3
 8003d10:	693b      	ldr	r3, [r7, #16]
 8003d12:	4013      	ands	r3, r2
 8003d14:	613b      	str	r3, [r7, #16]
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4u) << position);
 8003d16:	683b      	ldr	r3, [r7, #0]
 8003d18:	685b      	ldr	r3, [r3, #4]
 8003d1a:	091b      	lsrs	r3, r3, #4
 8003d1c:	2201      	movs	r2, #1
 8003d1e:	401a      	ands	r2, r3
 8003d20:	697b      	ldr	r3, [r7, #20]
 8003d22:	409a      	lsls	r2, r3
 8003d24:	0013      	movs	r3, r2
 8003d26:	693a      	ldr	r2, [r7, #16]
 8003d28:	4313      	orrs	r3, r2
 8003d2a:	613b      	str	r3, [r7, #16]
        GPIOx->OTYPER = temp;
 8003d2c:	687b      	ldr	r3, [r7, #4]
 8003d2e:	693a      	ldr	r2, [r7, #16]
 8003d30:	605a      	str	r2, [r3, #4]
      }

      /* Activate the Pull-up or Pull down resistor for the current IO */
      temp = GPIOx->PUPDR;
 8003d32:	687b      	ldr	r3, [r7, #4]
 8003d34:	68db      	ldr	r3, [r3, #12]
 8003d36:	613b      	str	r3, [r7, #16]
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2u));
 8003d38:	697b      	ldr	r3, [r7, #20]
 8003d3a:	005b      	lsls	r3, r3, #1
 8003d3c:	2203      	movs	r2, #3
 8003d3e:	409a      	lsls	r2, r3
 8003d40:	0013      	movs	r3, r2
 8003d42:	43da      	mvns	r2, r3
 8003d44:	693b      	ldr	r3, [r7, #16]
 8003d46:	4013      	ands	r3, r2
 8003d48:	613b      	str	r3, [r7, #16]
      temp |= ((GPIO_Init->Pull) << (position * 2u));
 8003d4a:	683b      	ldr	r3, [r7, #0]
 8003d4c:	689a      	ldr	r2, [r3, #8]
 8003d4e:	697b      	ldr	r3, [r7, #20]
 8003d50:	005b      	lsls	r3, r3, #1
 8003d52:	409a      	lsls	r2, r3
 8003d54:	0013      	movs	r3, r2
 8003d56:	693a      	ldr	r2, [r7, #16]
 8003d58:	4313      	orrs	r3, r2
 8003d5a:	613b      	str	r3, [r7, #16]
      GPIOx->PUPDR = temp;
 8003d5c:	687b      	ldr	r3, [r7, #4]
 8003d5e:	693a      	ldr	r2, [r7, #16]
 8003d60:	60da      	str	r2, [r3, #12]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 8003d62:	683b      	ldr	r3, [r7, #0]
 8003d64:	685a      	ldr	r2, [r3, #4]
 8003d66:	2380      	movs	r3, #128	; 0x80
 8003d68:	055b      	lsls	r3, r3, #21
 8003d6a:	4013      	ands	r3, r2
 8003d6c:	d100      	bne.n	8003d70 <HAL_GPIO_Init+0x174>
 8003d6e:	e09a      	b.n	8003ea6 <HAL_GPIO_Init+0x2aa>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8003d70:	4b54      	ldr	r3, [pc, #336]	; (8003ec4 <HAL_GPIO_Init+0x2c8>)
 8003d72:	699a      	ldr	r2, [r3, #24]
 8003d74:	4b53      	ldr	r3, [pc, #332]	; (8003ec4 <HAL_GPIO_Init+0x2c8>)
 8003d76:	2101      	movs	r1, #1
 8003d78:	430a      	orrs	r2, r1
 8003d7a:	619a      	str	r2, [r3, #24]
 8003d7c:	4b51      	ldr	r3, [pc, #324]	; (8003ec4 <HAL_GPIO_Init+0x2c8>)
 8003d7e:	699b      	ldr	r3, [r3, #24]
 8003d80:	2201      	movs	r2, #1
 8003d82:	4013      	ands	r3, r2
 8003d84:	60bb      	str	r3, [r7, #8]
 8003d86:	68bb      	ldr	r3, [r7, #8]

        temp = SYSCFG->EXTICR[position >> 2u];
 8003d88:	4a4f      	ldr	r2, [pc, #316]	; (8003ec8 <HAL_GPIO_Init+0x2cc>)
 8003d8a:	697b      	ldr	r3, [r7, #20]
 8003d8c:	089b      	lsrs	r3, r3, #2
 8003d8e:	3302      	adds	r3, #2
 8003d90:	009b      	lsls	r3, r3, #2
 8003d92:	589b      	ldr	r3, [r3, r2]
 8003d94:	613b      	str	r3, [r7, #16]
        temp &= ~(0x0FuL << (4u * (position & 0x03u)));
 8003d96:	697b      	ldr	r3, [r7, #20]
 8003d98:	2203      	movs	r2, #3
 8003d9a:	4013      	ands	r3, r2
 8003d9c:	009b      	lsls	r3, r3, #2
 8003d9e:	220f      	movs	r2, #15
 8003da0:	409a      	lsls	r2, r3
 8003da2:	0013      	movs	r3, r2
 8003da4:	43da      	mvns	r2, r3
 8003da6:	693b      	ldr	r3, [r7, #16]
 8003da8:	4013      	ands	r3, r2
 8003daa:	613b      	str	r3, [r7, #16]
        temp |= (GPIO_GET_INDEX(GPIOx) << (4u * (position & 0x03u)));
 8003dac:	687a      	ldr	r2, [r7, #4]
 8003dae:	2390      	movs	r3, #144	; 0x90
 8003db0:	05db      	lsls	r3, r3, #23
 8003db2:	429a      	cmp	r2, r3
 8003db4:	d013      	beq.n	8003dde <HAL_GPIO_Init+0x1e2>
 8003db6:	687b      	ldr	r3, [r7, #4]
 8003db8:	4a44      	ldr	r2, [pc, #272]	; (8003ecc <HAL_GPIO_Init+0x2d0>)
 8003dba:	4293      	cmp	r3, r2
 8003dbc:	d00d      	beq.n	8003dda <HAL_GPIO_Init+0x1de>
 8003dbe:	687b      	ldr	r3, [r7, #4]
 8003dc0:	4a43      	ldr	r2, [pc, #268]	; (8003ed0 <HAL_GPIO_Init+0x2d4>)
 8003dc2:	4293      	cmp	r3, r2
 8003dc4:	d007      	beq.n	8003dd6 <HAL_GPIO_Init+0x1da>
 8003dc6:	687b      	ldr	r3, [r7, #4]
 8003dc8:	4a42      	ldr	r2, [pc, #264]	; (8003ed4 <HAL_GPIO_Init+0x2d8>)
 8003dca:	4293      	cmp	r3, r2
 8003dcc:	d101      	bne.n	8003dd2 <HAL_GPIO_Init+0x1d6>
 8003dce:	2303      	movs	r3, #3
 8003dd0:	e006      	b.n	8003de0 <HAL_GPIO_Init+0x1e4>
 8003dd2:	2305      	movs	r3, #5
 8003dd4:	e004      	b.n	8003de0 <HAL_GPIO_Init+0x1e4>
 8003dd6:	2302      	movs	r3, #2
 8003dd8:	e002      	b.n	8003de0 <HAL_GPIO_Init+0x1e4>
 8003dda:	2301      	movs	r3, #1
 8003ddc:	e000      	b.n	8003de0 <HAL_GPIO_Init+0x1e4>
 8003dde:	2300      	movs	r3, #0
 8003de0:	697a      	ldr	r2, [r7, #20]
 8003de2:	2103      	movs	r1, #3
 8003de4:	400a      	ands	r2, r1
 8003de6:	0092      	lsls	r2, r2, #2
 8003de8:	4093      	lsls	r3, r2
 8003dea:	693a      	ldr	r2, [r7, #16]
 8003dec:	4313      	orrs	r3, r2
 8003dee:	613b      	str	r3, [r7, #16]
        SYSCFG->EXTICR[position >> 2u] = temp;
 8003df0:	4935      	ldr	r1, [pc, #212]	; (8003ec8 <HAL_GPIO_Init+0x2cc>)
 8003df2:	697b      	ldr	r3, [r7, #20]
 8003df4:	089b      	lsrs	r3, r3, #2
 8003df6:	3302      	adds	r3, #2
 8003df8:	009b      	lsls	r3, r3, #2
 8003dfa:	693a      	ldr	r2, [r7, #16]
 8003dfc:	505a      	str	r2, [r3, r1]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8003dfe:	4b36      	ldr	r3, [pc, #216]	; (8003ed8 <HAL_GPIO_Init+0x2dc>)
 8003e00:	681b      	ldr	r3, [r3, #0]
 8003e02:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 8003e04:	68fb      	ldr	r3, [r7, #12]
 8003e06:	43da      	mvns	r2, r3
 8003e08:	693b      	ldr	r3, [r7, #16]
 8003e0a:	4013      	ands	r3, r2
 8003e0c:	613b      	str	r3, [r7, #16]
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 8003e0e:	683b      	ldr	r3, [r7, #0]
 8003e10:	685a      	ldr	r2, [r3, #4]
 8003e12:	2380      	movs	r3, #128	; 0x80
 8003e14:	025b      	lsls	r3, r3, #9
 8003e16:	4013      	ands	r3, r2
 8003e18:	d003      	beq.n	8003e22 <HAL_GPIO_Init+0x226>
        {
          temp |= iocurrent;
 8003e1a:	693a      	ldr	r2, [r7, #16]
 8003e1c:	68fb      	ldr	r3, [r7, #12]
 8003e1e:	4313      	orrs	r3, r2
 8003e20:	613b      	str	r3, [r7, #16]
        }
        EXTI->IMR = temp;
 8003e22:	4b2d      	ldr	r3, [pc, #180]	; (8003ed8 <HAL_GPIO_Init+0x2dc>)
 8003e24:	693a      	ldr	r2, [r7, #16]
 8003e26:	601a      	str	r2, [r3, #0]

        temp = EXTI->EMR;
 8003e28:	4b2b      	ldr	r3, [pc, #172]	; (8003ed8 <HAL_GPIO_Init+0x2dc>)
 8003e2a:	685b      	ldr	r3, [r3, #4]
 8003e2c:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 8003e2e:	68fb      	ldr	r3, [r7, #12]
 8003e30:	43da      	mvns	r2, r3
 8003e32:	693b      	ldr	r3, [r7, #16]
 8003e34:	4013      	ands	r3, r2
 8003e36:	613b      	str	r3, [r7, #16]
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 8003e38:	683b      	ldr	r3, [r7, #0]
 8003e3a:	685a      	ldr	r2, [r3, #4]
 8003e3c:	2380      	movs	r3, #128	; 0x80
 8003e3e:	029b      	lsls	r3, r3, #10
 8003e40:	4013      	ands	r3, r2
 8003e42:	d003      	beq.n	8003e4c <HAL_GPIO_Init+0x250>
        {
          temp |= iocurrent;
 8003e44:	693a      	ldr	r2, [r7, #16]
 8003e46:	68fb      	ldr	r3, [r7, #12]
 8003e48:	4313      	orrs	r3, r2
 8003e4a:	613b      	str	r3, [r7, #16]
        }
        EXTI->EMR = temp;
 8003e4c:	4b22      	ldr	r3, [pc, #136]	; (8003ed8 <HAL_GPIO_Init+0x2dc>)
 8003e4e:	693a      	ldr	r2, [r7, #16]
 8003e50:	605a      	str	r2, [r3, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8003e52:	4b21      	ldr	r3, [pc, #132]	; (8003ed8 <HAL_GPIO_Init+0x2dc>)
 8003e54:	689b      	ldr	r3, [r3, #8]
 8003e56:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 8003e58:	68fb      	ldr	r3, [r7, #12]
 8003e5a:	43da      	mvns	r2, r3
 8003e5c:	693b      	ldr	r3, [r7, #16]
 8003e5e:	4013      	ands	r3, r2
 8003e60:	613b      	str	r3, [r7, #16]
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 8003e62:	683b      	ldr	r3, [r7, #0]
 8003e64:	685a      	ldr	r2, [r3, #4]
 8003e66:	2380      	movs	r3, #128	; 0x80
 8003e68:	035b      	lsls	r3, r3, #13
 8003e6a:	4013      	ands	r3, r2
 8003e6c:	d003      	beq.n	8003e76 <HAL_GPIO_Init+0x27a>
        {
          temp |= iocurrent;
 8003e6e:	693a      	ldr	r2, [r7, #16]
 8003e70:	68fb      	ldr	r3, [r7, #12]
 8003e72:	4313      	orrs	r3, r2
 8003e74:	613b      	str	r3, [r7, #16]
        }
        EXTI->RTSR = temp;
 8003e76:	4b18      	ldr	r3, [pc, #96]	; (8003ed8 <HAL_GPIO_Init+0x2dc>)
 8003e78:	693a      	ldr	r2, [r7, #16]
 8003e7a:	609a      	str	r2, [r3, #8]

        temp = EXTI->FTSR;
 8003e7c:	4b16      	ldr	r3, [pc, #88]	; (8003ed8 <HAL_GPIO_Init+0x2dc>)
 8003e7e:	68db      	ldr	r3, [r3, #12]
 8003e80:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 8003e82:	68fb      	ldr	r3, [r7, #12]
 8003e84:	43da      	mvns	r2, r3
 8003e86:	693b      	ldr	r3, [r7, #16]
 8003e88:	4013      	ands	r3, r2
 8003e8a:	613b      	str	r3, [r7, #16]
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 8003e8c:	683b      	ldr	r3, [r7, #0]
 8003e8e:	685a      	ldr	r2, [r3, #4]
 8003e90:	2380      	movs	r3, #128	; 0x80
 8003e92:	039b      	lsls	r3, r3, #14
 8003e94:	4013      	ands	r3, r2
 8003e96:	d003      	beq.n	8003ea0 <HAL_GPIO_Init+0x2a4>
        {
          temp |= iocurrent;
 8003e98:	693a      	ldr	r2, [r7, #16]
 8003e9a:	68fb      	ldr	r3, [r7, #12]
 8003e9c:	4313      	orrs	r3, r2
 8003e9e:	613b      	str	r3, [r7, #16]
        }
        EXTI->FTSR = temp;
 8003ea0:	4b0d      	ldr	r3, [pc, #52]	; (8003ed8 <HAL_GPIO_Init+0x2dc>)
 8003ea2:	693a      	ldr	r2, [r7, #16]
 8003ea4:	60da      	str	r2, [r3, #12]
      }
    }

    position++;
 8003ea6:	697b      	ldr	r3, [r7, #20]
 8003ea8:	3301      	adds	r3, #1
 8003eaa:	617b      	str	r3, [r7, #20]
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 8003eac:	683b      	ldr	r3, [r7, #0]
 8003eae:	681a      	ldr	r2, [r3, #0]
 8003eb0:	697b      	ldr	r3, [r7, #20]
 8003eb2:	40da      	lsrs	r2, r3
 8003eb4:	1e13      	subs	r3, r2, #0
 8003eb6:	d000      	beq.n	8003eba <HAL_GPIO_Init+0x2be>
 8003eb8:	e6a8      	b.n	8003c0c <HAL_GPIO_Init+0x10>
  } 
}
 8003eba:	46c0      	nop			; (mov r8, r8)
 8003ebc:	46bd      	mov	sp, r7
 8003ebe:	b006      	add	sp, #24
 8003ec0:	bd80      	pop	{r7, pc}
 8003ec2:	46c0      	nop			; (mov r8, r8)
 8003ec4:	40021000 	.word	0x40021000
 8003ec8:	40010000 	.word	0x40010000
 8003ecc:	48000400 	.word	0x48000400
 8003ed0:	48000800 	.word	0x48000800
 8003ed4:	48000c00 	.word	0x48000c00
 8003ed8:	40010400 	.word	0x40010400

08003edc <HAL_RCC_OscConfig>:
  *         supported by this macro. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8003edc:	b580      	push	{r7, lr}
 8003ede:	b088      	sub	sp, #32
 8003ee0:	af00      	add	r7, sp, #0
 8003ee2:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;
  uint32_t pll_config;
  uint32_t pll_config2;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8003ee4:	687b      	ldr	r3, [r7, #4]
 8003ee6:	2b00      	cmp	r3, #0
 8003ee8:	d101      	bne.n	8003eee <HAL_RCC_OscConfig+0x12>
  {
    return HAL_ERROR;
 8003eea:	2301      	movs	r3, #1
 8003eec:	e303      	b.n	80044f6 <HAL_RCC_OscConfig+0x61a>

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));

  /*------------------------------- HSE Configuration ------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8003eee:	687b      	ldr	r3, [r7, #4]
 8003ef0:	681b      	ldr	r3, [r3, #0]
 8003ef2:	2201      	movs	r2, #1
 8003ef4:	4013      	ands	r3, r2
 8003ef6:	d100      	bne.n	8003efa <HAL_RCC_OscConfig+0x1e>
 8003ef8:	e08d      	b.n	8004016 <HAL_RCC_OscConfig+0x13a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));

    /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowed to be disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE) 
 8003efa:	4bc4      	ldr	r3, [pc, #784]	; (800420c <HAL_RCC_OscConfig+0x330>)
 8003efc:	685b      	ldr	r3, [r3, #4]
 8003efe:	220c      	movs	r2, #12
 8003f00:	4013      	ands	r3, r2
 8003f02:	2b04      	cmp	r3, #4
 8003f04:	d00e      	beq.n	8003f24 <HAL_RCC_OscConfig+0x48>
       || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSE)))
 8003f06:	4bc1      	ldr	r3, [pc, #772]	; (800420c <HAL_RCC_OscConfig+0x330>)
 8003f08:	685b      	ldr	r3, [r3, #4]
 8003f0a:	220c      	movs	r2, #12
 8003f0c:	4013      	ands	r3, r2
 8003f0e:	2b08      	cmp	r3, #8
 8003f10:	d116      	bne.n	8003f40 <HAL_RCC_OscConfig+0x64>
 8003f12:	4bbe      	ldr	r3, [pc, #760]	; (800420c <HAL_RCC_OscConfig+0x330>)
 8003f14:	685a      	ldr	r2, [r3, #4]
 8003f16:	2380      	movs	r3, #128	; 0x80
 8003f18:	025b      	lsls	r3, r3, #9
 8003f1a:	401a      	ands	r2, r3
 8003f1c:	2380      	movs	r3, #128	; 0x80
 8003f1e:	025b      	lsls	r3, r3, #9
 8003f20:	429a      	cmp	r2, r3
 8003f22:	d10d      	bne.n	8003f40 <HAL_RCC_OscConfig+0x64>
    {
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8003f24:	4bb9      	ldr	r3, [pc, #740]	; (800420c <HAL_RCC_OscConfig+0x330>)
 8003f26:	681a      	ldr	r2, [r3, #0]
 8003f28:	2380      	movs	r3, #128	; 0x80
 8003f2a:	029b      	lsls	r3, r3, #10
 8003f2c:	4013      	ands	r3, r2
 8003f2e:	d100      	bne.n	8003f32 <HAL_RCC_OscConfig+0x56>
 8003f30:	e070      	b.n	8004014 <HAL_RCC_OscConfig+0x138>
 8003f32:	687b      	ldr	r3, [r7, #4]
 8003f34:	685b      	ldr	r3, [r3, #4]
 8003f36:	2b00      	cmp	r3, #0
 8003f38:	d000      	beq.n	8003f3c <HAL_RCC_OscConfig+0x60>
 8003f3a:	e06b      	b.n	8004014 <HAL_RCC_OscConfig+0x138>
      {
        return HAL_ERROR;
 8003f3c:	2301      	movs	r3, #1
 8003f3e:	e2da      	b.n	80044f6 <HAL_RCC_OscConfig+0x61a>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8003f40:	687b      	ldr	r3, [r7, #4]
 8003f42:	685b      	ldr	r3, [r3, #4]
 8003f44:	2b01      	cmp	r3, #1
 8003f46:	d107      	bne.n	8003f58 <HAL_RCC_OscConfig+0x7c>
 8003f48:	4bb0      	ldr	r3, [pc, #704]	; (800420c <HAL_RCC_OscConfig+0x330>)
 8003f4a:	681a      	ldr	r2, [r3, #0]
 8003f4c:	4baf      	ldr	r3, [pc, #700]	; (800420c <HAL_RCC_OscConfig+0x330>)
 8003f4e:	2180      	movs	r1, #128	; 0x80
 8003f50:	0249      	lsls	r1, r1, #9
 8003f52:	430a      	orrs	r2, r1
 8003f54:	601a      	str	r2, [r3, #0]
 8003f56:	e02f      	b.n	8003fb8 <HAL_RCC_OscConfig+0xdc>
 8003f58:	687b      	ldr	r3, [r7, #4]
 8003f5a:	685b      	ldr	r3, [r3, #4]
 8003f5c:	2b00      	cmp	r3, #0
 8003f5e:	d10c      	bne.n	8003f7a <HAL_RCC_OscConfig+0x9e>
 8003f60:	4baa      	ldr	r3, [pc, #680]	; (800420c <HAL_RCC_OscConfig+0x330>)
 8003f62:	681a      	ldr	r2, [r3, #0]
 8003f64:	4ba9      	ldr	r3, [pc, #676]	; (800420c <HAL_RCC_OscConfig+0x330>)
 8003f66:	49aa      	ldr	r1, [pc, #680]	; (8004210 <HAL_RCC_OscConfig+0x334>)
 8003f68:	400a      	ands	r2, r1
 8003f6a:	601a      	str	r2, [r3, #0]
 8003f6c:	4ba7      	ldr	r3, [pc, #668]	; (800420c <HAL_RCC_OscConfig+0x330>)
 8003f6e:	681a      	ldr	r2, [r3, #0]
 8003f70:	4ba6      	ldr	r3, [pc, #664]	; (800420c <HAL_RCC_OscConfig+0x330>)
 8003f72:	49a8      	ldr	r1, [pc, #672]	; (8004214 <HAL_RCC_OscConfig+0x338>)
 8003f74:	400a      	ands	r2, r1
 8003f76:	601a      	str	r2, [r3, #0]
 8003f78:	e01e      	b.n	8003fb8 <HAL_RCC_OscConfig+0xdc>
 8003f7a:	687b      	ldr	r3, [r7, #4]
 8003f7c:	685b      	ldr	r3, [r3, #4]
 8003f7e:	2b05      	cmp	r3, #5
 8003f80:	d10e      	bne.n	8003fa0 <HAL_RCC_OscConfig+0xc4>
 8003f82:	4ba2      	ldr	r3, [pc, #648]	; (800420c <HAL_RCC_OscConfig+0x330>)
 8003f84:	681a      	ldr	r2, [r3, #0]
 8003f86:	4ba1      	ldr	r3, [pc, #644]	; (800420c <HAL_RCC_OscConfig+0x330>)
 8003f88:	2180      	movs	r1, #128	; 0x80
 8003f8a:	02c9      	lsls	r1, r1, #11
 8003f8c:	430a      	orrs	r2, r1
 8003f8e:	601a      	str	r2, [r3, #0]
 8003f90:	4b9e      	ldr	r3, [pc, #632]	; (800420c <HAL_RCC_OscConfig+0x330>)
 8003f92:	681a      	ldr	r2, [r3, #0]
 8003f94:	4b9d      	ldr	r3, [pc, #628]	; (800420c <HAL_RCC_OscConfig+0x330>)
 8003f96:	2180      	movs	r1, #128	; 0x80
 8003f98:	0249      	lsls	r1, r1, #9
 8003f9a:	430a      	orrs	r2, r1
 8003f9c:	601a      	str	r2, [r3, #0]
 8003f9e:	e00b      	b.n	8003fb8 <HAL_RCC_OscConfig+0xdc>
 8003fa0:	4b9a      	ldr	r3, [pc, #616]	; (800420c <HAL_RCC_OscConfig+0x330>)
 8003fa2:	681a      	ldr	r2, [r3, #0]
 8003fa4:	4b99      	ldr	r3, [pc, #612]	; (800420c <HAL_RCC_OscConfig+0x330>)
 8003fa6:	499a      	ldr	r1, [pc, #616]	; (8004210 <HAL_RCC_OscConfig+0x334>)
 8003fa8:	400a      	ands	r2, r1
 8003faa:	601a      	str	r2, [r3, #0]
 8003fac:	4b97      	ldr	r3, [pc, #604]	; (800420c <HAL_RCC_OscConfig+0x330>)
 8003fae:	681a      	ldr	r2, [r3, #0]
 8003fb0:	4b96      	ldr	r3, [pc, #600]	; (800420c <HAL_RCC_OscConfig+0x330>)
 8003fb2:	4998      	ldr	r1, [pc, #608]	; (8004214 <HAL_RCC_OscConfig+0x338>)
 8003fb4:	400a      	ands	r2, r1
 8003fb6:	601a      	str	r2, [r3, #0]
      

       /* Check the HSE State */
      if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 8003fb8:	687b      	ldr	r3, [r7, #4]
 8003fba:	685b      	ldr	r3, [r3, #4]
 8003fbc:	2b00      	cmp	r3, #0
 8003fbe:	d014      	beq.n	8003fea <HAL_RCC_OscConfig+0x10e>
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8003fc0:	f7ff fd5e 	bl	8003a80 <HAL_GetTick>
 8003fc4:	0003      	movs	r3, r0
 8003fc6:	61bb      	str	r3, [r7, #24]
        
        /* Wait till HSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8003fc8:	e008      	b.n	8003fdc <HAL_RCC_OscConfig+0x100>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8003fca:	f7ff fd59 	bl	8003a80 <HAL_GetTick>
 8003fce:	0002      	movs	r2, r0
 8003fd0:	69bb      	ldr	r3, [r7, #24]
 8003fd2:	1ad3      	subs	r3, r2, r3
 8003fd4:	2b64      	cmp	r3, #100	; 0x64
 8003fd6:	d901      	bls.n	8003fdc <HAL_RCC_OscConfig+0x100>
          {
            return HAL_TIMEOUT;
 8003fd8:	2303      	movs	r3, #3
 8003fda:	e28c      	b.n	80044f6 <HAL_RCC_OscConfig+0x61a>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8003fdc:	4b8b      	ldr	r3, [pc, #556]	; (800420c <HAL_RCC_OscConfig+0x330>)
 8003fde:	681a      	ldr	r2, [r3, #0]
 8003fe0:	2380      	movs	r3, #128	; 0x80
 8003fe2:	029b      	lsls	r3, r3, #10
 8003fe4:	4013      	ands	r3, r2
 8003fe6:	d0f0      	beq.n	8003fca <HAL_RCC_OscConfig+0xee>
 8003fe8:	e015      	b.n	8004016 <HAL_RCC_OscConfig+0x13a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8003fea:	f7ff fd49 	bl	8003a80 <HAL_GetTick>
 8003fee:	0003      	movs	r3, r0
 8003ff0:	61bb      	str	r3, [r7, #24]
        
        /* Wait till HSE is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8003ff2:	e008      	b.n	8004006 <HAL_RCC_OscConfig+0x12a>
        {
           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8003ff4:	f7ff fd44 	bl	8003a80 <HAL_GetTick>
 8003ff8:	0002      	movs	r2, r0
 8003ffa:	69bb      	ldr	r3, [r7, #24]
 8003ffc:	1ad3      	subs	r3, r2, r3
 8003ffe:	2b64      	cmp	r3, #100	; 0x64
 8004000:	d901      	bls.n	8004006 <HAL_RCC_OscConfig+0x12a>
          {
            return HAL_TIMEOUT;
 8004002:	2303      	movs	r3, #3
 8004004:	e277      	b.n	80044f6 <HAL_RCC_OscConfig+0x61a>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8004006:	4b81      	ldr	r3, [pc, #516]	; (800420c <HAL_RCC_OscConfig+0x330>)
 8004008:	681a      	ldr	r2, [r3, #0]
 800400a:	2380      	movs	r3, #128	; 0x80
 800400c:	029b      	lsls	r3, r3, #10
 800400e:	4013      	ands	r3, r2
 8004010:	d1f0      	bne.n	8003ff4 <HAL_RCC_OscConfig+0x118>
 8004012:	e000      	b.n	8004016 <HAL_RCC_OscConfig+0x13a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8004014:	46c0      	nop			; (mov r8, r8)
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8004016:	687b      	ldr	r3, [r7, #4]
 8004018:	681b      	ldr	r3, [r3, #0]
 800401a:	2202      	movs	r2, #2
 800401c:	4013      	ands	r3, r2
 800401e:	d100      	bne.n	8004022 <HAL_RCC_OscConfig+0x146>
 8004020:	e069      	b.n	80040f6 <HAL_RCC_OscConfig+0x21a>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
    
    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */ 
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI) 
 8004022:	4b7a      	ldr	r3, [pc, #488]	; (800420c <HAL_RCC_OscConfig+0x330>)
 8004024:	685b      	ldr	r3, [r3, #4]
 8004026:	220c      	movs	r2, #12
 8004028:	4013      	ands	r3, r2
 800402a:	d00b      	beq.n	8004044 <HAL_RCC_OscConfig+0x168>
       || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSI)))
 800402c:	4b77      	ldr	r3, [pc, #476]	; (800420c <HAL_RCC_OscConfig+0x330>)
 800402e:	685b      	ldr	r3, [r3, #4]
 8004030:	220c      	movs	r2, #12
 8004032:	4013      	ands	r3, r2
 8004034:	2b08      	cmp	r3, #8
 8004036:	d11c      	bne.n	8004072 <HAL_RCC_OscConfig+0x196>
 8004038:	4b74      	ldr	r3, [pc, #464]	; (800420c <HAL_RCC_OscConfig+0x330>)
 800403a:	685a      	ldr	r2, [r3, #4]
 800403c:	2380      	movs	r3, #128	; 0x80
 800403e:	025b      	lsls	r3, r3, #9
 8004040:	4013      	ands	r3, r2
 8004042:	d116      	bne.n	8004072 <HAL_RCC_OscConfig+0x196>
    {
      /* When HSI is used as system clock it will not disabled */
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8004044:	4b71      	ldr	r3, [pc, #452]	; (800420c <HAL_RCC_OscConfig+0x330>)
 8004046:	681b      	ldr	r3, [r3, #0]
 8004048:	2202      	movs	r2, #2
 800404a:	4013      	ands	r3, r2
 800404c:	d005      	beq.n	800405a <HAL_RCC_OscConfig+0x17e>
 800404e:	687b      	ldr	r3, [r7, #4]
 8004050:	68db      	ldr	r3, [r3, #12]
 8004052:	2b01      	cmp	r3, #1
 8004054:	d001      	beq.n	800405a <HAL_RCC_OscConfig+0x17e>
      {
        return HAL_ERROR;
 8004056:	2301      	movs	r3, #1
 8004058:	e24d      	b.n	80044f6 <HAL_RCC_OscConfig+0x61a>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800405a:	4b6c      	ldr	r3, [pc, #432]	; (800420c <HAL_RCC_OscConfig+0x330>)
 800405c:	681b      	ldr	r3, [r3, #0]
 800405e:	22f8      	movs	r2, #248	; 0xf8
 8004060:	4393      	bics	r3, r2
 8004062:	0019      	movs	r1, r3
 8004064:	687b      	ldr	r3, [r7, #4]
 8004066:	691b      	ldr	r3, [r3, #16]
 8004068:	00da      	lsls	r2, r3, #3
 800406a:	4b68      	ldr	r3, [pc, #416]	; (800420c <HAL_RCC_OscConfig+0x330>)
 800406c:	430a      	orrs	r2, r1
 800406e:	601a      	str	r2, [r3, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8004070:	e041      	b.n	80040f6 <HAL_RCC_OscConfig+0x21a>
      }
    }
    else
    {
      /* Check the HSI State */
      if(RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 8004072:	687b      	ldr	r3, [r7, #4]
 8004074:	68db      	ldr	r3, [r3, #12]
 8004076:	2b00      	cmp	r3, #0
 8004078:	d024      	beq.n	80040c4 <HAL_RCC_OscConfig+0x1e8>
      {
       /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 800407a:	4b64      	ldr	r3, [pc, #400]	; (800420c <HAL_RCC_OscConfig+0x330>)
 800407c:	681a      	ldr	r2, [r3, #0]
 800407e:	4b63      	ldr	r3, [pc, #396]	; (800420c <HAL_RCC_OscConfig+0x330>)
 8004080:	2101      	movs	r1, #1
 8004082:	430a      	orrs	r2, r1
 8004084:	601a      	str	r2, [r3, #0]
        
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8004086:	f7ff fcfb 	bl	8003a80 <HAL_GetTick>
 800408a:	0003      	movs	r3, r0
 800408c:	61bb      	str	r3, [r7, #24]
        
        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800408e:	e008      	b.n	80040a2 <HAL_RCC_OscConfig+0x1c6>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8004090:	f7ff fcf6 	bl	8003a80 <HAL_GetTick>
 8004094:	0002      	movs	r2, r0
 8004096:	69bb      	ldr	r3, [r7, #24]
 8004098:	1ad3      	subs	r3, r2, r3
 800409a:	2b02      	cmp	r3, #2
 800409c:	d901      	bls.n	80040a2 <HAL_RCC_OscConfig+0x1c6>
          {
            return HAL_TIMEOUT;
 800409e:	2303      	movs	r3, #3
 80040a0:	e229      	b.n	80044f6 <HAL_RCC_OscConfig+0x61a>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80040a2:	4b5a      	ldr	r3, [pc, #360]	; (800420c <HAL_RCC_OscConfig+0x330>)
 80040a4:	681b      	ldr	r3, [r3, #0]
 80040a6:	2202      	movs	r2, #2
 80040a8:	4013      	ands	r3, r2
 80040aa:	d0f1      	beq.n	8004090 <HAL_RCC_OscConfig+0x1b4>
          }
        }
                
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80040ac:	4b57      	ldr	r3, [pc, #348]	; (800420c <HAL_RCC_OscConfig+0x330>)
 80040ae:	681b      	ldr	r3, [r3, #0]
 80040b0:	22f8      	movs	r2, #248	; 0xf8
 80040b2:	4393      	bics	r3, r2
 80040b4:	0019      	movs	r1, r3
 80040b6:	687b      	ldr	r3, [r7, #4]
 80040b8:	691b      	ldr	r3, [r3, #16]
 80040ba:	00da      	lsls	r2, r3, #3
 80040bc:	4b53      	ldr	r3, [pc, #332]	; (800420c <HAL_RCC_OscConfig+0x330>)
 80040be:	430a      	orrs	r2, r1
 80040c0:	601a      	str	r2, [r3, #0]
 80040c2:	e018      	b.n	80040f6 <HAL_RCC_OscConfig+0x21a>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 80040c4:	4b51      	ldr	r3, [pc, #324]	; (800420c <HAL_RCC_OscConfig+0x330>)
 80040c6:	681a      	ldr	r2, [r3, #0]
 80040c8:	4b50      	ldr	r3, [pc, #320]	; (800420c <HAL_RCC_OscConfig+0x330>)
 80040ca:	2101      	movs	r1, #1
 80040cc:	438a      	bics	r2, r1
 80040ce:	601a      	str	r2, [r3, #0]
        
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80040d0:	f7ff fcd6 	bl	8003a80 <HAL_GetTick>
 80040d4:	0003      	movs	r3, r0
 80040d6:	61bb      	str	r3, [r7, #24]
        
        /* Wait till HSI is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80040d8:	e008      	b.n	80040ec <HAL_RCC_OscConfig+0x210>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 80040da:	f7ff fcd1 	bl	8003a80 <HAL_GetTick>
 80040de:	0002      	movs	r2, r0
 80040e0:	69bb      	ldr	r3, [r7, #24]
 80040e2:	1ad3      	subs	r3, r2, r3
 80040e4:	2b02      	cmp	r3, #2
 80040e6:	d901      	bls.n	80040ec <HAL_RCC_OscConfig+0x210>
          {
            return HAL_TIMEOUT;
 80040e8:	2303      	movs	r3, #3
 80040ea:	e204      	b.n	80044f6 <HAL_RCC_OscConfig+0x61a>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80040ec:	4b47      	ldr	r3, [pc, #284]	; (800420c <HAL_RCC_OscConfig+0x330>)
 80040ee:	681b      	ldr	r3, [r3, #0]
 80040f0:	2202      	movs	r2, #2
 80040f2:	4013      	ands	r3, r2
 80040f4:	d1f1      	bne.n	80040da <HAL_RCC_OscConfig+0x1fe>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 80040f6:	687b      	ldr	r3, [r7, #4]
 80040f8:	681b      	ldr	r3, [r3, #0]
 80040fa:	2208      	movs	r2, #8
 80040fc:	4013      	ands	r3, r2
 80040fe:	d036      	beq.n	800416e <HAL_RCC_OscConfig+0x292>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
    
    /* Check the LSI State */
    if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 8004100:	687b      	ldr	r3, [r7, #4]
 8004102:	69db      	ldr	r3, [r3, #28]
 8004104:	2b00      	cmp	r3, #0
 8004106:	d019      	beq.n	800413c <HAL_RCC_OscConfig+0x260>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 8004108:	4b40      	ldr	r3, [pc, #256]	; (800420c <HAL_RCC_OscConfig+0x330>)
 800410a:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800410c:	4b3f      	ldr	r3, [pc, #252]	; (800420c <HAL_RCC_OscConfig+0x330>)
 800410e:	2101      	movs	r1, #1
 8004110:	430a      	orrs	r2, r1
 8004112:	625a      	str	r2, [r3, #36]	; 0x24
      
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8004114:	f7ff fcb4 	bl	8003a80 <HAL_GetTick>
 8004118:	0003      	movs	r3, r0
 800411a:	61bb      	str	r3, [r7, #24]
      
      /* Wait till LSI is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800411c:	e008      	b.n	8004130 <HAL_RCC_OscConfig+0x254>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800411e:	f7ff fcaf 	bl	8003a80 <HAL_GetTick>
 8004122:	0002      	movs	r2, r0
 8004124:	69bb      	ldr	r3, [r7, #24]
 8004126:	1ad3      	subs	r3, r2, r3
 8004128:	2b02      	cmp	r3, #2
 800412a:	d901      	bls.n	8004130 <HAL_RCC_OscConfig+0x254>
        {
          return HAL_TIMEOUT;
 800412c:	2303      	movs	r3, #3
 800412e:	e1e2      	b.n	80044f6 <HAL_RCC_OscConfig+0x61a>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8004130:	4b36      	ldr	r3, [pc, #216]	; (800420c <HAL_RCC_OscConfig+0x330>)
 8004132:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004134:	2202      	movs	r2, #2
 8004136:	4013      	ands	r3, r2
 8004138:	d0f1      	beq.n	800411e <HAL_RCC_OscConfig+0x242>
 800413a:	e018      	b.n	800416e <HAL_RCC_OscConfig+0x292>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 800413c:	4b33      	ldr	r3, [pc, #204]	; (800420c <HAL_RCC_OscConfig+0x330>)
 800413e:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8004140:	4b32      	ldr	r3, [pc, #200]	; (800420c <HAL_RCC_OscConfig+0x330>)
 8004142:	2101      	movs	r1, #1
 8004144:	438a      	bics	r2, r1
 8004146:	625a      	str	r2, [r3, #36]	; 0x24
      
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8004148:	f7ff fc9a 	bl	8003a80 <HAL_GetTick>
 800414c:	0003      	movs	r3, r0
 800414e:	61bb      	str	r3, [r7, #24]
      
      /* Wait till LSI is disabled */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8004150:	e008      	b.n	8004164 <HAL_RCC_OscConfig+0x288>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8004152:	f7ff fc95 	bl	8003a80 <HAL_GetTick>
 8004156:	0002      	movs	r2, r0
 8004158:	69bb      	ldr	r3, [r7, #24]
 800415a:	1ad3      	subs	r3, r2, r3
 800415c:	2b02      	cmp	r3, #2
 800415e:	d901      	bls.n	8004164 <HAL_RCC_OscConfig+0x288>
        {
          return HAL_TIMEOUT;
 8004160:	2303      	movs	r3, #3
 8004162:	e1c8      	b.n	80044f6 <HAL_RCC_OscConfig+0x61a>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8004164:	4b29      	ldr	r3, [pc, #164]	; (800420c <HAL_RCC_OscConfig+0x330>)
 8004166:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004168:	2202      	movs	r2, #2
 800416a:	4013      	ands	r3, r2
 800416c:	d1f1      	bne.n	8004152 <HAL_RCC_OscConfig+0x276>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800416e:	687b      	ldr	r3, [r7, #4]
 8004170:	681b      	ldr	r3, [r3, #0]
 8004172:	2204      	movs	r2, #4
 8004174:	4013      	ands	r3, r2
 8004176:	d100      	bne.n	800417a <HAL_RCC_OscConfig+0x29e>
 8004178:	e0b6      	b.n	80042e8 <HAL_RCC_OscConfig+0x40c>
  {
    FlagStatus       pwrclkchanged = RESET;
 800417a:	231f      	movs	r3, #31
 800417c:	18fb      	adds	r3, r7, r3
 800417e:	2200      	movs	r2, #0
 8004180:	701a      	strb	r2, [r3, #0]
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8004182:	4b22      	ldr	r3, [pc, #136]	; (800420c <HAL_RCC_OscConfig+0x330>)
 8004184:	69da      	ldr	r2, [r3, #28]
 8004186:	2380      	movs	r3, #128	; 0x80
 8004188:	055b      	lsls	r3, r3, #21
 800418a:	4013      	ands	r3, r2
 800418c:	d111      	bne.n	80041b2 <HAL_RCC_OscConfig+0x2d6>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 800418e:	4b1f      	ldr	r3, [pc, #124]	; (800420c <HAL_RCC_OscConfig+0x330>)
 8004190:	69da      	ldr	r2, [r3, #28]
 8004192:	4b1e      	ldr	r3, [pc, #120]	; (800420c <HAL_RCC_OscConfig+0x330>)
 8004194:	2180      	movs	r1, #128	; 0x80
 8004196:	0549      	lsls	r1, r1, #21
 8004198:	430a      	orrs	r2, r1
 800419a:	61da      	str	r2, [r3, #28]
 800419c:	4b1b      	ldr	r3, [pc, #108]	; (800420c <HAL_RCC_OscConfig+0x330>)
 800419e:	69da      	ldr	r2, [r3, #28]
 80041a0:	2380      	movs	r3, #128	; 0x80
 80041a2:	055b      	lsls	r3, r3, #21
 80041a4:	4013      	ands	r3, r2
 80041a6:	60fb      	str	r3, [r7, #12]
 80041a8:	68fb      	ldr	r3, [r7, #12]
      pwrclkchanged = SET;
 80041aa:	231f      	movs	r3, #31
 80041ac:	18fb      	adds	r3, r7, r3
 80041ae:	2201      	movs	r2, #1
 80041b0:	701a      	strb	r2, [r3, #0]
    }
    
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80041b2:	4b19      	ldr	r3, [pc, #100]	; (8004218 <HAL_RCC_OscConfig+0x33c>)
 80041b4:	681a      	ldr	r2, [r3, #0]
 80041b6:	2380      	movs	r3, #128	; 0x80
 80041b8:	005b      	lsls	r3, r3, #1
 80041ba:	4013      	ands	r3, r2
 80041bc:	d11a      	bne.n	80041f4 <HAL_RCC_OscConfig+0x318>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 80041be:	4b16      	ldr	r3, [pc, #88]	; (8004218 <HAL_RCC_OscConfig+0x33c>)
 80041c0:	681a      	ldr	r2, [r3, #0]
 80041c2:	4b15      	ldr	r3, [pc, #84]	; (8004218 <HAL_RCC_OscConfig+0x33c>)
 80041c4:	2180      	movs	r1, #128	; 0x80
 80041c6:	0049      	lsls	r1, r1, #1
 80041c8:	430a      	orrs	r2, r1
 80041ca:	601a      	str	r2, [r3, #0]
      
      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 80041cc:	f7ff fc58 	bl	8003a80 <HAL_GetTick>
 80041d0:	0003      	movs	r3, r0
 80041d2:	61bb      	str	r3, [r7, #24]

      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80041d4:	e008      	b.n	80041e8 <HAL_RCC_OscConfig+0x30c>
      {
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 80041d6:	f7ff fc53 	bl	8003a80 <HAL_GetTick>
 80041da:	0002      	movs	r2, r0
 80041dc:	69bb      	ldr	r3, [r7, #24]
 80041de:	1ad3      	subs	r3, r2, r3
 80041e0:	2b64      	cmp	r3, #100	; 0x64
 80041e2:	d901      	bls.n	80041e8 <HAL_RCC_OscConfig+0x30c>
        {
          return HAL_TIMEOUT;
 80041e4:	2303      	movs	r3, #3
 80041e6:	e186      	b.n	80044f6 <HAL_RCC_OscConfig+0x61a>
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80041e8:	4b0b      	ldr	r3, [pc, #44]	; (8004218 <HAL_RCC_OscConfig+0x33c>)
 80041ea:	681a      	ldr	r2, [r3, #0]
 80041ec:	2380      	movs	r3, #128	; 0x80
 80041ee:	005b      	lsls	r3, r3, #1
 80041f0:	4013      	ands	r3, r2
 80041f2:	d0f0      	beq.n	80041d6 <HAL_RCC_OscConfig+0x2fa>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80041f4:	687b      	ldr	r3, [r7, #4]
 80041f6:	689b      	ldr	r3, [r3, #8]
 80041f8:	2b01      	cmp	r3, #1
 80041fa:	d10f      	bne.n	800421c <HAL_RCC_OscConfig+0x340>
 80041fc:	4b03      	ldr	r3, [pc, #12]	; (800420c <HAL_RCC_OscConfig+0x330>)
 80041fe:	6a1a      	ldr	r2, [r3, #32]
 8004200:	4b02      	ldr	r3, [pc, #8]	; (800420c <HAL_RCC_OscConfig+0x330>)
 8004202:	2101      	movs	r1, #1
 8004204:	430a      	orrs	r2, r1
 8004206:	621a      	str	r2, [r3, #32]
 8004208:	e036      	b.n	8004278 <HAL_RCC_OscConfig+0x39c>
 800420a:	46c0      	nop			; (mov r8, r8)
 800420c:	40021000 	.word	0x40021000
 8004210:	fffeffff 	.word	0xfffeffff
 8004214:	fffbffff 	.word	0xfffbffff
 8004218:	40007000 	.word	0x40007000
 800421c:	687b      	ldr	r3, [r7, #4]
 800421e:	689b      	ldr	r3, [r3, #8]
 8004220:	2b00      	cmp	r3, #0
 8004222:	d10c      	bne.n	800423e <HAL_RCC_OscConfig+0x362>
 8004224:	4bb6      	ldr	r3, [pc, #728]	; (8004500 <HAL_RCC_OscConfig+0x624>)
 8004226:	6a1a      	ldr	r2, [r3, #32]
 8004228:	4bb5      	ldr	r3, [pc, #724]	; (8004500 <HAL_RCC_OscConfig+0x624>)
 800422a:	2101      	movs	r1, #1
 800422c:	438a      	bics	r2, r1
 800422e:	621a      	str	r2, [r3, #32]
 8004230:	4bb3      	ldr	r3, [pc, #716]	; (8004500 <HAL_RCC_OscConfig+0x624>)
 8004232:	6a1a      	ldr	r2, [r3, #32]
 8004234:	4bb2      	ldr	r3, [pc, #712]	; (8004500 <HAL_RCC_OscConfig+0x624>)
 8004236:	2104      	movs	r1, #4
 8004238:	438a      	bics	r2, r1
 800423a:	621a      	str	r2, [r3, #32]
 800423c:	e01c      	b.n	8004278 <HAL_RCC_OscConfig+0x39c>
 800423e:	687b      	ldr	r3, [r7, #4]
 8004240:	689b      	ldr	r3, [r3, #8]
 8004242:	2b05      	cmp	r3, #5
 8004244:	d10c      	bne.n	8004260 <HAL_RCC_OscConfig+0x384>
 8004246:	4bae      	ldr	r3, [pc, #696]	; (8004500 <HAL_RCC_OscConfig+0x624>)
 8004248:	6a1a      	ldr	r2, [r3, #32]
 800424a:	4bad      	ldr	r3, [pc, #692]	; (8004500 <HAL_RCC_OscConfig+0x624>)
 800424c:	2104      	movs	r1, #4
 800424e:	430a      	orrs	r2, r1
 8004250:	621a      	str	r2, [r3, #32]
 8004252:	4bab      	ldr	r3, [pc, #684]	; (8004500 <HAL_RCC_OscConfig+0x624>)
 8004254:	6a1a      	ldr	r2, [r3, #32]
 8004256:	4baa      	ldr	r3, [pc, #680]	; (8004500 <HAL_RCC_OscConfig+0x624>)
 8004258:	2101      	movs	r1, #1
 800425a:	430a      	orrs	r2, r1
 800425c:	621a      	str	r2, [r3, #32]
 800425e:	e00b      	b.n	8004278 <HAL_RCC_OscConfig+0x39c>
 8004260:	4ba7      	ldr	r3, [pc, #668]	; (8004500 <HAL_RCC_OscConfig+0x624>)
 8004262:	6a1a      	ldr	r2, [r3, #32]
 8004264:	4ba6      	ldr	r3, [pc, #664]	; (8004500 <HAL_RCC_OscConfig+0x624>)
 8004266:	2101      	movs	r1, #1
 8004268:	438a      	bics	r2, r1
 800426a:	621a      	str	r2, [r3, #32]
 800426c:	4ba4      	ldr	r3, [pc, #656]	; (8004500 <HAL_RCC_OscConfig+0x624>)
 800426e:	6a1a      	ldr	r2, [r3, #32]
 8004270:	4ba3      	ldr	r3, [pc, #652]	; (8004500 <HAL_RCC_OscConfig+0x624>)
 8004272:	2104      	movs	r1, #4
 8004274:	438a      	bics	r2, r1
 8004276:	621a      	str	r2, [r3, #32]
    /* Check the LSE State */
    if(RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 8004278:	687b      	ldr	r3, [r7, #4]
 800427a:	689b      	ldr	r3, [r3, #8]
 800427c:	2b00      	cmp	r3, #0
 800427e:	d014      	beq.n	80042aa <HAL_RCC_OscConfig+0x3ce>
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8004280:	f7ff fbfe 	bl	8003a80 <HAL_GetTick>
 8004284:	0003      	movs	r3, r0
 8004286:	61bb      	str	r3, [r7, #24]
      
      /* Wait till LSE is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8004288:	e009      	b.n	800429e <HAL_RCC_OscConfig+0x3c2>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800428a:	f7ff fbf9 	bl	8003a80 <HAL_GetTick>
 800428e:	0002      	movs	r2, r0
 8004290:	69bb      	ldr	r3, [r7, #24]
 8004292:	1ad3      	subs	r3, r2, r3
 8004294:	4a9b      	ldr	r2, [pc, #620]	; (8004504 <HAL_RCC_OscConfig+0x628>)
 8004296:	4293      	cmp	r3, r2
 8004298:	d901      	bls.n	800429e <HAL_RCC_OscConfig+0x3c2>
        {
          return HAL_TIMEOUT;
 800429a:	2303      	movs	r3, #3
 800429c:	e12b      	b.n	80044f6 <HAL_RCC_OscConfig+0x61a>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800429e:	4b98      	ldr	r3, [pc, #608]	; (8004500 <HAL_RCC_OscConfig+0x624>)
 80042a0:	6a1b      	ldr	r3, [r3, #32]
 80042a2:	2202      	movs	r2, #2
 80042a4:	4013      	ands	r3, r2
 80042a6:	d0f0      	beq.n	800428a <HAL_RCC_OscConfig+0x3ae>
 80042a8:	e013      	b.n	80042d2 <HAL_RCC_OscConfig+0x3f6>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 80042aa:	f7ff fbe9 	bl	8003a80 <HAL_GetTick>
 80042ae:	0003      	movs	r3, r0
 80042b0:	61bb      	str	r3, [r7, #24]
      
      /* Wait till LSE is disabled */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 80042b2:	e009      	b.n	80042c8 <HAL_RCC_OscConfig+0x3ec>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80042b4:	f7ff fbe4 	bl	8003a80 <HAL_GetTick>
 80042b8:	0002      	movs	r2, r0
 80042ba:	69bb      	ldr	r3, [r7, #24]
 80042bc:	1ad3      	subs	r3, r2, r3
 80042be:	4a91      	ldr	r2, [pc, #580]	; (8004504 <HAL_RCC_OscConfig+0x628>)
 80042c0:	4293      	cmp	r3, r2
 80042c2:	d901      	bls.n	80042c8 <HAL_RCC_OscConfig+0x3ec>
        {
          return HAL_TIMEOUT;
 80042c4:	2303      	movs	r3, #3
 80042c6:	e116      	b.n	80044f6 <HAL_RCC_OscConfig+0x61a>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 80042c8:	4b8d      	ldr	r3, [pc, #564]	; (8004500 <HAL_RCC_OscConfig+0x624>)
 80042ca:	6a1b      	ldr	r3, [r3, #32]
 80042cc:	2202      	movs	r2, #2
 80042ce:	4013      	ands	r3, r2
 80042d0:	d1f0      	bne.n	80042b4 <HAL_RCC_OscConfig+0x3d8>
        }
      }
    }

    /* Require to disable power clock if necessary */
    if(pwrclkchanged == SET)
 80042d2:	231f      	movs	r3, #31
 80042d4:	18fb      	adds	r3, r7, r3
 80042d6:	781b      	ldrb	r3, [r3, #0]
 80042d8:	2b01      	cmp	r3, #1
 80042da:	d105      	bne.n	80042e8 <HAL_RCC_OscConfig+0x40c>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 80042dc:	4b88      	ldr	r3, [pc, #544]	; (8004500 <HAL_RCC_OscConfig+0x624>)
 80042de:	69da      	ldr	r2, [r3, #28]
 80042e0:	4b87      	ldr	r3, [pc, #540]	; (8004500 <HAL_RCC_OscConfig+0x624>)
 80042e2:	4989      	ldr	r1, [pc, #548]	; (8004508 <HAL_RCC_OscConfig+0x62c>)
 80042e4:	400a      	ands	r2, r1
 80042e6:	61da      	str	r2, [r3, #28]
    }
  }

  /*----------------------------- HSI14 Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI14) == RCC_OSCILLATORTYPE_HSI14)
 80042e8:	687b      	ldr	r3, [r7, #4]
 80042ea:	681b      	ldr	r3, [r3, #0]
 80042ec:	2210      	movs	r2, #16
 80042ee:	4013      	ands	r3, r2
 80042f0:	d063      	beq.n	80043ba <HAL_RCC_OscConfig+0x4de>
    /* Check the parameters */
    assert_param(IS_RCC_HSI14(RCC_OscInitStruct->HSI14State));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSI14CalibrationValue));

    /* Check the HSI14 State */
    if(RCC_OscInitStruct->HSI14State == RCC_HSI14_ON)
 80042f2:	687b      	ldr	r3, [r7, #4]
 80042f4:	695b      	ldr	r3, [r3, #20]
 80042f6:	2b01      	cmp	r3, #1
 80042f8:	d12a      	bne.n	8004350 <HAL_RCC_OscConfig+0x474>
    {
      /* Disable ADC control of the Internal High Speed oscillator HSI14 */
      __HAL_RCC_HSI14ADC_DISABLE();
 80042fa:	4b81      	ldr	r3, [pc, #516]	; (8004500 <HAL_RCC_OscConfig+0x624>)
 80042fc:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80042fe:	4b80      	ldr	r3, [pc, #512]	; (8004500 <HAL_RCC_OscConfig+0x624>)
 8004300:	2104      	movs	r1, #4
 8004302:	430a      	orrs	r2, r1
 8004304:	635a      	str	r2, [r3, #52]	; 0x34

      /* Enable the Internal High Speed oscillator (HSI). */
      __HAL_RCC_HSI14_ENABLE();
 8004306:	4b7e      	ldr	r3, [pc, #504]	; (8004500 <HAL_RCC_OscConfig+0x624>)
 8004308:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800430a:	4b7d      	ldr	r3, [pc, #500]	; (8004500 <HAL_RCC_OscConfig+0x624>)
 800430c:	2101      	movs	r1, #1
 800430e:	430a      	orrs	r2, r1
 8004310:	635a      	str	r2, [r3, #52]	; 0x34

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8004312:	f7ff fbb5 	bl	8003a80 <HAL_GetTick>
 8004316:	0003      	movs	r3, r0
 8004318:	61bb      	str	r3, [r7, #24]
      
      /* Wait till HSI is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) == RESET)
 800431a:	e008      	b.n	800432e <HAL_RCC_OscConfig+0x452>
      {
        if((HAL_GetTick() - tickstart) > HSI14_TIMEOUT_VALUE)
 800431c:	f7ff fbb0 	bl	8003a80 <HAL_GetTick>
 8004320:	0002      	movs	r2, r0
 8004322:	69bb      	ldr	r3, [r7, #24]
 8004324:	1ad3      	subs	r3, r2, r3
 8004326:	2b02      	cmp	r3, #2
 8004328:	d901      	bls.n	800432e <HAL_RCC_OscConfig+0x452>
        {
          return HAL_TIMEOUT;
 800432a:	2303      	movs	r3, #3
 800432c:	e0e3      	b.n	80044f6 <HAL_RCC_OscConfig+0x61a>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) == RESET)
 800432e:	4b74      	ldr	r3, [pc, #464]	; (8004500 <HAL_RCC_OscConfig+0x624>)
 8004330:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8004332:	2202      	movs	r2, #2
 8004334:	4013      	ands	r3, r2
 8004336:	d0f1      	beq.n	800431c <HAL_RCC_OscConfig+0x440>
        }      
      } 

      /* Adjusts the Internal High Speed oscillator 14Mhz (HSI14) calibration value. */
      __HAL_RCC_HSI14_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSI14CalibrationValue);
 8004338:	4b71      	ldr	r3, [pc, #452]	; (8004500 <HAL_RCC_OscConfig+0x624>)
 800433a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800433c:	22f8      	movs	r2, #248	; 0xf8
 800433e:	4393      	bics	r3, r2
 8004340:	0019      	movs	r1, r3
 8004342:	687b      	ldr	r3, [r7, #4]
 8004344:	699b      	ldr	r3, [r3, #24]
 8004346:	00da      	lsls	r2, r3, #3
 8004348:	4b6d      	ldr	r3, [pc, #436]	; (8004500 <HAL_RCC_OscConfig+0x624>)
 800434a:	430a      	orrs	r2, r1
 800434c:	635a      	str	r2, [r3, #52]	; 0x34
 800434e:	e034      	b.n	80043ba <HAL_RCC_OscConfig+0x4de>
    }
    else if(RCC_OscInitStruct->HSI14State == RCC_HSI14_ADC_CONTROL)
 8004350:	687b      	ldr	r3, [r7, #4]
 8004352:	695b      	ldr	r3, [r3, #20]
 8004354:	3305      	adds	r3, #5
 8004356:	d111      	bne.n	800437c <HAL_RCC_OscConfig+0x4a0>
    {
      /* Enable ADC control of the Internal High Speed oscillator HSI14 */
      __HAL_RCC_HSI14ADC_ENABLE();
 8004358:	4b69      	ldr	r3, [pc, #420]	; (8004500 <HAL_RCC_OscConfig+0x624>)
 800435a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800435c:	4b68      	ldr	r3, [pc, #416]	; (8004500 <HAL_RCC_OscConfig+0x624>)
 800435e:	2104      	movs	r1, #4
 8004360:	438a      	bics	r2, r1
 8004362:	635a      	str	r2, [r3, #52]	; 0x34

      /* Adjusts the Internal High Speed oscillator 14Mhz (HSI14) calibration value. */
      __HAL_RCC_HSI14_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSI14CalibrationValue);
 8004364:	4b66      	ldr	r3, [pc, #408]	; (8004500 <HAL_RCC_OscConfig+0x624>)
 8004366:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8004368:	22f8      	movs	r2, #248	; 0xf8
 800436a:	4393      	bics	r3, r2
 800436c:	0019      	movs	r1, r3
 800436e:	687b      	ldr	r3, [r7, #4]
 8004370:	699b      	ldr	r3, [r3, #24]
 8004372:	00da      	lsls	r2, r3, #3
 8004374:	4b62      	ldr	r3, [pc, #392]	; (8004500 <HAL_RCC_OscConfig+0x624>)
 8004376:	430a      	orrs	r2, r1
 8004378:	635a      	str	r2, [r3, #52]	; 0x34
 800437a:	e01e      	b.n	80043ba <HAL_RCC_OscConfig+0x4de>
    }
    else
    {
      /* Disable ADC control of the Internal High Speed oscillator HSI14 */
      __HAL_RCC_HSI14ADC_DISABLE();
 800437c:	4b60      	ldr	r3, [pc, #384]	; (8004500 <HAL_RCC_OscConfig+0x624>)
 800437e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8004380:	4b5f      	ldr	r3, [pc, #380]	; (8004500 <HAL_RCC_OscConfig+0x624>)
 8004382:	2104      	movs	r1, #4
 8004384:	430a      	orrs	r2, r1
 8004386:	635a      	str	r2, [r3, #52]	; 0x34

      /* Disable the Internal High Speed oscillator (HSI). */
      __HAL_RCC_HSI14_DISABLE();
 8004388:	4b5d      	ldr	r3, [pc, #372]	; (8004500 <HAL_RCC_OscConfig+0x624>)
 800438a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800438c:	4b5c      	ldr	r3, [pc, #368]	; (8004500 <HAL_RCC_OscConfig+0x624>)
 800438e:	2101      	movs	r1, #1
 8004390:	438a      	bics	r2, r1
 8004392:	635a      	str	r2, [r3, #52]	; 0x34

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8004394:	f7ff fb74 	bl	8003a80 <HAL_GetTick>
 8004398:	0003      	movs	r3, r0
 800439a:	61bb      	str	r3, [r7, #24]
      
      /* Wait till HSI is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) != RESET)
 800439c:	e008      	b.n	80043b0 <HAL_RCC_OscConfig+0x4d4>
      {
        if((HAL_GetTick() - tickstart) > HSI14_TIMEOUT_VALUE)
 800439e:	f7ff fb6f 	bl	8003a80 <HAL_GetTick>
 80043a2:	0002      	movs	r2, r0
 80043a4:	69bb      	ldr	r3, [r7, #24]
 80043a6:	1ad3      	subs	r3, r2, r3
 80043a8:	2b02      	cmp	r3, #2
 80043aa:	d901      	bls.n	80043b0 <HAL_RCC_OscConfig+0x4d4>
        {
          return HAL_TIMEOUT;
 80043ac:	2303      	movs	r3, #3
 80043ae:	e0a2      	b.n	80044f6 <HAL_RCC_OscConfig+0x61a>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) != RESET)
 80043b0:	4b53      	ldr	r3, [pc, #332]	; (8004500 <HAL_RCC_OscConfig+0x624>)
 80043b2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80043b4:	2202      	movs	r2, #2
 80043b6:	4013      	ands	r3, r2
 80043b8:	d1f1      	bne.n	800439e <HAL_RCC_OscConfig+0x4c2>
#endif /* RCC_HSI48_SUPPORT */
       
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 80043ba:	687b      	ldr	r3, [r7, #4]
 80043bc:	6a1b      	ldr	r3, [r3, #32]
 80043be:	2b00      	cmp	r3, #0
 80043c0:	d100      	bne.n	80043c4 <HAL_RCC_OscConfig+0x4e8>
 80043c2:	e097      	b.n	80044f4 <HAL_RCC_OscConfig+0x618>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 80043c4:	4b4e      	ldr	r3, [pc, #312]	; (8004500 <HAL_RCC_OscConfig+0x624>)
 80043c6:	685b      	ldr	r3, [r3, #4]
 80043c8:	220c      	movs	r2, #12
 80043ca:	4013      	ands	r3, r2
 80043cc:	2b08      	cmp	r3, #8
 80043ce:	d100      	bne.n	80043d2 <HAL_RCC_OscConfig+0x4f6>
 80043d0:	e06b      	b.n	80044aa <HAL_RCC_OscConfig+0x5ce>
    { 
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80043d2:	687b      	ldr	r3, [r7, #4]
 80043d4:	6a1b      	ldr	r3, [r3, #32]
 80043d6:	2b02      	cmp	r3, #2
 80043d8:	d14c      	bne.n	8004474 <HAL_RCC_OscConfig+0x598>
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
        assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));
        assert_param(IS_RCC_PREDIV(RCC_OscInitStruct->PLL.PREDIV));
  
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 80043da:	4b49      	ldr	r3, [pc, #292]	; (8004500 <HAL_RCC_OscConfig+0x624>)
 80043dc:	681a      	ldr	r2, [r3, #0]
 80043de:	4b48      	ldr	r3, [pc, #288]	; (8004500 <HAL_RCC_OscConfig+0x624>)
 80043e0:	494a      	ldr	r1, [pc, #296]	; (800450c <HAL_RCC_OscConfig+0x630>)
 80043e2:	400a      	ands	r2, r1
 80043e4:	601a      	str	r2, [r3, #0]
        
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80043e6:	f7ff fb4b 	bl	8003a80 <HAL_GetTick>
 80043ea:	0003      	movs	r3, r0
 80043ec:	61bb      	str	r3, [r7, #24]
        
        /* Wait till PLL is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 80043ee:	e008      	b.n	8004402 <HAL_RCC_OscConfig+0x526>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80043f0:	f7ff fb46 	bl	8003a80 <HAL_GetTick>
 80043f4:	0002      	movs	r2, r0
 80043f6:	69bb      	ldr	r3, [r7, #24]
 80043f8:	1ad3      	subs	r3, r2, r3
 80043fa:	2b02      	cmp	r3, #2
 80043fc:	d901      	bls.n	8004402 <HAL_RCC_OscConfig+0x526>
          {
            return HAL_TIMEOUT;
 80043fe:	2303      	movs	r3, #3
 8004400:	e079      	b.n	80044f6 <HAL_RCC_OscConfig+0x61a>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8004402:	4b3f      	ldr	r3, [pc, #252]	; (8004500 <HAL_RCC_OscConfig+0x624>)
 8004404:	681a      	ldr	r2, [r3, #0]
 8004406:	2380      	movs	r3, #128	; 0x80
 8004408:	049b      	lsls	r3, r3, #18
 800440a:	4013      	ands	r3, r2
 800440c:	d1f0      	bne.n	80043f0 <HAL_RCC_OscConfig+0x514>
          }
        }

        /* Configure the main PLL clock source, predivider and multiplication factor. */
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 800440e:	4b3c      	ldr	r3, [pc, #240]	; (8004500 <HAL_RCC_OscConfig+0x624>)
 8004410:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004412:	220f      	movs	r2, #15
 8004414:	4393      	bics	r3, r2
 8004416:	0019      	movs	r1, r3
 8004418:	687b      	ldr	r3, [r7, #4]
 800441a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800441c:	4b38      	ldr	r3, [pc, #224]	; (8004500 <HAL_RCC_OscConfig+0x624>)
 800441e:	430a      	orrs	r2, r1
 8004420:	62da      	str	r2, [r3, #44]	; 0x2c
 8004422:	4b37      	ldr	r3, [pc, #220]	; (8004500 <HAL_RCC_OscConfig+0x624>)
 8004424:	685b      	ldr	r3, [r3, #4]
 8004426:	4a3a      	ldr	r2, [pc, #232]	; (8004510 <HAL_RCC_OscConfig+0x634>)
 8004428:	4013      	ands	r3, r2
 800442a:	0019      	movs	r1, r3
 800442c:	687b      	ldr	r3, [r7, #4]
 800442e:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8004430:	687b      	ldr	r3, [r7, #4]
 8004432:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004434:	431a      	orrs	r2, r3
 8004436:	4b32      	ldr	r3, [pc, #200]	; (8004500 <HAL_RCC_OscConfig+0x624>)
 8004438:	430a      	orrs	r2, r1
 800443a:	605a      	str	r2, [r3, #4]
                             RCC_OscInitStruct->PLL.PREDIV,
                             RCC_OscInitStruct->PLL.PLLMUL);
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 800443c:	4b30      	ldr	r3, [pc, #192]	; (8004500 <HAL_RCC_OscConfig+0x624>)
 800443e:	681a      	ldr	r2, [r3, #0]
 8004440:	4b2f      	ldr	r3, [pc, #188]	; (8004500 <HAL_RCC_OscConfig+0x624>)
 8004442:	2180      	movs	r1, #128	; 0x80
 8004444:	0449      	lsls	r1, r1, #17
 8004446:	430a      	orrs	r2, r1
 8004448:	601a      	str	r2, [r3, #0]
        
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800444a:	f7ff fb19 	bl	8003a80 <HAL_GetTick>
 800444e:	0003      	movs	r3, r0
 8004450:	61bb      	str	r3, [r7, #24]
        
        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 8004452:	e008      	b.n	8004466 <HAL_RCC_OscConfig+0x58a>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8004454:	f7ff fb14 	bl	8003a80 <HAL_GetTick>
 8004458:	0002      	movs	r2, r0
 800445a:	69bb      	ldr	r3, [r7, #24]
 800445c:	1ad3      	subs	r3, r2, r3
 800445e:	2b02      	cmp	r3, #2
 8004460:	d901      	bls.n	8004466 <HAL_RCC_OscConfig+0x58a>
          {
            return HAL_TIMEOUT;
 8004462:	2303      	movs	r3, #3
 8004464:	e047      	b.n	80044f6 <HAL_RCC_OscConfig+0x61a>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 8004466:	4b26      	ldr	r3, [pc, #152]	; (8004500 <HAL_RCC_OscConfig+0x624>)
 8004468:	681a      	ldr	r2, [r3, #0]
 800446a:	2380      	movs	r3, #128	; 0x80
 800446c:	049b      	lsls	r3, r3, #18
 800446e:	4013      	ands	r3, r2
 8004470:	d0f0      	beq.n	8004454 <HAL_RCC_OscConfig+0x578>
 8004472:	e03f      	b.n	80044f4 <HAL_RCC_OscConfig+0x618>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8004474:	4b22      	ldr	r3, [pc, #136]	; (8004500 <HAL_RCC_OscConfig+0x624>)
 8004476:	681a      	ldr	r2, [r3, #0]
 8004478:	4b21      	ldr	r3, [pc, #132]	; (8004500 <HAL_RCC_OscConfig+0x624>)
 800447a:	4924      	ldr	r1, [pc, #144]	; (800450c <HAL_RCC_OscConfig+0x630>)
 800447c:	400a      	ands	r2, r1
 800447e:	601a      	str	r2, [r3, #0]
 
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8004480:	f7ff fafe 	bl	8003a80 <HAL_GetTick>
 8004484:	0003      	movs	r3, r0
 8004486:	61bb      	str	r3, [r7, #24]
        
        /* Wait till PLL is disabled */  
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8004488:	e008      	b.n	800449c <HAL_RCC_OscConfig+0x5c0>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800448a:	f7ff faf9 	bl	8003a80 <HAL_GetTick>
 800448e:	0002      	movs	r2, r0
 8004490:	69bb      	ldr	r3, [r7, #24]
 8004492:	1ad3      	subs	r3, r2, r3
 8004494:	2b02      	cmp	r3, #2
 8004496:	d901      	bls.n	800449c <HAL_RCC_OscConfig+0x5c0>
          {
            return HAL_TIMEOUT;
 8004498:	2303      	movs	r3, #3
 800449a:	e02c      	b.n	80044f6 <HAL_RCC_OscConfig+0x61a>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 800449c:	4b18      	ldr	r3, [pc, #96]	; (8004500 <HAL_RCC_OscConfig+0x624>)
 800449e:	681a      	ldr	r2, [r3, #0]
 80044a0:	2380      	movs	r3, #128	; 0x80
 80044a2:	049b      	lsls	r3, r3, #18
 80044a4:	4013      	ands	r3, r2
 80044a6:	d1f0      	bne.n	800448a <HAL_RCC_OscConfig+0x5ae>
 80044a8:	e024      	b.n	80044f4 <HAL_RCC_OscConfig+0x618>
      }
    }
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 80044aa:	687b      	ldr	r3, [r7, #4]
 80044ac:	6a1b      	ldr	r3, [r3, #32]
 80044ae:	2b01      	cmp	r3, #1
 80044b0:	d101      	bne.n	80044b6 <HAL_RCC_OscConfig+0x5da>
      {
        return HAL_ERROR;
 80044b2:	2301      	movs	r3, #1
 80044b4:	e01f      	b.n	80044f6 <HAL_RCC_OscConfig+0x61a>
      }
      else
      {
        /* Do not return HAL_ERROR if request repeats the current configuration */
        pll_config  = RCC->CFGR;
 80044b6:	4b12      	ldr	r3, [pc, #72]	; (8004500 <HAL_RCC_OscConfig+0x624>)
 80044b8:	685b      	ldr	r3, [r3, #4]
 80044ba:	617b      	str	r3, [r7, #20]
        pll_config2 = RCC->CFGR2;
 80044bc:	4b10      	ldr	r3, [pc, #64]	; (8004500 <HAL_RCC_OscConfig+0x624>)
 80044be:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80044c0:	613b      	str	r3, [r7, #16]
        if((READ_BIT(pll_config,  RCC_CFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 80044c2:	697a      	ldr	r2, [r7, #20]
 80044c4:	2380      	movs	r3, #128	; 0x80
 80044c6:	025b      	lsls	r3, r3, #9
 80044c8:	401a      	ands	r2, r3
 80044ca:	687b      	ldr	r3, [r7, #4]
 80044cc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80044ce:	429a      	cmp	r2, r3
 80044d0:	d10e      	bne.n	80044f0 <HAL_RCC_OscConfig+0x614>
           (READ_BIT(pll_config2, RCC_CFGR2_PREDIV) != RCC_OscInitStruct->PLL.PREDIV)    ||
 80044d2:	693b      	ldr	r3, [r7, #16]
 80044d4:	220f      	movs	r2, #15
 80044d6:	401a      	ands	r2, r3
 80044d8:	687b      	ldr	r3, [r7, #4]
 80044da:	6adb      	ldr	r3, [r3, #44]	; 0x2c
        if((READ_BIT(pll_config,  RCC_CFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 80044dc:	429a      	cmp	r2, r3
 80044de:	d107      	bne.n	80044f0 <HAL_RCC_OscConfig+0x614>
           (READ_BIT(pll_config,  RCC_CFGR_PLLMUL)  != RCC_OscInitStruct->PLL.PLLMUL))
 80044e0:	697a      	ldr	r2, [r7, #20]
 80044e2:	23f0      	movs	r3, #240	; 0xf0
 80044e4:	039b      	lsls	r3, r3, #14
 80044e6:	401a      	ands	r2, r3
 80044e8:	687b      	ldr	r3, [r7, #4]
 80044ea:	6a9b      	ldr	r3, [r3, #40]	; 0x28
           (READ_BIT(pll_config2, RCC_CFGR2_PREDIV) != RCC_OscInitStruct->PLL.PREDIV)    ||
 80044ec:	429a      	cmp	r2, r3
 80044ee:	d001      	beq.n	80044f4 <HAL_RCC_OscConfig+0x618>
        {
          return HAL_ERROR;
 80044f0:	2301      	movs	r3, #1
 80044f2:	e000      	b.n	80044f6 <HAL_RCC_OscConfig+0x61a>
        }
      }
    }
  }

  return HAL_OK;
 80044f4:	2300      	movs	r3, #0
}
 80044f6:	0018      	movs	r0, r3
 80044f8:	46bd      	mov	sp, r7
 80044fa:	b008      	add	sp, #32
 80044fc:	bd80      	pop	{r7, pc}
 80044fe:	46c0      	nop			; (mov r8, r8)
 8004500:	40021000 	.word	0x40021000
 8004504:	00001388 	.word	0x00001388
 8004508:	efffffff 	.word	0xefffffff
 800450c:	feffffff 	.word	0xfeffffff
 8004510:	ffc2ffff 	.word	0xffc2ffff

08004514 <HAL_RCC_ClockConfig>:
  *         You can use @ref HAL_RCC_GetClockConfig() function to know which clock is
  *         currently used as system clock source.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 8004514:	b580      	push	{r7, lr}
 8004516:	b084      	sub	sp, #16
 8004518:	af00      	add	r7, sp, #0
 800451a:	6078      	str	r0, [r7, #4]
 800451c:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;

  /* Check Null pointer */
  if(RCC_ClkInitStruct == NULL)
 800451e:	687b      	ldr	r3, [r7, #4]
 8004520:	2b00      	cmp	r3, #0
 8004522:	d101      	bne.n	8004528 <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 8004524:	2301      	movs	r3, #1
 8004526:	e0b3      	b.n	8004690 <HAL_RCC_ClockConfig+0x17c>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY) 
  must be correctly programmed according to the frequency of the CPU clock 
    (HCLK) of the device. */

  /* Increasing the number of wait states because of higher CPU frequency */
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8004528:	4b5b      	ldr	r3, [pc, #364]	; (8004698 <HAL_RCC_ClockConfig+0x184>)
 800452a:	681b      	ldr	r3, [r3, #0]
 800452c:	2201      	movs	r2, #1
 800452e:	4013      	ands	r3, r2
 8004530:	683a      	ldr	r2, [r7, #0]
 8004532:	429a      	cmp	r2, r3
 8004534:	d911      	bls.n	800455a <HAL_RCC_ClockConfig+0x46>
  {    
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8004536:	4b58      	ldr	r3, [pc, #352]	; (8004698 <HAL_RCC_ClockConfig+0x184>)
 8004538:	681b      	ldr	r3, [r3, #0]
 800453a:	2201      	movs	r2, #1
 800453c:	4393      	bics	r3, r2
 800453e:	0019      	movs	r1, r3
 8004540:	4b55      	ldr	r3, [pc, #340]	; (8004698 <HAL_RCC_ClockConfig+0x184>)
 8004542:	683a      	ldr	r2, [r7, #0]
 8004544:	430a      	orrs	r2, r1
 8004546:	601a      	str	r2, [r3, #0]
    
    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8004548:	4b53      	ldr	r3, [pc, #332]	; (8004698 <HAL_RCC_ClockConfig+0x184>)
 800454a:	681b      	ldr	r3, [r3, #0]
 800454c:	2201      	movs	r2, #1
 800454e:	4013      	ands	r3, r2
 8004550:	683a      	ldr	r2, [r7, #0]
 8004552:	429a      	cmp	r2, r3
 8004554:	d001      	beq.n	800455a <HAL_RCC_ClockConfig+0x46>
    {
      return HAL_ERROR;
 8004556:	2301      	movs	r3, #1
 8004558:	e09a      	b.n	8004690 <HAL_RCC_ClockConfig+0x17c>
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800455a:	687b      	ldr	r3, [r7, #4]
 800455c:	681b      	ldr	r3, [r3, #0]
 800455e:	2202      	movs	r2, #2
 8004560:	4013      	ands	r3, r2
 8004562:	d015      	beq.n	8004590 <HAL_RCC_ClockConfig+0x7c>
  {
    /* Set the highest APB divider in order to ensure that we do not go through
       a non-spec phase whatever we decrease or increase HCLK. */
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8004564:	687b      	ldr	r3, [r7, #4]
 8004566:	681b      	ldr	r3, [r3, #0]
 8004568:	2204      	movs	r2, #4
 800456a:	4013      	ands	r3, r2
 800456c:	d006      	beq.n	800457c <HAL_RCC_ClockConfig+0x68>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_HCLK_DIV16);
 800456e:	4b4b      	ldr	r3, [pc, #300]	; (800469c <HAL_RCC_ClockConfig+0x188>)
 8004570:	685a      	ldr	r2, [r3, #4]
 8004572:	4b4a      	ldr	r3, [pc, #296]	; (800469c <HAL_RCC_ClockConfig+0x188>)
 8004574:	21e0      	movs	r1, #224	; 0xe0
 8004576:	00c9      	lsls	r1, r1, #3
 8004578:	430a      	orrs	r2, r1
 800457a:	605a      	str	r2, [r3, #4]
    }

    /* Set the new HCLK clock divider */
    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800457c:	4b47      	ldr	r3, [pc, #284]	; (800469c <HAL_RCC_ClockConfig+0x188>)
 800457e:	685b      	ldr	r3, [r3, #4]
 8004580:	22f0      	movs	r2, #240	; 0xf0
 8004582:	4393      	bics	r3, r2
 8004584:	0019      	movs	r1, r3
 8004586:	687b      	ldr	r3, [r7, #4]
 8004588:	689a      	ldr	r2, [r3, #8]
 800458a:	4b44      	ldr	r3, [pc, #272]	; (800469c <HAL_RCC_ClockConfig+0x188>)
 800458c:	430a      	orrs	r2, r1
 800458e:	605a      	str	r2, [r3, #4]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/ 
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8004590:	687b      	ldr	r3, [r7, #4]
 8004592:	681b      	ldr	r3, [r3, #0]
 8004594:	2201      	movs	r2, #1
 8004596:	4013      	ands	r3, r2
 8004598:	d040      	beq.n	800461c <HAL_RCC_ClockConfig+0x108>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
    
    /* HSE is selected as System Clock Source */
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800459a:	687b      	ldr	r3, [r7, #4]
 800459c:	685b      	ldr	r3, [r3, #4]
 800459e:	2b01      	cmp	r3, #1
 80045a0:	d107      	bne.n	80045b2 <HAL_RCC_ClockConfig+0x9e>
    {
      /* Check the HSE ready flag */  
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80045a2:	4b3e      	ldr	r3, [pc, #248]	; (800469c <HAL_RCC_ClockConfig+0x188>)
 80045a4:	681a      	ldr	r2, [r3, #0]
 80045a6:	2380      	movs	r3, #128	; 0x80
 80045a8:	029b      	lsls	r3, r3, #10
 80045aa:	4013      	ands	r3, r2
 80045ac:	d114      	bne.n	80045d8 <HAL_RCC_ClockConfig+0xc4>
      {
        return HAL_ERROR;
 80045ae:	2301      	movs	r3, #1
 80045b0:	e06e      	b.n	8004690 <HAL_RCC_ClockConfig+0x17c>
      }
    }
    /* PLL is selected as System Clock Source */
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 80045b2:	687b      	ldr	r3, [r7, #4]
 80045b4:	685b      	ldr	r3, [r3, #4]
 80045b6:	2b02      	cmp	r3, #2
 80045b8:	d107      	bne.n	80045ca <HAL_RCC_ClockConfig+0xb6>
    {
      /* Check the PLL ready flag */  
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80045ba:	4b38      	ldr	r3, [pc, #224]	; (800469c <HAL_RCC_ClockConfig+0x188>)
 80045bc:	681a      	ldr	r2, [r3, #0]
 80045be:	2380      	movs	r3, #128	; 0x80
 80045c0:	049b      	lsls	r3, r3, #18
 80045c2:	4013      	ands	r3, r2
 80045c4:	d108      	bne.n	80045d8 <HAL_RCC_ClockConfig+0xc4>
      {
        return HAL_ERROR;
 80045c6:	2301      	movs	r3, #1
 80045c8:	e062      	b.n	8004690 <HAL_RCC_ClockConfig+0x17c>
#endif /* RCC_CFGR_SWS_HSI48 */
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */  
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80045ca:	4b34      	ldr	r3, [pc, #208]	; (800469c <HAL_RCC_ClockConfig+0x188>)
 80045cc:	681b      	ldr	r3, [r3, #0]
 80045ce:	2202      	movs	r2, #2
 80045d0:	4013      	ands	r3, r2
 80045d2:	d101      	bne.n	80045d8 <HAL_RCC_ClockConfig+0xc4>
      {
        return HAL_ERROR;
 80045d4:	2301      	movs	r3, #1
 80045d6:	e05b      	b.n	8004690 <HAL_RCC_ClockConfig+0x17c>
      }
    }
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 80045d8:	4b30      	ldr	r3, [pc, #192]	; (800469c <HAL_RCC_ClockConfig+0x188>)
 80045da:	685b      	ldr	r3, [r3, #4]
 80045dc:	2203      	movs	r2, #3
 80045de:	4393      	bics	r3, r2
 80045e0:	0019      	movs	r1, r3
 80045e2:	687b      	ldr	r3, [r7, #4]
 80045e4:	685a      	ldr	r2, [r3, #4]
 80045e6:	4b2d      	ldr	r3, [pc, #180]	; (800469c <HAL_RCC_ClockConfig+0x188>)
 80045e8:	430a      	orrs	r2, r1
 80045ea:	605a      	str	r2, [r3, #4]

    /* Get Start Tick */
    tickstart = HAL_GetTick();
 80045ec:	f7ff fa48 	bl	8003a80 <HAL_GetTick>
 80045f0:	0003      	movs	r3, r0
 80045f2:	60fb      	str	r3, [r7, #12]
    
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 80045f4:	e009      	b.n	800460a <HAL_RCC_ClockConfig+0xf6>
    {
      if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 80045f6:	f7ff fa43 	bl	8003a80 <HAL_GetTick>
 80045fa:	0002      	movs	r2, r0
 80045fc:	68fb      	ldr	r3, [r7, #12]
 80045fe:	1ad3      	subs	r3, r2, r3
 8004600:	4a27      	ldr	r2, [pc, #156]	; (80046a0 <HAL_RCC_ClockConfig+0x18c>)
 8004602:	4293      	cmp	r3, r2
 8004604:	d901      	bls.n	800460a <HAL_RCC_ClockConfig+0xf6>
      {
        return HAL_TIMEOUT;
 8004606:	2303      	movs	r3, #3
 8004608:	e042      	b.n	8004690 <HAL_RCC_ClockConfig+0x17c>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800460a:	4b24      	ldr	r3, [pc, #144]	; (800469c <HAL_RCC_ClockConfig+0x188>)
 800460c:	685b      	ldr	r3, [r3, #4]
 800460e:	220c      	movs	r2, #12
 8004610:	401a      	ands	r2, r3
 8004612:	687b      	ldr	r3, [r7, #4]
 8004614:	685b      	ldr	r3, [r3, #4]
 8004616:	009b      	lsls	r3, r3, #2
 8004618:	429a      	cmp	r2, r3
 800461a:	d1ec      	bne.n	80045f6 <HAL_RCC_ClockConfig+0xe2>
      }
    }
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 800461c:	4b1e      	ldr	r3, [pc, #120]	; (8004698 <HAL_RCC_ClockConfig+0x184>)
 800461e:	681b      	ldr	r3, [r3, #0]
 8004620:	2201      	movs	r2, #1
 8004622:	4013      	ands	r3, r2
 8004624:	683a      	ldr	r2, [r7, #0]
 8004626:	429a      	cmp	r2, r3
 8004628:	d211      	bcs.n	800464e <HAL_RCC_ClockConfig+0x13a>
  {    
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 800462a:	4b1b      	ldr	r3, [pc, #108]	; (8004698 <HAL_RCC_ClockConfig+0x184>)
 800462c:	681b      	ldr	r3, [r3, #0]
 800462e:	2201      	movs	r2, #1
 8004630:	4393      	bics	r3, r2
 8004632:	0019      	movs	r1, r3
 8004634:	4b18      	ldr	r3, [pc, #96]	; (8004698 <HAL_RCC_ClockConfig+0x184>)
 8004636:	683a      	ldr	r2, [r7, #0]
 8004638:	430a      	orrs	r2, r1
 800463a:	601a      	str	r2, [r3, #0]
    
    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800463c:	4b16      	ldr	r3, [pc, #88]	; (8004698 <HAL_RCC_ClockConfig+0x184>)
 800463e:	681b      	ldr	r3, [r3, #0]
 8004640:	2201      	movs	r2, #1
 8004642:	4013      	ands	r3, r2
 8004644:	683a      	ldr	r2, [r7, #0]
 8004646:	429a      	cmp	r2, r3
 8004648:	d001      	beq.n	800464e <HAL_RCC_ClockConfig+0x13a>
    {
      return HAL_ERROR;
 800464a:	2301      	movs	r3, #1
 800464c:	e020      	b.n	8004690 <HAL_RCC_ClockConfig+0x17c>
    }
  }    

  /*-------------------------- PCLK1 Configuration ---------------------------*/ 
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800464e:	687b      	ldr	r3, [r7, #4]
 8004650:	681b      	ldr	r3, [r3, #0]
 8004652:	2204      	movs	r2, #4
 8004654:	4013      	ands	r3, r2
 8004656:	d009      	beq.n	800466c <HAL_RCC_ClockConfig+0x158>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_ClkInitStruct->APB1CLKDivider);
 8004658:	4b10      	ldr	r3, [pc, #64]	; (800469c <HAL_RCC_ClockConfig+0x188>)
 800465a:	685b      	ldr	r3, [r3, #4]
 800465c:	4a11      	ldr	r2, [pc, #68]	; (80046a4 <HAL_RCC_ClockConfig+0x190>)
 800465e:	4013      	ands	r3, r2
 8004660:	0019      	movs	r1, r3
 8004662:	687b      	ldr	r3, [r7, #4]
 8004664:	68da      	ldr	r2, [r3, #12]
 8004666:	4b0d      	ldr	r3, [pc, #52]	; (800469c <HAL_RCC_ClockConfig+0x188>)
 8004668:	430a      	orrs	r2, r1
 800466a:	605a      	str	r2, [r3, #4]
  }
  
  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_BITNUMBER];
 800466c:	f000 f820 	bl	80046b0 <HAL_RCC_GetSysClockFreq>
 8004670:	0001      	movs	r1, r0
 8004672:	4b0a      	ldr	r3, [pc, #40]	; (800469c <HAL_RCC_ClockConfig+0x188>)
 8004674:	685b      	ldr	r3, [r3, #4]
 8004676:	091b      	lsrs	r3, r3, #4
 8004678:	220f      	movs	r2, #15
 800467a:	4013      	ands	r3, r2
 800467c:	4a0a      	ldr	r2, [pc, #40]	; (80046a8 <HAL_RCC_ClockConfig+0x194>)
 800467e:	5cd3      	ldrb	r3, [r2, r3]
 8004680:	000a      	movs	r2, r1
 8004682:	40da      	lsrs	r2, r3
 8004684:	4b09      	ldr	r3, [pc, #36]	; (80046ac <HAL_RCC_ClockConfig+0x198>)
 8004686:	601a      	str	r2, [r3, #0]

  /* Configure the source of time base considering new system clocks settings*/
  HAL_InitTick (TICK_INT_PRIORITY);
 8004688:	2000      	movs	r0, #0
 800468a:	f7ff f9b3 	bl	80039f4 <HAL_InitTick>
  
  return HAL_OK;
 800468e:	2300      	movs	r3, #0
}
 8004690:	0018      	movs	r0, r3
 8004692:	46bd      	mov	sp, r7
 8004694:	b004      	add	sp, #16
 8004696:	bd80      	pop	{r7, pc}
 8004698:	40022000 	.word	0x40022000
 800469c:	40021000 	.word	0x40021000
 80046a0:	00001388 	.word	0x00001388
 80046a4:	fffff8ff 	.word	0xfffff8ff
 80046a8:	08007490 	.word	0x08007490
 80046ac:	2000000c 	.word	0x2000000c

080046b0 <HAL_RCC_GetSysClockFreq>:
  *         right SYSCLK value. Otherwise, any configuration based on this function will be incorrect.
  *         
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 80046b0:	b590      	push	{r4, r7, lr}
 80046b2:	b08f      	sub	sp, #60	; 0x3c
 80046b4:	af00      	add	r7, sp, #0
  const uint8_t aPLLMULFactorTable[16] = { 2U,  3U,  4U,  5U,  6U,  7U,  8U,  9U,
 80046b6:	2314      	movs	r3, #20
 80046b8:	18fb      	adds	r3, r7, r3
 80046ba:	4a2b      	ldr	r2, [pc, #172]	; (8004768 <HAL_RCC_GetSysClockFreq+0xb8>)
 80046bc:	ca13      	ldmia	r2!, {r0, r1, r4}
 80046be:	c313      	stmia	r3!, {r0, r1, r4}
 80046c0:	6812      	ldr	r2, [r2, #0]
 80046c2:	601a      	str	r2, [r3, #0]
                                         10U, 11U, 12U, 13U, 14U, 15U, 16U, 16U};
  const uint8_t aPredivFactorTable[16] = { 1U, 2U,  3U,  4U,  5U,  6U,  7U,  8U,
 80046c4:	1d3b      	adds	r3, r7, #4
 80046c6:	4a29      	ldr	r2, [pc, #164]	; (800476c <HAL_RCC_GetSysClockFreq+0xbc>)
 80046c8:	ca13      	ldmia	r2!, {r0, r1, r4}
 80046ca:	c313      	stmia	r3!, {r0, r1, r4}
 80046cc:	6812      	ldr	r2, [r2, #0]
 80046ce:	601a      	str	r2, [r3, #0]
                                           9U,10U, 11U, 12U, 13U, 14U, 15U, 16U};

  uint32_t tmpreg = 0U, prediv = 0U, pllclk = 0U, pllmul = 0U;
 80046d0:	2300      	movs	r3, #0
 80046d2:	62fb      	str	r3, [r7, #44]	; 0x2c
 80046d4:	2300      	movs	r3, #0
 80046d6:	62bb      	str	r3, [r7, #40]	; 0x28
 80046d8:	2300      	movs	r3, #0
 80046da:	637b      	str	r3, [r7, #52]	; 0x34
 80046dc:	2300      	movs	r3, #0
 80046de:	627b      	str	r3, [r7, #36]	; 0x24
  uint32_t sysclockfreq = 0U;
 80046e0:	2300      	movs	r3, #0
 80046e2:	633b      	str	r3, [r7, #48]	; 0x30
  
  tmpreg = RCC->CFGR;
 80046e4:	4b22      	ldr	r3, [pc, #136]	; (8004770 <HAL_RCC_GetSysClockFreq+0xc0>)
 80046e6:	685b      	ldr	r3, [r3, #4]
 80046e8:	62fb      	str	r3, [r7, #44]	; 0x2c
  
  /* Get SYSCLK source -------------------------------------------------------*/
  switch (tmpreg & RCC_CFGR_SWS)
 80046ea:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80046ec:	220c      	movs	r2, #12
 80046ee:	4013      	ands	r3, r2
 80046f0:	2b04      	cmp	r3, #4
 80046f2:	d002      	beq.n	80046fa <HAL_RCC_GetSysClockFreq+0x4a>
 80046f4:	2b08      	cmp	r3, #8
 80046f6:	d003      	beq.n	8004700 <HAL_RCC_GetSysClockFreq+0x50>
 80046f8:	e02d      	b.n	8004756 <HAL_RCC_GetSysClockFreq+0xa6>
  {
    case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock */
    {
      sysclockfreq = HSE_VALUE;
 80046fa:	4b1e      	ldr	r3, [pc, #120]	; (8004774 <HAL_RCC_GetSysClockFreq+0xc4>)
 80046fc:	633b      	str	r3, [r7, #48]	; 0x30
      break;
 80046fe:	e02d      	b.n	800475c <HAL_RCC_GetSysClockFreq+0xac>
    }
    case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock */
    {
      pllmul = aPLLMULFactorTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMUL) >> RCC_CFGR_PLLMUL_BITNUMBER];
 8004700:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004702:	0c9b      	lsrs	r3, r3, #18
 8004704:	220f      	movs	r2, #15
 8004706:	4013      	ands	r3, r2
 8004708:	2214      	movs	r2, #20
 800470a:	18ba      	adds	r2, r7, r2
 800470c:	5cd3      	ldrb	r3, [r2, r3]
 800470e:	627b      	str	r3, [r7, #36]	; 0x24
      prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV) >> RCC_CFGR2_PREDIV_BITNUMBER];
 8004710:	4b17      	ldr	r3, [pc, #92]	; (8004770 <HAL_RCC_GetSysClockFreq+0xc0>)
 8004712:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004714:	220f      	movs	r2, #15
 8004716:	4013      	ands	r3, r2
 8004718:	1d3a      	adds	r2, r7, #4
 800471a:	5cd3      	ldrb	r3, [r2, r3]
 800471c:	62bb      	str	r3, [r7, #40]	; 0x28
      if ((tmpreg & RCC_CFGR_PLLSRC) == RCC_PLLSOURCE_HSE)
 800471e:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8004720:	2380      	movs	r3, #128	; 0x80
 8004722:	025b      	lsls	r3, r3, #9
 8004724:	4013      	ands	r3, r2
 8004726:	d009      	beq.n	800473c <HAL_RCC_GetSysClockFreq+0x8c>
      {
        /* HSE used as PLL clock source : PLLCLK = HSE/PREDIV * PLLMUL */
        pllclk = (uint32_t)((uint64_t) HSE_VALUE / (uint64_t) (prediv)) * ((uint64_t) pllmul);
 8004728:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 800472a:	4812      	ldr	r0, [pc, #72]	; (8004774 <HAL_RCC_GetSysClockFreq+0xc4>)
 800472c:	f7fb fcfe 	bl	800012c <__udivsi3>
 8004730:	0003      	movs	r3, r0
 8004732:	001a      	movs	r2, r3
 8004734:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004736:	4353      	muls	r3, r2
 8004738:	637b      	str	r3, [r7, #52]	; 0x34
 800473a:	e009      	b.n	8004750 <HAL_RCC_GetSysClockFreq+0xa0>
#if  (defined(STM32F042x6) || defined(STM32F048xx) || defined(STM32F070x6) || defined(STM32F071xB) || defined(STM32F072xB) || defined(STM32F078xx) || defined(STM32F070xB) || defined(STM32F091xC) || defined(STM32F098xx) || defined(STM32F030xC))
        /* HSI used as PLL clock source : PLLCLK = HSI/PREDIV * PLLMUL */
        pllclk = (uint32_t)((uint64_t) HSI_VALUE / (uint64_t) (prediv)) * ((uint64_t) pllmul);
#else
        /* HSI used as PLL clock source : PLLCLK = HSI/2 * PLLMUL */
        pllclk = (uint32_t)((uint64_t) (HSI_VALUE >> 1U) * ((uint64_t) pllmul));
 800473c:	6a79      	ldr	r1, [r7, #36]	; 0x24
 800473e:	000a      	movs	r2, r1
 8004740:	0152      	lsls	r2, r2, #5
 8004742:	1a52      	subs	r2, r2, r1
 8004744:	0193      	lsls	r3, r2, #6
 8004746:	1a9b      	subs	r3, r3, r2
 8004748:	00db      	lsls	r3, r3, #3
 800474a:	185b      	adds	r3, r3, r1
 800474c:	021b      	lsls	r3, r3, #8
 800474e:	637b      	str	r3, [r7, #52]	; 0x34
#endif
      }
      sysclockfreq = pllclk;
 8004750:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8004752:	633b      	str	r3, [r7, #48]	; 0x30
      break;
 8004754:	e002      	b.n	800475c <HAL_RCC_GetSysClockFreq+0xac>
    }
#endif /* RCC_CFGR_SWS_HSI48 */
    case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
    default: /* HSI used as system clock */
    {
      sysclockfreq = HSI_VALUE;
 8004756:	4b07      	ldr	r3, [pc, #28]	; (8004774 <HAL_RCC_GetSysClockFreq+0xc4>)
 8004758:	633b      	str	r3, [r7, #48]	; 0x30
      break;
 800475a:	46c0      	nop			; (mov r8, r8)
    }
  }
  return sysclockfreq;
 800475c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
}
 800475e:	0018      	movs	r0, r3
 8004760:	46bd      	mov	sp, r7
 8004762:	b00f      	add	sp, #60	; 0x3c
 8004764:	bd90      	pop	{r4, r7, pc}
 8004766:	46c0      	nop			; (mov r8, r8)
 8004768:	08007300 	.word	0x08007300
 800476c:	08007310 	.word	0x08007310
 8004770:	40021000 	.word	0x40021000
 8004774:	007a1200 	.word	0x007a1200

08004778 <HAL_RCC_GetHCLKFreq>:
  * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency 
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 8004778:	b580      	push	{r7, lr}
 800477a:	af00      	add	r7, sp, #0
  return SystemCoreClock;
 800477c:	4b02      	ldr	r3, [pc, #8]	; (8004788 <HAL_RCC_GetHCLKFreq+0x10>)
 800477e:	681b      	ldr	r3, [r3, #0]
}
 8004780:	0018      	movs	r0, r3
 8004782:	46bd      	mov	sp, r7
 8004784:	bd80      	pop	{r7, pc}
 8004786:	46c0      	nop			; (mov r8, r8)
 8004788:	2000000c 	.word	0x2000000c

0800478c <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 800478c:	b580      	push	{r7, lr}
 800478e:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE) >> RCC_CFGR_PPRE_BITNUMBER]);
 8004790:	f7ff fff2 	bl	8004778 <HAL_RCC_GetHCLKFreq>
 8004794:	0001      	movs	r1, r0
 8004796:	4b06      	ldr	r3, [pc, #24]	; (80047b0 <HAL_RCC_GetPCLK1Freq+0x24>)
 8004798:	685b      	ldr	r3, [r3, #4]
 800479a:	0a1b      	lsrs	r3, r3, #8
 800479c:	2207      	movs	r2, #7
 800479e:	4013      	ands	r3, r2
 80047a0:	4a04      	ldr	r2, [pc, #16]	; (80047b4 <HAL_RCC_GetPCLK1Freq+0x28>)
 80047a2:	5cd3      	ldrb	r3, [r2, r3]
 80047a4:	40d9      	lsrs	r1, r3
 80047a6:	000b      	movs	r3, r1
}    
 80047a8:	0018      	movs	r0, r3
 80047aa:	46bd      	mov	sp, r7
 80047ac:	bd80      	pop	{r7, pc}
 80047ae:	46c0      	nop			; (mov r8, r8)
 80047b0:	40021000 	.word	0x40021000
 80047b4:	080074a0 	.word	0x080074a0

080047b8 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 80047b8:	b580      	push	{r7, lr}
 80047ba:	b086      	sub	sp, #24
 80047bc:	af00      	add	r7, sp, #0
 80047be:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = 0U;
 80047c0:	2300      	movs	r3, #0
 80047c2:	613b      	str	r3, [r7, #16]
  uint32_t temp_reg = 0U;
 80047c4:	2300      	movs	r3, #0
 80047c6:	60fb      	str	r3, [r7, #12]

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));
  
  /*---------------------------- RTC configuration -------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 80047c8:	687b      	ldr	r3, [r7, #4]
 80047ca:	681a      	ldr	r2, [r3, #0]
 80047cc:	2380      	movs	r3, #128	; 0x80
 80047ce:	025b      	lsls	r3, r3, #9
 80047d0:	4013      	ands	r3, r2
 80047d2:	d100      	bne.n	80047d6 <HAL_RCCEx_PeriphCLKConfig+0x1e>
 80047d4:	e08f      	b.n	80048f6 <HAL_RCCEx_PeriphCLKConfig+0x13e>
  {
    /* check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));
    
    FlagStatus       pwrclkchanged = RESET;
 80047d6:	2317      	movs	r3, #23
 80047d8:	18fb      	adds	r3, r7, r3
 80047da:	2200      	movs	r2, #0
 80047dc:	701a      	strb	r2, [r3, #0]

    /* As soon as function is called to change RTC clock source, activation of the 
       power domain is done. */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 80047de:	4b57      	ldr	r3, [pc, #348]	; (800493c <HAL_RCCEx_PeriphCLKConfig+0x184>)
 80047e0:	69da      	ldr	r2, [r3, #28]
 80047e2:	2380      	movs	r3, #128	; 0x80
 80047e4:	055b      	lsls	r3, r3, #21
 80047e6:	4013      	ands	r3, r2
 80047e8:	d111      	bne.n	800480e <HAL_RCCEx_PeriphCLKConfig+0x56>
    {
    __HAL_RCC_PWR_CLK_ENABLE();
 80047ea:	4b54      	ldr	r3, [pc, #336]	; (800493c <HAL_RCCEx_PeriphCLKConfig+0x184>)
 80047ec:	69da      	ldr	r2, [r3, #28]
 80047ee:	4b53      	ldr	r3, [pc, #332]	; (800493c <HAL_RCCEx_PeriphCLKConfig+0x184>)
 80047f0:	2180      	movs	r1, #128	; 0x80
 80047f2:	0549      	lsls	r1, r1, #21
 80047f4:	430a      	orrs	r2, r1
 80047f6:	61da      	str	r2, [r3, #28]
 80047f8:	4b50      	ldr	r3, [pc, #320]	; (800493c <HAL_RCCEx_PeriphCLKConfig+0x184>)
 80047fa:	69da      	ldr	r2, [r3, #28]
 80047fc:	2380      	movs	r3, #128	; 0x80
 80047fe:	055b      	lsls	r3, r3, #21
 8004800:	4013      	ands	r3, r2
 8004802:	60bb      	str	r3, [r7, #8]
 8004804:	68bb      	ldr	r3, [r7, #8]
      pwrclkchanged = SET;
 8004806:	2317      	movs	r3, #23
 8004808:	18fb      	adds	r3, r7, r3
 800480a:	2201      	movs	r2, #1
 800480c:	701a      	strb	r2, [r3, #0]
    }
    
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800480e:	4b4c      	ldr	r3, [pc, #304]	; (8004940 <HAL_RCCEx_PeriphCLKConfig+0x188>)
 8004810:	681a      	ldr	r2, [r3, #0]
 8004812:	2380      	movs	r3, #128	; 0x80
 8004814:	005b      	lsls	r3, r3, #1
 8004816:	4013      	ands	r3, r2
 8004818:	d11a      	bne.n	8004850 <HAL_RCCEx_PeriphCLKConfig+0x98>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800481a:	4b49      	ldr	r3, [pc, #292]	; (8004940 <HAL_RCCEx_PeriphCLKConfig+0x188>)
 800481c:	681a      	ldr	r2, [r3, #0]
 800481e:	4b48      	ldr	r3, [pc, #288]	; (8004940 <HAL_RCCEx_PeriphCLKConfig+0x188>)
 8004820:	2180      	movs	r1, #128	; 0x80
 8004822:	0049      	lsls	r1, r1, #1
 8004824:	430a      	orrs	r2, r1
 8004826:	601a      	str	r2, [r3, #0]
      
      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 8004828:	f7ff f92a 	bl	8003a80 <HAL_GetTick>
 800482c:	0003      	movs	r3, r0
 800482e:	613b      	str	r3, [r7, #16]
      
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8004830:	e008      	b.n	8004844 <HAL_RCCEx_PeriphCLKConfig+0x8c>
      {
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8004832:	f7ff f925 	bl	8003a80 <HAL_GetTick>
 8004836:	0002      	movs	r2, r0
 8004838:	693b      	ldr	r3, [r7, #16]
 800483a:	1ad3      	subs	r3, r2, r3
 800483c:	2b64      	cmp	r3, #100	; 0x64
 800483e:	d901      	bls.n	8004844 <HAL_RCCEx_PeriphCLKConfig+0x8c>
        {
          return HAL_TIMEOUT;
 8004840:	2303      	movs	r3, #3
 8004842:	e077      	b.n	8004934 <HAL_RCCEx_PeriphCLKConfig+0x17c>
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8004844:	4b3e      	ldr	r3, [pc, #248]	; (8004940 <HAL_RCCEx_PeriphCLKConfig+0x188>)
 8004846:	681a      	ldr	r2, [r3, #0]
 8004848:	2380      	movs	r3, #128	; 0x80
 800484a:	005b      	lsls	r3, r3, #1
 800484c:	4013      	ands	r3, r2
 800484e:	d0f0      	beq.n	8004832 <HAL_RCCEx_PeriphCLKConfig+0x7a>
        }
      }
    }
    
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */ 
    temp_reg = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8004850:	4b3a      	ldr	r3, [pc, #232]	; (800493c <HAL_RCCEx_PeriphCLKConfig+0x184>)
 8004852:	6a1a      	ldr	r2, [r3, #32]
 8004854:	23c0      	movs	r3, #192	; 0xc0
 8004856:	009b      	lsls	r3, r3, #2
 8004858:	4013      	ands	r3, r2
 800485a:	60fb      	str	r3, [r7, #12]
    if((temp_reg != 0x00000000U) && (temp_reg != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800485c:	68fb      	ldr	r3, [r7, #12]
 800485e:	2b00      	cmp	r3, #0
 8004860:	d034      	beq.n	80048cc <HAL_RCCEx_PeriphCLKConfig+0x114>
 8004862:	687b      	ldr	r3, [r7, #4]
 8004864:	685a      	ldr	r2, [r3, #4]
 8004866:	23c0      	movs	r3, #192	; 0xc0
 8004868:	009b      	lsls	r3, r3, #2
 800486a:	4013      	ands	r3, r2
 800486c:	68fa      	ldr	r2, [r7, #12]
 800486e:	429a      	cmp	r2, r3
 8004870:	d02c      	beq.n	80048cc <HAL_RCCEx_PeriphCLKConfig+0x114>
    {
      /* Store the content of BDCR register before the reset of Backup Domain */
      temp_reg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8004872:	4b32      	ldr	r3, [pc, #200]	; (800493c <HAL_RCCEx_PeriphCLKConfig+0x184>)
 8004874:	6a1b      	ldr	r3, [r3, #32]
 8004876:	4a33      	ldr	r2, [pc, #204]	; (8004944 <HAL_RCCEx_PeriphCLKConfig+0x18c>)
 8004878:	4013      	ands	r3, r2
 800487a:	60fb      	str	r3, [r7, #12]
      /* RTC Clock selection can be changed only if the Backup Domain is reset */
      __HAL_RCC_BACKUPRESET_FORCE();
 800487c:	4b2f      	ldr	r3, [pc, #188]	; (800493c <HAL_RCCEx_PeriphCLKConfig+0x184>)
 800487e:	6a1a      	ldr	r2, [r3, #32]
 8004880:	4b2e      	ldr	r3, [pc, #184]	; (800493c <HAL_RCCEx_PeriphCLKConfig+0x184>)
 8004882:	2180      	movs	r1, #128	; 0x80
 8004884:	0249      	lsls	r1, r1, #9
 8004886:	430a      	orrs	r2, r1
 8004888:	621a      	str	r2, [r3, #32]
      __HAL_RCC_BACKUPRESET_RELEASE();
 800488a:	4b2c      	ldr	r3, [pc, #176]	; (800493c <HAL_RCCEx_PeriphCLKConfig+0x184>)
 800488c:	6a1a      	ldr	r2, [r3, #32]
 800488e:	4b2b      	ldr	r3, [pc, #172]	; (800493c <HAL_RCCEx_PeriphCLKConfig+0x184>)
 8004890:	492d      	ldr	r1, [pc, #180]	; (8004948 <HAL_RCCEx_PeriphCLKConfig+0x190>)
 8004892:	400a      	ands	r2, r1
 8004894:	621a      	str	r2, [r3, #32]
      /* Restore the Content of BDCR register */
      RCC->BDCR = temp_reg;
 8004896:	4b29      	ldr	r3, [pc, #164]	; (800493c <HAL_RCCEx_PeriphCLKConfig+0x184>)
 8004898:	68fa      	ldr	r2, [r7, #12]
 800489a:	621a      	str	r2, [r3, #32]
      
      /* Wait for LSERDY if LSE was enabled */
      if (HAL_IS_BIT_SET(temp_reg, RCC_BDCR_LSEON))
 800489c:	68fb      	ldr	r3, [r7, #12]
 800489e:	2201      	movs	r2, #1
 80048a0:	4013      	ands	r3, r2
 80048a2:	d013      	beq.n	80048cc <HAL_RCCEx_PeriphCLKConfig+0x114>
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80048a4:	f7ff f8ec 	bl	8003a80 <HAL_GetTick>
 80048a8:	0003      	movs	r3, r0
 80048aa:	613b      	str	r3, [r7, #16]
        
        /* Wait till LSE is ready */  
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80048ac:	e009      	b.n	80048c2 <HAL_RCCEx_PeriphCLKConfig+0x10a>
        {
          if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80048ae:	f7ff f8e7 	bl	8003a80 <HAL_GetTick>
 80048b2:	0002      	movs	r2, r0
 80048b4:	693b      	ldr	r3, [r7, #16]
 80048b6:	1ad3      	subs	r3, r2, r3
 80048b8:	4a24      	ldr	r2, [pc, #144]	; (800494c <HAL_RCCEx_PeriphCLKConfig+0x194>)
 80048ba:	4293      	cmp	r3, r2
 80048bc:	d901      	bls.n	80048c2 <HAL_RCCEx_PeriphCLKConfig+0x10a>
          {
            return HAL_TIMEOUT;
 80048be:	2303      	movs	r3, #3
 80048c0:	e038      	b.n	8004934 <HAL_RCCEx_PeriphCLKConfig+0x17c>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80048c2:	4b1e      	ldr	r3, [pc, #120]	; (800493c <HAL_RCCEx_PeriphCLKConfig+0x184>)
 80048c4:	6a1b      	ldr	r3, [r3, #32]
 80048c6:	2202      	movs	r2, #2
 80048c8:	4013      	ands	r3, r2
 80048ca:	d0f0      	beq.n	80048ae <HAL_RCCEx_PeriphCLKConfig+0xf6>
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 80048cc:	4b1b      	ldr	r3, [pc, #108]	; (800493c <HAL_RCCEx_PeriphCLKConfig+0x184>)
 80048ce:	6a1b      	ldr	r3, [r3, #32]
 80048d0:	4a1c      	ldr	r2, [pc, #112]	; (8004944 <HAL_RCCEx_PeriphCLKConfig+0x18c>)
 80048d2:	4013      	ands	r3, r2
 80048d4:	0019      	movs	r1, r3
 80048d6:	687b      	ldr	r3, [r7, #4]
 80048d8:	685a      	ldr	r2, [r3, #4]
 80048da:	4b18      	ldr	r3, [pc, #96]	; (800493c <HAL_RCCEx_PeriphCLKConfig+0x184>)
 80048dc:	430a      	orrs	r2, r1
 80048de:	621a      	str	r2, [r3, #32]

    /* Require to disable power clock if necessary */
    if(pwrclkchanged == SET)
 80048e0:	2317      	movs	r3, #23
 80048e2:	18fb      	adds	r3, r7, r3
 80048e4:	781b      	ldrb	r3, [r3, #0]
 80048e6:	2b01      	cmp	r3, #1
 80048e8:	d105      	bne.n	80048f6 <HAL_RCCEx_PeriphCLKConfig+0x13e>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 80048ea:	4b14      	ldr	r3, [pc, #80]	; (800493c <HAL_RCCEx_PeriphCLKConfig+0x184>)
 80048ec:	69da      	ldr	r2, [r3, #28]
 80048ee:	4b13      	ldr	r3, [pc, #76]	; (800493c <HAL_RCCEx_PeriphCLKConfig+0x184>)
 80048f0:	4917      	ldr	r1, [pc, #92]	; (8004950 <HAL_RCCEx_PeriphCLKConfig+0x198>)
 80048f2:	400a      	ands	r2, r1
 80048f4:	61da      	str	r2, [r3, #28]
    }
  }

  /*------------------------------- USART1 Configuration ------------------------*/ 
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 80048f6:	687b      	ldr	r3, [r7, #4]
 80048f8:	681b      	ldr	r3, [r3, #0]
 80048fa:	2201      	movs	r2, #1
 80048fc:	4013      	ands	r3, r2
 80048fe:	d009      	beq.n	8004914 <HAL_RCCEx_PeriphCLKConfig+0x15c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART1CLKSOURCE(PeriphClkInit->Usart1ClockSelection));
    
    /* Configure the USART1 clock source */
    __HAL_RCC_USART1_CONFIG(PeriphClkInit->Usart1ClockSelection);
 8004900:	4b0e      	ldr	r3, [pc, #56]	; (800493c <HAL_RCCEx_PeriphCLKConfig+0x184>)
 8004902:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004904:	2203      	movs	r2, #3
 8004906:	4393      	bics	r3, r2
 8004908:	0019      	movs	r1, r3
 800490a:	687b      	ldr	r3, [r7, #4]
 800490c:	689a      	ldr	r2, [r3, #8]
 800490e:	4b0b      	ldr	r3, [pc, #44]	; (800493c <HAL_RCCEx_PeriphCLKConfig+0x184>)
 8004910:	430a      	orrs	r2, r1
 8004912:	631a      	str	r2, [r3, #48]	; 0x30
    __HAL_RCC_USART3_CONFIG(PeriphClkInit->Usart3ClockSelection);
  }
#endif /* STM32F091xC || STM32F098xx */  

  /*------------------------------ I2C1 Configuration ------------------------*/ 
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1) == RCC_PERIPHCLK_I2C1)
 8004914:	687b      	ldr	r3, [r7, #4]
 8004916:	681b      	ldr	r3, [r3, #0]
 8004918:	2220      	movs	r2, #32
 800491a:	4013      	ands	r3, r2
 800491c:	d009      	beq.n	8004932 <HAL_RCCEx_PeriphCLKConfig+0x17a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C1CLKSOURCE(PeriphClkInit->I2c1ClockSelection));
    
    /* Configure the I2C1 clock source */
    __HAL_RCC_I2C1_CONFIG(PeriphClkInit->I2c1ClockSelection);
 800491e:	4b07      	ldr	r3, [pc, #28]	; (800493c <HAL_RCCEx_PeriphCLKConfig+0x184>)
 8004920:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004922:	2210      	movs	r2, #16
 8004924:	4393      	bics	r3, r2
 8004926:	0019      	movs	r1, r3
 8004928:	687b      	ldr	r3, [r7, #4]
 800492a:	68da      	ldr	r2, [r3, #12]
 800492c:	4b03      	ldr	r3, [pc, #12]	; (800493c <HAL_RCCEx_PeriphCLKConfig+0x184>)
 800492e:	430a      	orrs	r2, r1
 8004930:	631a      	str	r2, [r3, #48]	; 0x30
#endif /* STM32F042x6 || STM32F048xx ||                */
       /* STM32F051x8 || STM32F058xx ||                */
       /* STM32F071xB || STM32F072xB || STM32F078xx || */
       /* STM32F091xC || STM32F098xx */
  
  return HAL_OK;
 8004932:	2300      	movs	r3, #0
}
 8004934:	0018      	movs	r0, r3
 8004936:	46bd      	mov	sp, r7
 8004938:	b006      	add	sp, #24
 800493a:	bd80      	pop	{r7, pc}
 800493c:	40021000 	.word	0x40021000
 8004940:	40007000 	.word	0x40007000
 8004944:	fffffcff 	.word	0xfffffcff
 8004948:	fffeffff 	.word	0xfffeffff
 800494c:	00001388 	.word	0x00001388
 8004950:	efffffff 	.word	0xefffffff

08004954 <HAL_UART_Init>:
  *        parameters in the UART_InitTypeDef and initialize the associated handle.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
{
 8004954:	b580      	push	{r7, lr}
 8004956:	b082      	sub	sp, #8
 8004958:	af00      	add	r7, sp, #0
 800495a:	6078      	str	r0, [r7, #4]
  /* Check the UART handle allocation */
  if (huart == NULL)
 800495c:	687b      	ldr	r3, [r7, #4]
 800495e:	2b00      	cmp	r3, #0
 8004960:	d101      	bne.n	8004966 <HAL_UART_Init+0x12>
  {
    return HAL_ERROR;
 8004962:	2301      	movs	r3, #1
 8004964:	e044      	b.n	80049f0 <HAL_UART_Init+0x9c>
  {
    /* Check the parameters */
    assert_param(IS_UART_INSTANCE(huart->Instance));
  }

  if (huart->gState == HAL_UART_STATE_RESET)
 8004966:	687b      	ldr	r3, [r7, #4]
 8004968:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800496a:	2b00      	cmp	r3, #0
 800496c:	d107      	bne.n	800497e <HAL_UART_Init+0x2a>
  {
    /* Allocate lock resource and initialize it */
    huart->Lock = HAL_UNLOCKED;
 800496e:	687b      	ldr	r3, [r7, #4]
 8004970:	2270      	movs	r2, #112	; 0x70
 8004972:	2100      	movs	r1, #0
 8004974:	5499      	strb	r1, [r3, r2]

    /* Init the low level hardware */
    huart->MspInitCallback(huart);
#else
    /* Init the low level hardware : GPIO, CLOCK */
    HAL_UART_MspInit(huart);
 8004976:	687b      	ldr	r3, [r7, #4]
 8004978:	0018      	movs	r0, r3
 800497a:	f7fe ff63 	bl	8003844 <HAL_UART_MspInit>
#endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
  }

  huart->gState = HAL_UART_STATE_BUSY;
 800497e:	687b      	ldr	r3, [r7, #4]
 8004980:	2224      	movs	r2, #36	; 0x24
 8004982:	675a      	str	r2, [r3, #116]	; 0x74

  __HAL_UART_DISABLE(huart);
 8004984:	687b      	ldr	r3, [r7, #4]
 8004986:	681b      	ldr	r3, [r3, #0]
 8004988:	681a      	ldr	r2, [r3, #0]
 800498a:	687b      	ldr	r3, [r7, #4]
 800498c:	681b      	ldr	r3, [r3, #0]
 800498e:	2101      	movs	r1, #1
 8004990:	438a      	bics	r2, r1
 8004992:	601a      	str	r2, [r3, #0]

  /* Set the UART Communication parameters */
  if (UART_SetConfig(huart) == HAL_ERROR)
 8004994:	687b      	ldr	r3, [r7, #4]
 8004996:	0018      	movs	r0, r3
 8004998:	f000 f8d8 	bl	8004b4c <UART_SetConfig>
 800499c:	0003      	movs	r3, r0
 800499e:	2b01      	cmp	r3, #1
 80049a0:	d101      	bne.n	80049a6 <HAL_UART_Init+0x52>
  {
    return HAL_ERROR;
 80049a2:	2301      	movs	r3, #1
 80049a4:	e024      	b.n	80049f0 <HAL_UART_Init+0x9c>
  }

  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 80049a6:	687b      	ldr	r3, [r7, #4]
 80049a8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80049aa:	2b00      	cmp	r3, #0
 80049ac:	d003      	beq.n	80049b6 <HAL_UART_Init+0x62>
  {
    UART_AdvFeatureConfig(huart);
 80049ae:	687b      	ldr	r3, [r7, #4]
 80049b0:	0018      	movs	r0, r3
 80049b2:	f000 fa39 	bl	8004e28 <UART_AdvFeatureConfig>
  - LINEN (if LIN is supported) and CLKEN bits in the USART_CR2 register,
  - SCEN (if Smartcard is supported), HDSEL and IREN (if IrDA is supported)  bits in the USART_CR3 register.*/
#if defined (USART_CR2_LINEN)
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
#else
  CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 80049b6:	687b      	ldr	r3, [r7, #4]
 80049b8:	681b      	ldr	r3, [r3, #0]
 80049ba:	685a      	ldr	r2, [r3, #4]
 80049bc:	687b      	ldr	r3, [r7, #4]
 80049be:	681b      	ldr	r3, [r3, #0]
 80049c0:	490d      	ldr	r1, [pc, #52]	; (80049f8 <HAL_UART_Init+0xa4>)
 80049c2:	400a      	ands	r2, r1
 80049c4:	605a      	str	r2, [r3, #4]
#endif /* USART_CR3_IREN */
#else
#if defined (USART_CR3_IREN)
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN));
#else
  CLEAR_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 80049c6:	687b      	ldr	r3, [r7, #4]
 80049c8:	681b      	ldr	r3, [r3, #0]
 80049ca:	689a      	ldr	r2, [r3, #8]
 80049cc:	687b      	ldr	r3, [r7, #4]
 80049ce:	681b      	ldr	r3, [r3, #0]
 80049d0:	2108      	movs	r1, #8
 80049d2:	438a      	bics	r2, r1
 80049d4:	609a      	str	r2, [r3, #8]
#endif /* USART_CR3_IREN*/
#endif /* USART_CR3_SCEN */

  __HAL_UART_ENABLE(huart);
 80049d6:	687b      	ldr	r3, [r7, #4]
 80049d8:	681b      	ldr	r3, [r3, #0]
 80049da:	681a      	ldr	r2, [r3, #0]
 80049dc:	687b      	ldr	r3, [r7, #4]
 80049de:	681b      	ldr	r3, [r3, #0]
 80049e0:	2101      	movs	r1, #1
 80049e2:	430a      	orrs	r2, r1
 80049e4:	601a      	str	r2, [r3, #0]

  /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
  return (UART_CheckIdleState(huart));
 80049e6:	687b      	ldr	r3, [r7, #4]
 80049e8:	0018      	movs	r0, r3
 80049ea:	f000 fad1 	bl	8004f90 <UART_CheckIdleState>
 80049ee:	0003      	movs	r3, r0
}
 80049f0:	0018      	movs	r0, r3
 80049f2:	46bd      	mov	sp, r7
 80049f4:	b002      	add	sp, #8
 80049f6:	bd80      	pop	{r7, pc}
 80049f8:	fffff7ff 	.word	0xfffff7ff

080049fc <HAL_UART_Transmit>:
  * @param Size    Amount of data elements (u8 or u16) to be sent.
  * @param Timeout Timeout duration.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 80049fc:	b580      	push	{r7, lr}
 80049fe:	b08a      	sub	sp, #40	; 0x28
 8004a00:	af02      	add	r7, sp, #8
 8004a02:	60f8      	str	r0, [r7, #12]
 8004a04:	60b9      	str	r1, [r7, #8]
 8004a06:	603b      	str	r3, [r7, #0]
 8004a08:	1dbb      	adds	r3, r7, #6
 8004a0a:	801a      	strh	r2, [r3, #0]
  uint8_t  *pdata8bits;
  uint16_t *pdata16bits;
  uint32_t tickstart;

  /* Check that a Tx process is not already ongoing */
  if (huart->gState == HAL_UART_STATE_READY)
 8004a0c:	68fb      	ldr	r3, [r7, #12]
 8004a0e:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8004a10:	2b20      	cmp	r3, #32
 8004a12:	d000      	beq.n	8004a16 <HAL_UART_Transmit+0x1a>
 8004a14:	e095      	b.n	8004b42 <HAL_UART_Transmit+0x146>
  {
    if ((pData == NULL) || (Size == 0U))
 8004a16:	68bb      	ldr	r3, [r7, #8]
 8004a18:	2b00      	cmp	r3, #0
 8004a1a:	d003      	beq.n	8004a24 <HAL_UART_Transmit+0x28>
 8004a1c:	1dbb      	adds	r3, r7, #6
 8004a1e:	881b      	ldrh	r3, [r3, #0]
 8004a20:	2b00      	cmp	r3, #0
 8004a22:	d101      	bne.n	8004a28 <HAL_UART_Transmit+0x2c>
    {
      return  HAL_ERROR;
 8004a24:	2301      	movs	r3, #1
 8004a26:	e08d      	b.n	8004b44 <HAL_UART_Transmit+0x148>
    }

    /* In case of 9bits/No Parity transfer, pData buffer provided as input parameter
       should be aligned on a u16 frontier, as data to be filled into TDR will be
       handled through a u16 cast. */
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8004a28:	68fb      	ldr	r3, [r7, #12]
 8004a2a:	689a      	ldr	r2, [r3, #8]
 8004a2c:	2380      	movs	r3, #128	; 0x80
 8004a2e:	015b      	lsls	r3, r3, #5
 8004a30:	429a      	cmp	r2, r3
 8004a32:	d109      	bne.n	8004a48 <HAL_UART_Transmit+0x4c>
 8004a34:	68fb      	ldr	r3, [r7, #12]
 8004a36:	691b      	ldr	r3, [r3, #16]
 8004a38:	2b00      	cmp	r3, #0
 8004a3a:	d105      	bne.n	8004a48 <HAL_UART_Transmit+0x4c>
    {
      if ((((uint32_t)pData) & 1U) != 0U)
 8004a3c:	68bb      	ldr	r3, [r7, #8]
 8004a3e:	2201      	movs	r2, #1
 8004a40:	4013      	ands	r3, r2
 8004a42:	d001      	beq.n	8004a48 <HAL_UART_Transmit+0x4c>
      {
        return  HAL_ERROR;
 8004a44:	2301      	movs	r3, #1
 8004a46:	e07d      	b.n	8004b44 <HAL_UART_Transmit+0x148>
      }
    }

    __HAL_LOCK(huart);
 8004a48:	68fb      	ldr	r3, [r7, #12]
 8004a4a:	2270      	movs	r2, #112	; 0x70
 8004a4c:	5c9b      	ldrb	r3, [r3, r2]
 8004a4e:	2b01      	cmp	r3, #1
 8004a50:	d101      	bne.n	8004a56 <HAL_UART_Transmit+0x5a>
 8004a52:	2302      	movs	r3, #2
 8004a54:	e076      	b.n	8004b44 <HAL_UART_Transmit+0x148>
 8004a56:	68fb      	ldr	r3, [r7, #12]
 8004a58:	2270      	movs	r2, #112	; 0x70
 8004a5a:	2101      	movs	r1, #1
 8004a5c:	5499      	strb	r1, [r3, r2]

    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8004a5e:	68fb      	ldr	r3, [r7, #12]
 8004a60:	2200      	movs	r2, #0
 8004a62:	67da      	str	r2, [r3, #124]	; 0x7c
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8004a64:	68fb      	ldr	r3, [r7, #12]
 8004a66:	2221      	movs	r2, #33	; 0x21
 8004a68:	675a      	str	r2, [r3, #116]	; 0x74

    /* Init tickstart for timeout managment*/
    tickstart = HAL_GetTick();
 8004a6a:	f7ff f809 	bl	8003a80 <HAL_GetTick>
 8004a6e:	0003      	movs	r3, r0
 8004a70:	617b      	str	r3, [r7, #20]

    huart->TxXferSize  = Size;
 8004a72:	68fb      	ldr	r3, [r7, #12]
 8004a74:	1dba      	adds	r2, r7, #6
 8004a76:	2150      	movs	r1, #80	; 0x50
 8004a78:	8812      	ldrh	r2, [r2, #0]
 8004a7a:	525a      	strh	r2, [r3, r1]
    huart->TxXferCount = Size;
 8004a7c:	68fb      	ldr	r3, [r7, #12]
 8004a7e:	1dba      	adds	r2, r7, #6
 8004a80:	2152      	movs	r1, #82	; 0x52
 8004a82:	8812      	ldrh	r2, [r2, #0]
 8004a84:	525a      	strh	r2, [r3, r1]

    /* In case of 9bits/No Parity transfer, pData needs to be handled as a uint16_t pointer */
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8004a86:	68fb      	ldr	r3, [r7, #12]
 8004a88:	689a      	ldr	r2, [r3, #8]
 8004a8a:	2380      	movs	r3, #128	; 0x80
 8004a8c:	015b      	lsls	r3, r3, #5
 8004a8e:	429a      	cmp	r2, r3
 8004a90:	d108      	bne.n	8004aa4 <HAL_UART_Transmit+0xa8>
 8004a92:	68fb      	ldr	r3, [r7, #12]
 8004a94:	691b      	ldr	r3, [r3, #16]
 8004a96:	2b00      	cmp	r3, #0
 8004a98:	d104      	bne.n	8004aa4 <HAL_UART_Transmit+0xa8>
    {
      pdata8bits  = NULL;
 8004a9a:	2300      	movs	r3, #0
 8004a9c:	61fb      	str	r3, [r7, #28]
      pdata16bits = (uint16_t *) pData;
 8004a9e:	68bb      	ldr	r3, [r7, #8]
 8004aa0:	61bb      	str	r3, [r7, #24]
 8004aa2:	e003      	b.n	8004aac <HAL_UART_Transmit+0xb0>
    }
    else
    {
      pdata8bits  = pData;
 8004aa4:	68bb      	ldr	r3, [r7, #8]
 8004aa6:	61fb      	str	r3, [r7, #28]
      pdata16bits = NULL;
 8004aa8:	2300      	movs	r3, #0
 8004aaa:	61bb      	str	r3, [r7, #24]
    }

    while (huart->TxXferCount > 0U)
 8004aac:	e02d      	b.n	8004b0a <HAL_UART_Transmit+0x10e>
    {
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 8004aae:	697a      	ldr	r2, [r7, #20]
 8004ab0:	68f8      	ldr	r0, [r7, #12]
 8004ab2:	683b      	ldr	r3, [r7, #0]
 8004ab4:	9300      	str	r3, [sp, #0]
 8004ab6:	0013      	movs	r3, r2
 8004ab8:	2200      	movs	r2, #0
 8004aba:	2180      	movs	r1, #128	; 0x80
 8004abc:	f000 faae 	bl	800501c <UART_WaitOnFlagUntilTimeout>
 8004ac0:	1e03      	subs	r3, r0, #0
 8004ac2:	d001      	beq.n	8004ac8 <HAL_UART_Transmit+0xcc>
      {
        return HAL_TIMEOUT;
 8004ac4:	2303      	movs	r3, #3
 8004ac6:	e03d      	b.n	8004b44 <HAL_UART_Transmit+0x148>
      }
      if (pdata8bits == NULL)
 8004ac8:	69fb      	ldr	r3, [r7, #28]
 8004aca:	2b00      	cmp	r3, #0
 8004acc:	d10b      	bne.n	8004ae6 <HAL_UART_Transmit+0xea>
      {
        huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
 8004ace:	69bb      	ldr	r3, [r7, #24]
 8004ad0:	881a      	ldrh	r2, [r3, #0]
 8004ad2:	68fb      	ldr	r3, [r7, #12]
 8004ad4:	681b      	ldr	r3, [r3, #0]
 8004ad6:	05d2      	lsls	r2, r2, #23
 8004ad8:	0dd2      	lsrs	r2, r2, #23
 8004ada:	b292      	uxth	r2, r2
 8004adc:	851a      	strh	r2, [r3, #40]	; 0x28
        pdata16bits++;
 8004ade:	69bb      	ldr	r3, [r7, #24]
 8004ae0:	3302      	adds	r3, #2
 8004ae2:	61bb      	str	r3, [r7, #24]
 8004ae4:	e008      	b.n	8004af8 <HAL_UART_Transmit+0xfc>
      }
      else
      {
        huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
 8004ae6:	69fb      	ldr	r3, [r7, #28]
 8004ae8:	781a      	ldrb	r2, [r3, #0]
 8004aea:	68fb      	ldr	r3, [r7, #12]
 8004aec:	681b      	ldr	r3, [r3, #0]
 8004aee:	b292      	uxth	r2, r2
 8004af0:	851a      	strh	r2, [r3, #40]	; 0x28
        pdata8bits++;
 8004af2:	69fb      	ldr	r3, [r7, #28]
 8004af4:	3301      	adds	r3, #1
 8004af6:	61fb      	str	r3, [r7, #28]
      }
      huart->TxXferCount--;
 8004af8:	68fb      	ldr	r3, [r7, #12]
 8004afa:	2252      	movs	r2, #82	; 0x52
 8004afc:	5a9b      	ldrh	r3, [r3, r2]
 8004afe:	b29b      	uxth	r3, r3
 8004b00:	3b01      	subs	r3, #1
 8004b02:	b299      	uxth	r1, r3
 8004b04:	68fb      	ldr	r3, [r7, #12]
 8004b06:	2252      	movs	r2, #82	; 0x52
 8004b08:	5299      	strh	r1, [r3, r2]
    while (huart->TxXferCount > 0U)
 8004b0a:	68fb      	ldr	r3, [r7, #12]
 8004b0c:	2252      	movs	r2, #82	; 0x52
 8004b0e:	5a9b      	ldrh	r3, [r3, r2]
 8004b10:	b29b      	uxth	r3, r3
 8004b12:	2b00      	cmp	r3, #0
 8004b14:	d1cb      	bne.n	8004aae <HAL_UART_Transmit+0xb2>
    }

    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 8004b16:	697a      	ldr	r2, [r7, #20]
 8004b18:	68f8      	ldr	r0, [r7, #12]
 8004b1a:	683b      	ldr	r3, [r7, #0]
 8004b1c:	9300      	str	r3, [sp, #0]
 8004b1e:	0013      	movs	r3, r2
 8004b20:	2200      	movs	r2, #0
 8004b22:	2140      	movs	r1, #64	; 0x40
 8004b24:	f000 fa7a 	bl	800501c <UART_WaitOnFlagUntilTimeout>
 8004b28:	1e03      	subs	r3, r0, #0
 8004b2a:	d001      	beq.n	8004b30 <HAL_UART_Transmit+0x134>
    {
      return HAL_TIMEOUT;
 8004b2c:	2303      	movs	r3, #3
 8004b2e:	e009      	b.n	8004b44 <HAL_UART_Transmit+0x148>
    }

    /* At end of Tx process, restore huart->gState to Ready */
    huart->gState = HAL_UART_STATE_READY;
 8004b30:	68fb      	ldr	r3, [r7, #12]
 8004b32:	2220      	movs	r2, #32
 8004b34:	675a      	str	r2, [r3, #116]	; 0x74

    __HAL_UNLOCK(huart);
 8004b36:	68fb      	ldr	r3, [r7, #12]
 8004b38:	2270      	movs	r2, #112	; 0x70
 8004b3a:	2100      	movs	r1, #0
 8004b3c:	5499      	strb	r1, [r3, r2]

    return HAL_OK;
 8004b3e:	2300      	movs	r3, #0
 8004b40:	e000      	b.n	8004b44 <HAL_UART_Transmit+0x148>
  }
  else
  {
    return HAL_BUSY;
 8004b42:	2302      	movs	r3, #2
  }
}
 8004b44:	0018      	movs	r0, r3
 8004b46:	46bd      	mov	sp, r7
 8004b48:	b008      	add	sp, #32
 8004b4a:	bd80      	pop	{r7, pc}

08004b4c <UART_SetConfig>:
  * @brief Configure the UART peripheral.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
{
 8004b4c:	b580      	push	{r7, lr}
 8004b4e:	b088      	sub	sp, #32
 8004b50:	af00      	add	r7, sp, #0
 8004b52:	6078      	str	r0, [r7, #4]
  uint32_t tmpreg;
  uint16_t brrtemp;
  UART_ClockSourceTypeDef clocksource;
  uint32_t usartdiv                   = 0x00000000U;
 8004b54:	2300      	movs	r3, #0
 8004b56:	61bb      	str	r3, [r7, #24]
  HAL_StatusTypeDef ret               = HAL_OK;
 8004b58:	2317      	movs	r3, #23
 8004b5a:	18fb      	adds	r3, r7, r3
 8004b5c:	2200      	movs	r2, #0
 8004b5e:	701a      	strb	r2, [r3, #0]
  *  the UART Word Length, Parity, Mode and oversampling:
  *  set the M bits according to huart->Init.WordLength value
  *  set PCE and PS bits according to huart->Init.Parity value
  *  set TE and RE bits according to huart->Init.Mode value
  *  set OVER8 bit according to huart->Init.OverSampling value */
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 8004b60:	687b      	ldr	r3, [r7, #4]
 8004b62:	689a      	ldr	r2, [r3, #8]
 8004b64:	687b      	ldr	r3, [r7, #4]
 8004b66:	691b      	ldr	r3, [r3, #16]
 8004b68:	431a      	orrs	r2, r3
 8004b6a:	687b      	ldr	r3, [r7, #4]
 8004b6c:	695b      	ldr	r3, [r3, #20]
 8004b6e:	431a      	orrs	r2, r3
 8004b70:	687b      	ldr	r3, [r7, #4]
 8004b72:	69db      	ldr	r3, [r3, #28]
 8004b74:	4313      	orrs	r3, r2
 8004b76:	613b      	str	r3, [r7, #16]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 8004b78:	687b      	ldr	r3, [r7, #4]
 8004b7a:	681b      	ldr	r3, [r3, #0]
 8004b7c:	681b      	ldr	r3, [r3, #0]
 8004b7e:	4aa3      	ldr	r2, [pc, #652]	; (8004e0c <UART_SetConfig+0x2c0>)
 8004b80:	4013      	ands	r3, r2
 8004b82:	0019      	movs	r1, r3
 8004b84:	687b      	ldr	r3, [r7, #4]
 8004b86:	681b      	ldr	r3, [r3, #0]
 8004b88:	693a      	ldr	r2, [r7, #16]
 8004b8a:	430a      	orrs	r2, r1
 8004b8c:	601a      	str	r2, [r3, #0]

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits according
  * to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 8004b8e:	687b      	ldr	r3, [r7, #4]
 8004b90:	681b      	ldr	r3, [r3, #0]
 8004b92:	685b      	ldr	r3, [r3, #4]
 8004b94:	4a9e      	ldr	r2, [pc, #632]	; (8004e10 <UART_SetConfig+0x2c4>)
 8004b96:	4013      	ands	r3, r2
 8004b98:	0019      	movs	r1, r3
 8004b9a:	687b      	ldr	r3, [r7, #4]
 8004b9c:	68da      	ldr	r2, [r3, #12]
 8004b9e:	687b      	ldr	r3, [r7, #4]
 8004ba0:	681b      	ldr	r3, [r3, #0]
 8004ba2:	430a      	orrs	r2, r1
 8004ba4:	605a      	str	r2, [r3, #4]
  /* Configure
  * - UART HardWare Flow Control: set CTSE and RTSE bits according
  *   to huart->Init.HwFlowCtl value
  * - one-bit sampling method versus three samples' majority rule according
  *   to huart->Init.OneBitSampling (not applicable to LPUART) */
  tmpreg = (uint32_t)huart->Init.HwFlowCtl;
 8004ba6:	687b      	ldr	r3, [r7, #4]
 8004ba8:	699b      	ldr	r3, [r3, #24]
 8004baa:	613b      	str	r3, [r7, #16]

  tmpreg |= huart->Init.OneBitSampling;
 8004bac:	687b      	ldr	r3, [r7, #4]
 8004bae:	6a1b      	ldr	r3, [r3, #32]
 8004bb0:	693a      	ldr	r2, [r7, #16]
 8004bb2:	4313      	orrs	r3, r2
 8004bb4:	613b      	str	r3, [r7, #16]
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 8004bb6:	687b      	ldr	r3, [r7, #4]
 8004bb8:	681b      	ldr	r3, [r3, #0]
 8004bba:	689b      	ldr	r3, [r3, #8]
 8004bbc:	4a95      	ldr	r2, [pc, #596]	; (8004e14 <UART_SetConfig+0x2c8>)
 8004bbe:	4013      	ands	r3, r2
 8004bc0:	0019      	movs	r1, r3
 8004bc2:	687b      	ldr	r3, [r7, #4]
 8004bc4:	681b      	ldr	r3, [r3, #0]
 8004bc6:	693a      	ldr	r2, [r7, #16]
 8004bc8:	430a      	orrs	r2, r1
 8004bca:	609a      	str	r2, [r3, #8]


  /*-------------------------- USART BRR Configuration -----------------------*/
  UART_GETCLOCKSOURCE(huart, clocksource);
 8004bcc:	4b92      	ldr	r3, [pc, #584]	; (8004e18 <UART_SetConfig+0x2cc>)
 8004bce:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004bd0:	2203      	movs	r2, #3
 8004bd2:	4013      	ands	r3, r2
 8004bd4:	2b01      	cmp	r3, #1
 8004bd6:	d00f      	beq.n	8004bf8 <UART_SetConfig+0xac>
 8004bd8:	d304      	bcc.n	8004be4 <UART_SetConfig+0x98>
 8004bda:	2b02      	cmp	r3, #2
 8004bdc:	d011      	beq.n	8004c02 <UART_SetConfig+0xb6>
 8004bde:	2b03      	cmp	r3, #3
 8004be0:	d005      	beq.n	8004bee <UART_SetConfig+0xa2>
 8004be2:	e013      	b.n	8004c0c <UART_SetConfig+0xc0>
 8004be4:	231f      	movs	r3, #31
 8004be6:	18fb      	adds	r3, r7, r3
 8004be8:	2200      	movs	r2, #0
 8004bea:	701a      	strb	r2, [r3, #0]
 8004bec:	e012      	b.n	8004c14 <UART_SetConfig+0xc8>
 8004bee:	231f      	movs	r3, #31
 8004bf0:	18fb      	adds	r3, r7, r3
 8004bf2:	2202      	movs	r2, #2
 8004bf4:	701a      	strb	r2, [r3, #0]
 8004bf6:	e00d      	b.n	8004c14 <UART_SetConfig+0xc8>
 8004bf8:	231f      	movs	r3, #31
 8004bfa:	18fb      	adds	r3, r7, r3
 8004bfc:	2204      	movs	r2, #4
 8004bfe:	701a      	strb	r2, [r3, #0]
 8004c00:	e008      	b.n	8004c14 <UART_SetConfig+0xc8>
 8004c02:	231f      	movs	r3, #31
 8004c04:	18fb      	adds	r3, r7, r3
 8004c06:	2208      	movs	r2, #8
 8004c08:	701a      	strb	r2, [r3, #0]
 8004c0a:	e003      	b.n	8004c14 <UART_SetConfig+0xc8>
 8004c0c:	231f      	movs	r3, #31
 8004c0e:	18fb      	adds	r3, r7, r3
 8004c10:	2210      	movs	r2, #16
 8004c12:	701a      	strb	r2, [r3, #0]
 8004c14:	46c0      	nop			; (mov r8, r8)

  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8004c16:	687b      	ldr	r3, [r7, #4]
 8004c18:	69da      	ldr	r2, [r3, #28]
 8004c1a:	2380      	movs	r3, #128	; 0x80
 8004c1c:	021b      	lsls	r3, r3, #8
 8004c1e:	429a      	cmp	r2, r3
 8004c20:	d000      	beq.n	8004c24 <UART_SetConfig+0xd8>
 8004c22:	e07d      	b.n	8004d20 <UART_SetConfig+0x1d4>
  {
    switch (clocksource)
 8004c24:	231f      	movs	r3, #31
 8004c26:	18fb      	adds	r3, r7, r3
 8004c28:	781b      	ldrb	r3, [r3, #0]
 8004c2a:	2b02      	cmp	r3, #2
 8004c2c:	d01c      	beq.n	8004c68 <UART_SetConfig+0x11c>
 8004c2e:	dc02      	bgt.n	8004c36 <UART_SetConfig+0xea>
 8004c30:	2b00      	cmp	r3, #0
 8004c32:	d005      	beq.n	8004c40 <UART_SetConfig+0xf4>
 8004c34:	e04b      	b.n	8004cce <UART_SetConfig+0x182>
 8004c36:	2b04      	cmp	r3, #4
 8004c38:	d025      	beq.n	8004c86 <UART_SetConfig+0x13a>
 8004c3a:	2b08      	cmp	r3, #8
 8004c3c:	d037      	beq.n	8004cae <UART_SetConfig+0x162>
 8004c3e:	e046      	b.n	8004cce <UART_SetConfig+0x182>
    {
      case UART_CLOCKSOURCE_PCLK1:
        pclk = HAL_RCC_GetPCLK1Freq();
 8004c40:	f7ff fda4 	bl	800478c <HAL_RCC_GetPCLK1Freq>
 8004c44:	0003      	movs	r3, r0
 8004c46:	60fb      	str	r3, [r7, #12]
        usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
 8004c48:	68fb      	ldr	r3, [r7, #12]
 8004c4a:	005a      	lsls	r2, r3, #1
 8004c4c:	687b      	ldr	r3, [r7, #4]
 8004c4e:	685b      	ldr	r3, [r3, #4]
 8004c50:	085b      	lsrs	r3, r3, #1
 8004c52:	18d2      	adds	r2, r2, r3
 8004c54:	687b      	ldr	r3, [r7, #4]
 8004c56:	685b      	ldr	r3, [r3, #4]
 8004c58:	0019      	movs	r1, r3
 8004c5a:	0010      	movs	r0, r2
 8004c5c:	f7fb fa66 	bl	800012c <__udivsi3>
 8004c60:	0003      	movs	r3, r0
 8004c62:	b29b      	uxth	r3, r3
 8004c64:	61bb      	str	r3, [r7, #24]
        break;
 8004c66:	e037      	b.n	8004cd8 <UART_SetConfig+0x18c>
      case UART_CLOCKSOURCE_HSI:
        usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HSI_VALUE, huart->Init.BaudRate));
 8004c68:	687b      	ldr	r3, [r7, #4]
 8004c6a:	685b      	ldr	r3, [r3, #4]
 8004c6c:	085b      	lsrs	r3, r3, #1
 8004c6e:	4a6b      	ldr	r2, [pc, #428]	; (8004e1c <UART_SetConfig+0x2d0>)
 8004c70:	189a      	adds	r2, r3, r2
 8004c72:	687b      	ldr	r3, [r7, #4]
 8004c74:	685b      	ldr	r3, [r3, #4]
 8004c76:	0019      	movs	r1, r3
 8004c78:	0010      	movs	r0, r2
 8004c7a:	f7fb fa57 	bl	800012c <__udivsi3>
 8004c7e:	0003      	movs	r3, r0
 8004c80:	b29b      	uxth	r3, r3
 8004c82:	61bb      	str	r3, [r7, #24]
        break;
 8004c84:	e028      	b.n	8004cd8 <UART_SetConfig+0x18c>
      case UART_CLOCKSOURCE_SYSCLK:
        pclk = HAL_RCC_GetSysClockFreq();
 8004c86:	f7ff fd13 	bl	80046b0 <HAL_RCC_GetSysClockFreq>
 8004c8a:	0003      	movs	r3, r0
 8004c8c:	60fb      	str	r3, [r7, #12]
        usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
 8004c8e:	68fb      	ldr	r3, [r7, #12]
 8004c90:	005a      	lsls	r2, r3, #1
 8004c92:	687b      	ldr	r3, [r7, #4]
 8004c94:	685b      	ldr	r3, [r3, #4]
 8004c96:	085b      	lsrs	r3, r3, #1
 8004c98:	18d2      	adds	r2, r2, r3
 8004c9a:	687b      	ldr	r3, [r7, #4]
 8004c9c:	685b      	ldr	r3, [r3, #4]
 8004c9e:	0019      	movs	r1, r3
 8004ca0:	0010      	movs	r0, r2
 8004ca2:	f7fb fa43 	bl	800012c <__udivsi3>
 8004ca6:	0003      	movs	r3, r0
 8004ca8:	b29b      	uxth	r3, r3
 8004caa:	61bb      	str	r3, [r7, #24]
        break;
 8004cac:	e014      	b.n	8004cd8 <UART_SetConfig+0x18c>
      case UART_CLOCKSOURCE_LSE:
        usartdiv = (uint16_t)(UART_DIV_SAMPLING8(LSE_VALUE, huart->Init.BaudRate));
 8004cae:	687b      	ldr	r3, [r7, #4]
 8004cb0:	685b      	ldr	r3, [r3, #4]
 8004cb2:	085b      	lsrs	r3, r3, #1
 8004cb4:	2280      	movs	r2, #128	; 0x80
 8004cb6:	0252      	lsls	r2, r2, #9
 8004cb8:	189a      	adds	r2, r3, r2
 8004cba:	687b      	ldr	r3, [r7, #4]
 8004cbc:	685b      	ldr	r3, [r3, #4]
 8004cbe:	0019      	movs	r1, r3
 8004cc0:	0010      	movs	r0, r2
 8004cc2:	f7fb fa33 	bl	800012c <__udivsi3>
 8004cc6:	0003      	movs	r3, r0
 8004cc8:	b29b      	uxth	r3, r3
 8004cca:	61bb      	str	r3, [r7, #24]
        break;
 8004ccc:	e004      	b.n	8004cd8 <UART_SetConfig+0x18c>
      default:
        ret = HAL_ERROR;
 8004cce:	2317      	movs	r3, #23
 8004cd0:	18fb      	adds	r3, r7, r3
 8004cd2:	2201      	movs	r2, #1
 8004cd4:	701a      	strb	r2, [r3, #0]
        break;
 8004cd6:	46c0      	nop			; (mov r8, r8)
    }

    /* USARTDIV must be greater than or equal to 0d16 */
    if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8004cd8:	69bb      	ldr	r3, [r7, #24]
 8004cda:	2b0f      	cmp	r3, #15
 8004cdc:	d91b      	bls.n	8004d16 <UART_SetConfig+0x1ca>
 8004cde:	69bb      	ldr	r3, [r7, #24]
 8004ce0:	4a4f      	ldr	r2, [pc, #316]	; (8004e20 <UART_SetConfig+0x2d4>)
 8004ce2:	4293      	cmp	r3, r2
 8004ce4:	d817      	bhi.n	8004d16 <UART_SetConfig+0x1ca>
    {
      brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 8004ce6:	69bb      	ldr	r3, [r7, #24]
 8004ce8:	b29a      	uxth	r2, r3
 8004cea:	200a      	movs	r0, #10
 8004cec:	183b      	adds	r3, r7, r0
 8004cee:	210f      	movs	r1, #15
 8004cf0:	438a      	bics	r2, r1
 8004cf2:	801a      	strh	r2, [r3, #0]
      brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 8004cf4:	69bb      	ldr	r3, [r7, #24]
 8004cf6:	085b      	lsrs	r3, r3, #1
 8004cf8:	b29b      	uxth	r3, r3
 8004cfa:	2207      	movs	r2, #7
 8004cfc:	4013      	ands	r3, r2
 8004cfe:	b299      	uxth	r1, r3
 8004d00:	183b      	adds	r3, r7, r0
 8004d02:	183a      	adds	r2, r7, r0
 8004d04:	8812      	ldrh	r2, [r2, #0]
 8004d06:	430a      	orrs	r2, r1
 8004d08:	801a      	strh	r2, [r3, #0]
      huart->Instance->BRR = brrtemp;
 8004d0a:	687b      	ldr	r3, [r7, #4]
 8004d0c:	681b      	ldr	r3, [r3, #0]
 8004d0e:	183a      	adds	r2, r7, r0
 8004d10:	8812      	ldrh	r2, [r2, #0]
 8004d12:	60da      	str	r2, [r3, #12]
 8004d14:	e06c      	b.n	8004df0 <UART_SetConfig+0x2a4>
    }
    else
    {
      ret = HAL_ERROR;
 8004d16:	2317      	movs	r3, #23
 8004d18:	18fb      	adds	r3, r7, r3
 8004d1a:	2201      	movs	r2, #1
 8004d1c:	701a      	strb	r2, [r3, #0]
 8004d1e:	e067      	b.n	8004df0 <UART_SetConfig+0x2a4>
    }
  }
  else
  {
    switch (clocksource)
 8004d20:	231f      	movs	r3, #31
 8004d22:	18fb      	adds	r3, r7, r3
 8004d24:	781b      	ldrb	r3, [r3, #0]
 8004d26:	2b02      	cmp	r3, #2
 8004d28:	d01b      	beq.n	8004d62 <UART_SetConfig+0x216>
 8004d2a:	dc02      	bgt.n	8004d32 <UART_SetConfig+0x1e6>
 8004d2c:	2b00      	cmp	r3, #0
 8004d2e:	d005      	beq.n	8004d3c <UART_SetConfig+0x1f0>
 8004d30:	e049      	b.n	8004dc6 <UART_SetConfig+0x27a>
 8004d32:	2b04      	cmp	r3, #4
 8004d34:	d024      	beq.n	8004d80 <UART_SetConfig+0x234>
 8004d36:	2b08      	cmp	r3, #8
 8004d38:	d035      	beq.n	8004da6 <UART_SetConfig+0x25a>
 8004d3a:	e044      	b.n	8004dc6 <UART_SetConfig+0x27a>
    {
      case UART_CLOCKSOURCE_PCLK1:
        pclk = HAL_RCC_GetPCLK1Freq();
 8004d3c:	f7ff fd26 	bl	800478c <HAL_RCC_GetPCLK1Freq>
 8004d40:	0003      	movs	r3, r0
 8004d42:	60fb      	str	r3, [r7, #12]
        usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
 8004d44:	687b      	ldr	r3, [r7, #4]
 8004d46:	685b      	ldr	r3, [r3, #4]
 8004d48:	085a      	lsrs	r2, r3, #1
 8004d4a:	68fb      	ldr	r3, [r7, #12]
 8004d4c:	18d2      	adds	r2, r2, r3
 8004d4e:	687b      	ldr	r3, [r7, #4]
 8004d50:	685b      	ldr	r3, [r3, #4]
 8004d52:	0019      	movs	r1, r3
 8004d54:	0010      	movs	r0, r2
 8004d56:	f7fb f9e9 	bl	800012c <__udivsi3>
 8004d5a:	0003      	movs	r3, r0
 8004d5c:	b29b      	uxth	r3, r3
 8004d5e:	61bb      	str	r3, [r7, #24]
        break;
 8004d60:	e036      	b.n	8004dd0 <UART_SetConfig+0x284>
      case UART_CLOCKSOURCE_HSI:
        usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HSI_VALUE, huart->Init.BaudRate));
 8004d62:	687b      	ldr	r3, [r7, #4]
 8004d64:	685b      	ldr	r3, [r3, #4]
 8004d66:	085b      	lsrs	r3, r3, #1
 8004d68:	4a2e      	ldr	r2, [pc, #184]	; (8004e24 <UART_SetConfig+0x2d8>)
 8004d6a:	189a      	adds	r2, r3, r2
 8004d6c:	687b      	ldr	r3, [r7, #4]
 8004d6e:	685b      	ldr	r3, [r3, #4]
 8004d70:	0019      	movs	r1, r3
 8004d72:	0010      	movs	r0, r2
 8004d74:	f7fb f9da 	bl	800012c <__udivsi3>
 8004d78:	0003      	movs	r3, r0
 8004d7a:	b29b      	uxth	r3, r3
 8004d7c:	61bb      	str	r3, [r7, #24]
        break;
 8004d7e:	e027      	b.n	8004dd0 <UART_SetConfig+0x284>
      case UART_CLOCKSOURCE_SYSCLK:
        pclk = HAL_RCC_GetSysClockFreq();
 8004d80:	f7ff fc96 	bl	80046b0 <HAL_RCC_GetSysClockFreq>
 8004d84:	0003      	movs	r3, r0
 8004d86:	60fb      	str	r3, [r7, #12]
        usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
 8004d88:	687b      	ldr	r3, [r7, #4]
 8004d8a:	685b      	ldr	r3, [r3, #4]
 8004d8c:	085a      	lsrs	r2, r3, #1
 8004d8e:	68fb      	ldr	r3, [r7, #12]
 8004d90:	18d2      	adds	r2, r2, r3
 8004d92:	687b      	ldr	r3, [r7, #4]
 8004d94:	685b      	ldr	r3, [r3, #4]
 8004d96:	0019      	movs	r1, r3
 8004d98:	0010      	movs	r0, r2
 8004d9a:	f7fb f9c7 	bl	800012c <__udivsi3>
 8004d9e:	0003      	movs	r3, r0
 8004da0:	b29b      	uxth	r3, r3
 8004da2:	61bb      	str	r3, [r7, #24]
        break;
 8004da4:	e014      	b.n	8004dd0 <UART_SetConfig+0x284>
      case UART_CLOCKSOURCE_LSE:
        usartdiv = (uint16_t)(UART_DIV_SAMPLING16(LSE_VALUE, huart->Init.BaudRate));
 8004da6:	687b      	ldr	r3, [r7, #4]
 8004da8:	685b      	ldr	r3, [r3, #4]
 8004daa:	085b      	lsrs	r3, r3, #1
 8004dac:	2280      	movs	r2, #128	; 0x80
 8004dae:	0212      	lsls	r2, r2, #8
 8004db0:	189a      	adds	r2, r3, r2
 8004db2:	687b      	ldr	r3, [r7, #4]
 8004db4:	685b      	ldr	r3, [r3, #4]
 8004db6:	0019      	movs	r1, r3
 8004db8:	0010      	movs	r0, r2
 8004dba:	f7fb f9b7 	bl	800012c <__udivsi3>
 8004dbe:	0003      	movs	r3, r0
 8004dc0:	b29b      	uxth	r3, r3
 8004dc2:	61bb      	str	r3, [r7, #24]
        break;
 8004dc4:	e004      	b.n	8004dd0 <UART_SetConfig+0x284>
      default:
        ret = HAL_ERROR;
 8004dc6:	2317      	movs	r3, #23
 8004dc8:	18fb      	adds	r3, r7, r3
 8004dca:	2201      	movs	r2, #1
 8004dcc:	701a      	strb	r2, [r3, #0]
        break;
 8004dce:	46c0      	nop			; (mov r8, r8)
    }

    /* USARTDIV must be greater than or equal to 0d16 */
    if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8004dd0:	69bb      	ldr	r3, [r7, #24]
 8004dd2:	2b0f      	cmp	r3, #15
 8004dd4:	d908      	bls.n	8004de8 <UART_SetConfig+0x29c>
 8004dd6:	69bb      	ldr	r3, [r7, #24]
 8004dd8:	4a11      	ldr	r2, [pc, #68]	; (8004e20 <UART_SetConfig+0x2d4>)
 8004dda:	4293      	cmp	r3, r2
 8004ddc:	d804      	bhi.n	8004de8 <UART_SetConfig+0x29c>
    {
      huart->Instance->BRR = usartdiv;
 8004dde:	687b      	ldr	r3, [r7, #4]
 8004de0:	681b      	ldr	r3, [r3, #0]
 8004de2:	69ba      	ldr	r2, [r7, #24]
 8004de4:	60da      	str	r2, [r3, #12]
 8004de6:	e003      	b.n	8004df0 <UART_SetConfig+0x2a4>
    }
    else
    {
      ret = HAL_ERROR;
 8004de8:	2317      	movs	r3, #23
 8004dea:	18fb      	adds	r3, r7, r3
 8004dec:	2201      	movs	r2, #1
 8004dee:	701a      	strb	r2, [r3, #0]
    }
  }


  /* Clear ISR function pointers */
  huart->RxISR = NULL;
 8004df0:	687b      	ldr	r3, [r7, #4]
 8004df2:	2200      	movs	r2, #0
 8004df4:	661a      	str	r2, [r3, #96]	; 0x60
  huart->TxISR = NULL;
 8004df6:	687b      	ldr	r3, [r7, #4]
 8004df8:	2200      	movs	r2, #0
 8004dfa:	665a      	str	r2, [r3, #100]	; 0x64

  return ret;
 8004dfc:	2317      	movs	r3, #23
 8004dfe:	18fb      	adds	r3, r7, r3
 8004e00:	781b      	ldrb	r3, [r3, #0]
}
 8004e02:	0018      	movs	r0, r3
 8004e04:	46bd      	mov	sp, r7
 8004e06:	b008      	add	sp, #32
 8004e08:	bd80      	pop	{r7, pc}
 8004e0a:	46c0      	nop			; (mov r8, r8)
 8004e0c:	ffff69f3 	.word	0xffff69f3
 8004e10:	ffffcfff 	.word	0xffffcfff
 8004e14:	fffff4ff 	.word	0xfffff4ff
 8004e18:	40021000 	.word	0x40021000
 8004e1c:	00f42400 	.word	0x00f42400
 8004e20:	0000ffff 	.word	0x0000ffff
 8004e24:	007a1200 	.word	0x007a1200

08004e28 <UART_AdvFeatureConfig>:
  * @brief Configure the UART peripheral advanced features.
  * @param huart UART handle.
  * @retval None
  */
void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
{
 8004e28:	b580      	push	{r7, lr}
 8004e2a:	b082      	sub	sp, #8
 8004e2c:	af00      	add	r7, sp, #0
 8004e2e:	6078      	str	r0, [r7, #4]
  /* Check whether the set of advanced features to configure is properly set */
  assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));

  /* if required, configure TX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 8004e30:	687b      	ldr	r3, [r7, #4]
 8004e32:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004e34:	2201      	movs	r2, #1
 8004e36:	4013      	ands	r3, r2
 8004e38:	d00b      	beq.n	8004e52 <UART_AdvFeatureConfig+0x2a>
  {
    assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 8004e3a:	687b      	ldr	r3, [r7, #4]
 8004e3c:	681b      	ldr	r3, [r3, #0]
 8004e3e:	685b      	ldr	r3, [r3, #4]
 8004e40:	4a4a      	ldr	r2, [pc, #296]	; (8004f6c <UART_AdvFeatureConfig+0x144>)
 8004e42:	4013      	ands	r3, r2
 8004e44:	0019      	movs	r1, r3
 8004e46:	687b      	ldr	r3, [r7, #4]
 8004e48:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8004e4a:	687b      	ldr	r3, [r7, #4]
 8004e4c:	681b      	ldr	r3, [r3, #0]
 8004e4e:	430a      	orrs	r2, r1
 8004e50:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 8004e52:	687b      	ldr	r3, [r7, #4]
 8004e54:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004e56:	2202      	movs	r2, #2
 8004e58:	4013      	ands	r3, r2
 8004e5a:	d00b      	beq.n	8004e74 <UART_AdvFeatureConfig+0x4c>
  {
    assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 8004e5c:	687b      	ldr	r3, [r7, #4]
 8004e5e:	681b      	ldr	r3, [r3, #0]
 8004e60:	685b      	ldr	r3, [r3, #4]
 8004e62:	4a43      	ldr	r2, [pc, #268]	; (8004f70 <UART_AdvFeatureConfig+0x148>)
 8004e64:	4013      	ands	r3, r2
 8004e66:	0019      	movs	r1, r3
 8004e68:	687b      	ldr	r3, [r7, #4]
 8004e6a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004e6c:	687b      	ldr	r3, [r7, #4]
 8004e6e:	681b      	ldr	r3, [r3, #0]
 8004e70:	430a      	orrs	r2, r1
 8004e72:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure data inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 8004e74:	687b      	ldr	r3, [r7, #4]
 8004e76:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004e78:	2204      	movs	r2, #4
 8004e7a:	4013      	ands	r3, r2
 8004e7c:	d00b      	beq.n	8004e96 <UART_AdvFeatureConfig+0x6e>
  {
    assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 8004e7e:	687b      	ldr	r3, [r7, #4]
 8004e80:	681b      	ldr	r3, [r3, #0]
 8004e82:	685b      	ldr	r3, [r3, #4]
 8004e84:	4a3b      	ldr	r2, [pc, #236]	; (8004f74 <UART_AdvFeatureConfig+0x14c>)
 8004e86:	4013      	ands	r3, r2
 8004e88:	0019      	movs	r1, r3
 8004e8a:	687b      	ldr	r3, [r7, #4]
 8004e8c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004e8e:	687b      	ldr	r3, [r7, #4]
 8004e90:	681b      	ldr	r3, [r3, #0]
 8004e92:	430a      	orrs	r2, r1
 8004e94:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX/TX pins swap */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 8004e96:	687b      	ldr	r3, [r7, #4]
 8004e98:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004e9a:	2208      	movs	r2, #8
 8004e9c:	4013      	ands	r3, r2
 8004e9e:	d00b      	beq.n	8004eb8 <UART_AdvFeatureConfig+0x90>
  {
    assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 8004ea0:	687b      	ldr	r3, [r7, #4]
 8004ea2:	681b      	ldr	r3, [r3, #0]
 8004ea4:	685b      	ldr	r3, [r3, #4]
 8004ea6:	4a34      	ldr	r2, [pc, #208]	; (8004f78 <UART_AdvFeatureConfig+0x150>)
 8004ea8:	4013      	ands	r3, r2
 8004eaa:	0019      	movs	r1, r3
 8004eac:	687b      	ldr	r3, [r7, #4]
 8004eae:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8004eb0:	687b      	ldr	r3, [r7, #4]
 8004eb2:	681b      	ldr	r3, [r3, #0]
 8004eb4:	430a      	orrs	r2, r1
 8004eb6:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX overrun detection disabling */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 8004eb8:	687b      	ldr	r3, [r7, #4]
 8004eba:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004ebc:	2210      	movs	r2, #16
 8004ebe:	4013      	ands	r3, r2
 8004ec0:	d00b      	beq.n	8004eda <UART_AdvFeatureConfig+0xb2>
  {
    assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 8004ec2:	687b      	ldr	r3, [r7, #4]
 8004ec4:	681b      	ldr	r3, [r3, #0]
 8004ec6:	689b      	ldr	r3, [r3, #8]
 8004ec8:	4a2c      	ldr	r2, [pc, #176]	; (8004f7c <UART_AdvFeatureConfig+0x154>)
 8004eca:	4013      	ands	r3, r2
 8004ecc:	0019      	movs	r1, r3
 8004ece:	687b      	ldr	r3, [r7, #4]
 8004ed0:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8004ed2:	687b      	ldr	r3, [r7, #4]
 8004ed4:	681b      	ldr	r3, [r3, #0]
 8004ed6:	430a      	orrs	r2, r1
 8004ed8:	609a      	str	r2, [r3, #8]
  }

  /* if required, configure DMA disabling on reception error */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 8004eda:	687b      	ldr	r3, [r7, #4]
 8004edc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004ede:	2220      	movs	r2, #32
 8004ee0:	4013      	ands	r3, r2
 8004ee2:	d00b      	beq.n	8004efc <UART_AdvFeatureConfig+0xd4>
  {
    assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 8004ee4:	687b      	ldr	r3, [r7, #4]
 8004ee6:	681b      	ldr	r3, [r3, #0]
 8004ee8:	689b      	ldr	r3, [r3, #8]
 8004eea:	4a25      	ldr	r2, [pc, #148]	; (8004f80 <UART_AdvFeatureConfig+0x158>)
 8004eec:	4013      	ands	r3, r2
 8004eee:	0019      	movs	r1, r3
 8004ef0:	687b      	ldr	r3, [r7, #4]
 8004ef2:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8004ef4:	687b      	ldr	r3, [r7, #4]
 8004ef6:	681b      	ldr	r3, [r3, #0]
 8004ef8:	430a      	orrs	r2, r1
 8004efa:	609a      	str	r2, [r3, #8]
  }

  /* if required, configure auto Baud rate detection scheme */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 8004efc:	687b      	ldr	r3, [r7, #4]
 8004efe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004f00:	2240      	movs	r2, #64	; 0x40
 8004f02:	4013      	ands	r3, r2
 8004f04:	d01d      	beq.n	8004f42 <UART_AdvFeatureConfig+0x11a>
  {
    assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
    assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 8004f06:	687b      	ldr	r3, [r7, #4]
 8004f08:	681b      	ldr	r3, [r3, #0]
 8004f0a:	685b      	ldr	r3, [r3, #4]
 8004f0c:	4a1d      	ldr	r2, [pc, #116]	; (8004f84 <UART_AdvFeatureConfig+0x15c>)
 8004f0e:	4013      	ands	r3, r2
 8004f10:	0019      	movs	r1, r3
 8004f12:	687b      	ldr	r3, [r7, #4]
 8004f14:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8004f16:	687b      	ldr	r3, [r7, #4]
 8004f18:	681b      	ldr	r3, [r3, #0]
 8004f1a:	430a      	orrs	r2, r1
 8004f1c:	605a      	str	r2, [r3, #4]
    /* set auto Baudrate detection parameters if detection is enabled */
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 8004f1e:	687b      	ldr	r3, [r7, #4]
 8004f20:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8004f22:	2380      	movs	r3, #128	; 0x80
 8004f24:	035b      	lsls	r3, r3, #13
 8004f26:	429a      	cmp	r2, r3
 8004f28:	d10b      	bne.n	8004f42 <UART_AdvFeatureConfig+0x11a>
    {
      assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 8004f2a:	687b      	ldr	r3, [r7, #4]
 8004f2c:	681b      	ldr	r3, [r3, #0]
 8004f2e:	685b      	ldr	r3, [r3, #4]
 8004f30:	4a15      	ldr	r2, [pc, #84]	; (8004f88 <UART_AdvFeatureConfig+0x160>)
 8004f32:	4013      	ands	r3, r2
 8004f34:	0019      	movs	r1, r3
 8004f36:	687b      	ldr	r3, [r7, #4]
 8004f38:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8004f3a:	687b      	ldr	r3, [r7, #4]
 8004f3c:	681b      	ldr	r3, [r3, #0]
 8004f3e:	430a      	orrs	r2, r1
 8004f40:	605a      	str	r2, [r3, #4]
    }
  }

  /* if required, configure MSB first on communication line */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 8004f42:	687b      	ldr	r3, [r7, #4]
 8004f44:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004f46:	2280      	movs	r2, #128	; 0x80
 8004f48:	4013      	ands	r3, r2
 8004f4a:	d00b      	beq.n	8004f64 <UART_AdvFeatureConfig+0x13c>
  {
    assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 8004f4c:	687b      	ldr	r3, [r7, #4]
 8004f4e:	681b      	ldr	r3, [r3, #0]
 8004f50:	685b      	ldr	r3, [r3, #4]
 8004f52:	4a0e      	ldr	r2, [pc, #56]	; (8004f8c <UART_AdvFeatureConfig+0x164>)
 8004f54:	4013      	ands	r3, r2
 8004f56:	0019      	movs	r1, r3
 8004f58:	687b      	ldr	r3, [r7, #4]
 8004f5a:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 8004f5c:	687b      	ldr	r3, [r7, #4]
 8004f5e:	681b      	ldr	r3, [r3, #0]
 8004f60:	430a      	orrs	r2, r1
 8004f62:	605a      	str	r2, [r3, #4]
  }
}
 8004f64:	46c0      	nop			; (mov r8, r8)
 8004f66:	46bd      	mov	sp, r7
 8004f68:	b002      	add	sp, #8
 8004f6a:	bd80      	pop	{r7, pc}
 8004f6c:	fffdffff 	.word	0xfffdffff
 8004f70:	fffeffff 	.word	0xfffeffff
 8004f74:	fffbffff 	.word	0xfffbffff
 8004f78:	ffff7fff 	.word	0xffff7fff
 8004f7c:	ffffefff 	.word	0xffffefff
 8004f80:	ffffdfff 	.word	0xffffdfff
 8004f84:	ffefffff 	.word	0xffefffff
 8004f88:	ff9fffff 	.word	0xff9fffff
 8004f8c:	fff7ffff 	.word	0xfff7ffff

08004f90 <UART_CheckIdleState>:
  * @brief Check the UART Idle State.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
{
 8004f90:	b580      	push	{r7, lr}
 8004f92:	b086      	sub	sp, #24
 8004f94:	af02      	add	r7, sp, #8
 8004f96:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;

  /* Initialize the UART ErrorCode */
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8004f98:	687b      	ldr	r3, [r7, #4]
 8004f9a:	2200      	movs	r2, #0
 8004f9c:	67da      	str	r2, [r3, #124]	; 0x7c

  /* Init tickstart for timeout managment*/
  tickstart = HAL_GetTick();
 8004f9e:	f7fe fd6f 	bl	8003a80 <HAL_GetTick>
 8004fa2:	0003      	movs	r3, r0
 8004fa4:	60fb      	str	r3, [r7, #12]

  /* Check if the Transmitter is enabled */
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 8004fa6:	687b      	ldr	r3, [r7, #4]
 8004fa8:	681b      	ldr	r3, [r3, #0]
 8004faa:	681b      	ldr	r3, [r3, #0]
 8004fac:	2208      	movs	r2, #8
 8004fae:	4013      	ands	r3, r2
 8004fb0:	2b08      	cmp	r3, #8
 8004fb2:	d10d      	bne.n	8004fd0 <UART_CheckIdleState+0x40>
  {
    /* Wait until TEACK flag is set */
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 8004fb4:	68fa      	ldr	r2, [r7, #12]
 8004fb6:	2380      	movs	r3, #128	; 0x80
 8004fb8:	0399      	lsls	r1, r3, #14
 8004fba:	6878      	ldr	r0, [r7, #4]
 8004fbc:	4b16      	ldr	r3, [pc, #88]	; (8005018 <UART_CheckIdleState+0x88>)
 8004fbe:	9300      	str	r3, [sp, #0]
 8004fc0:	0013      	movs	r3, r2
 8004fc2:	2200      	movs	r2, #0
 8004fc4:	f000 f82a 	bl	800501c <UART_WaitOnFlagUntilTimeout>
 8004fc8:	1e03      	subs	r3, r0, #0
 8004fca:	d001      	beq.n	8004fd0 <UART_CheckIdleState+0x40>
    {
      /* Timeout occurred */
      return HAL_TIMEOUT;
 8004fcc:	2303      	movs	r3, #3
 8004fce:	e01f      	b.n	8005010 <UART_CheckIdleState+0x80>
    }
  }

  /* Check if the Receiver is enabled */
  if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
 8004fd0:	687b      	ldr	r3, [r7, #4]
 8004fd2:	681b      	ldr	r3, [r3, #0]
 8004fd4:	681b      	ldr	r3, [r3, #0]
 8004fd6:	2204      	movs	r2, #4
 8004fd8:	4013      	ands	r3, r2
 8004fda:	2b04      	cmp	r3, #4
 8004fdc:	d10d      	bne.n	8004ffa <UART_CheckIdleState+0x6a>
  {
    /* Wait until REACK flag is set */
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 8004fde:	68fa      	ldr	r2, [r7, #12]
 8004fe0:	2380      	movs	r3, #128	; 0x80
 8004fe2:	03d9      	lsls	r1, r3, #15
 8004fe4:	6878      	ldr	r0, [r7, #4]
 8004fe6:	4b0c      	ldr	r3, [pc, #48]	; (8005018 <UART_CheckIdleState+0x88>)
 8004fe8:	9300      	str	r3, [sp, #0]
 8004fea:	0013      	movs	r3, r2
 8004fec:	2200      	movs	r2, #0
 8004fee:	f000 f815 	bl	800501c <UART_WaitOnFlagUntilTimeout>
 8004ff2:	1e03      	subs	r3, r0, #0
 8004ff4:	d001      	beq.n	8004ffa <UART_CheckIdleState+0x6a>
    {
      /* Timeout occurred */
      return HAL_TIMEOUT;
 8004ff6:	2303      	movs	r3, #3
 8004ff8:	e00a      	b.n	8005010 <UART_CheckIdleState+0x80>
    }
  }

  /* Initialize the UART State */
  huart->gState = HAL_UART_STATE_READY;
 8004ffa:	687b      	ldr	r3, [r7, #4]
 8004ffc:	2220      	movs	r2, #32
 8004ffe:	675a      	str	r2, [r3, #116]	; 0x74
  huart->RxState = HAL_UART_STATE_READY;
 8005000:	687b      	ldr	r3, [r7, #4]
 8005002:	2220      	movs	r2, #32
 8005004:	679a      	str	r2, [r3, #120]	; 0x78

  __HAL_UNLOCK(huart);
 8005006:	687b      	ldr	r3, [r7, #4]
 8005008:	2270      	movs	r2, #112	; 0x70
 800500a:	2100      	movs	r1, #0
 800500c:	5499      	strb	r1, [r3, r2]

  return HAL_OK;
 800500e:	2300      	movs	r3, #0
}
 8005010:	0018      	movs	r0, r3
 8005012:	46bd      	mov	sp, r7
 8005014:	b004      	add	sp, #16
 8005016:	bd80      	pop	{r7, pc}
 8005018:	01ffffff 	.word	0x01ffffff

0800501c <UART_WaitOnFlagUntilTimeout>:
  * @param Timeout   Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status,
                                              uint32_t Tickstart, uint32_t Timeout)
{
 800501c:	b580      	push	{r7, lr}
 800501e:	b084      	sub	sp, #16
 8005020:	af00      	add	r7, sp, #0
 8005022:	60f8      	str	r0, [r7, #12]
 8005024:	60b9      	str	r1, [r7, #8]
 8005026:	603b      	str	r3, [r7, #0]
 8005028:	1dfb      	adds	r3, r7, #7
 800502a:	701a      	strb	r2, [r3, #0]
  /* Wait until flag is set */
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 800502c:	e05d      	b.n	80050ea <UART_WaitOnFlagUntilTimeout+0xce>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 800502e:	69bb      	ldr	r3, [r7, #24]
 8005030:	3301      	adds	r3, #1
 8005032:	d05a      	beq.n	80050ea <UART_WaitOnFlagUntilTimeout+0xce>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005034:	f7fe fd24 	bl	8003a80 <HAL_GetTick>
 8005038:	0002      	movs	r2, r0
 800503a:	683b      	ldr	r3, [r7, #0]
 800503c:	1ad3      	subs	r3, r2, r3
 800503e:	69ba      	ldr	r2, [r7, #24]
 8005040:	429a      	cmp	r2, r3
 8005042:	d302      	bcc.n	800504a <UART_WaitOnFlagUntilTimeout+0x2e>
 8005044:	69bb      	ldr	r3, [r7, #24]
 8005046:	2b00      	cmp	r3, #0
 8005048:	d11b      	bne.n	8005082 <UART_WaitOnFlagUntilTimeout+0x66>
      {
        /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for the interrupt process */
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 800504a:	68fb      	ldr	r3, [r7, #12]
 800504c:	681b      	ldr	r3, [r3, #0]
 800504e:	681a      	ldr	r2, [r3, #0]
 8005050:	68fb      	ldr	r3, [r7, #12]
 8005052:	681b      	ldr	r3, [r3, #0]
 8005054:	492f      	ldr	r1, [pc, #188]	; (8005114 <UART_WaitOnFlagUntilTimeout+0xf8>)
 8005056:	400a      	ands	r2, r1
 8005058:	601a      	str	r2, [r3, #0]
        CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 800505a:	68fb      	ldr	r3, [r7, #12]
 800505c:	681b      	ldr	r3, [r3, #0]
 800505e:	689a      	ldr	r2, [r3, #8]
 8005060:	68fb      	ldr	r3, [r7, #12]
 8005062:	681b      	ldr	r3, [r3, #0]
 8005064:	2101      	movs	r1, #1
 8005066:	438a      	bics	r2, r1
 8005068:	609a      	str	r2, [r3, #8]

        huart->gState = HAL_UART_STATE_READY;
 800506a:	68fb      	ldr	r3, [r7, #12]
 800506c:	2220      	movs	r2, #32
 800506e:	675a      	str	r2, [r3, #116]	; 0x74
        huart->RxState = HAL_UART_STATE_READY;
 8005070:	68fb      	ldr	r3, [r7, #12]
 8005072:	2220      	movs	r2, #32
 8005074:	679a      	str	r2, [r3, #120]	; 0x78

        __HAL_UNLOCK(huart);
 8005076:	68fb      	ldr	r3, [r7, #12]
 8005078:	2270      	movs	r2, #112	; 0x70
 800507a:	2100      	movs	r1, #0
 800507c:	5499      	strb	r1, [r3, r2]

        return HAL_TIMEOUT;
 800507e:	2303      	movs	r3, #3
 8005080:	e043      	b.n	800510a <UART_WaitOnFlagUntilTimeout+0xee>
      }

      if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
 8005082:	68fb      	ldr	r3, [r7, #12]
 8005084:	681b      	ldr	r3, [r3, #0]
 8005086:	681b      	ldr	r3, [r3, #0]
 8005088:	2204      	movs	r2, #4
 800508a:	4013      	ands	r3, r2
 800508c:	d02d      	beq.n	80050ea <UART_WaitOnFlagUntilTimeout+0xce>
      {
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 800508e:	68fb      	ldr	r3, [r7, #12]
 8005090:	681b      	ldr	r3, [r3, #0]
 8005092:	69da      	ldr	r2, [r3, #28]
 8005094:	2380      	movs	r3, #128	; 0x80
 8005096:	011b      	lsls	r3, r3, #4
 8005098:	401a      	ands	r2, r3
 800509a:	2380      	movs	r3, #128	; 0x80
 800509c:	011b      	lsls	r3, r3, #4
 800509e:	429a      	cmp	r2, r3
 80050a0:	d123      	bne.n	80050ea <UART_WaitOnFlagUntilTimeout+0xce>
        {
          /* Clear Receiver Timeout flag*/
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 80050a2:	68fb      	ldr	r3, [r7, #12]
 80050a4:	681b      	ldr	r3, [r3, #0]
 80050a6:	2280      	movs	r2, #128	; 0x80
 80050a8:	0112      	lsls	r2, r2, #4
 80050aa:	621a      	str	r2, [r3, #32]
          
          /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for the interrupt process */
          CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 80050ac:	68fb      	ldr	r3, [r7, #12]
 80050ae:	681b      	ldr	r3, [r3, #0]
 80050b0:	681a      	ldr	r2, [r3, #0]
 80050b2:	68fb      	ldr	r3, [r7, #12]
 80050b4:	681b      	ldr	r3, [r3, #0]
 80050b6:	4917      	ldr	r1, [pc, #92]	; (8005114 <UART_WaitOnFlagUntilTimeout+0xf8>)
 80050b8:	400a      	ands	r2, r1
 80050ba:	601a      	str	r2, [r3, #0]
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 80050bc:	68fb      	ldr	r3, [r7, #12]
 80050be:	681b      	ldr	r3, [r3, #0]
 80050c0:	689a      	ldr	r2, [r3, #8]
 80050c2:	68fb      	ldr	r3, [r7, #12]
 80050c4:	681b      	ldr	r3, [r3, #0]
 80050c6:	2101      	movs	r1, #1
 80050c8:	438a      	bics	r2, r1
 80050ca:	609a      	str	r2, [r3, #8]

          huart->gState = HAL_UART_STATE_READY;
 80050cc:	68fb      	ldr	r3, [r7, #12]
 80050ce:	2220      	movs	r2, #32
 80050d0:	675a      	str	r2, [r3, #116]	; 0x74
          huart->RxState = HAL_UART_STATE_READY;
 80050d2:	68fb      	ldr	r3, [r7, #12]
 80050d4:	2220      	movs	r2, #32
 80050d6:	679a      	str	r2, [r3, #120]	; 0x78
          huart->ErrorCode = HAL_UART_ERROR_RTO;
 80050d8:	68fb      	ldr	r3, [r7, #12]
 80050da:	2220      	movs	r2, #32
 80050dc:	67da      	str	r2, [r3, #124]	; 0x7c
          
          /* Process Unlocked */
          __HAL_UNLOCK(huart);
 80050de:	68fb      	ldr	r3, [r7, #12]
 80050e0:	2270      	movs	r2, #112	; 0x70
 80050e2:	2100      	movs	r1, #0
 80050e4:	5499      	strb	r1, [r3, r2]
          
          return HAL_TIMEOUT;
 80050e6:	2303      	movs	r3, #3
 80050e8:	e00f      	b.n	800510a <UART_WaitOnFlagUntilTimeout+0xee>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 80050ea:	68fb      	ldr	r3, [r7, #12]
 80050ec:	681b      	ldr	r3, [r3, #0]
 80050ee:	69db      	ldr	r3, [r3, #28]
 80050f0:	68ba      	ldr	r2, [r7, #8]
 80050f2:	4013      	ands	r3, r2
 80050f4:	68ba      	ldr	r2, [r7, #8]
 80050f6:	1ad3      	subs	r3, r2, r3
 80050f8:	425a      	negs	r2, r3
 80050fa:	4153      	adcs	r3, r2
 80050fc:	b2db      	uxtb	r3, r3
 80050fe:	001a      	movs	r2, r3
 8005100:	1dfb      	adds	r3, r7, #7
 8005102:	781b      	ldrb	r3, [r3, #0]
 8005104:	429a      	cmp	r2, r3
 8005106:	d092      	beq.n	800502e <UART_WaitOnFlagUntilTimeout+0x12>
        }
      }
    }
  }
  return HAL_OK;
 8005108:	2300      	movs	r3, #0
}
 800510a:	0018      	movs	r0, r3
 800510c:	46bd      	mov	sp, r7
 800510e:	b004      	add	sp, #16
 8005110:	bd80      	pop	{r7, pc}
 8005112:	46c0      	nop			; (mov r8, r8)
 8005114:	fffffe5f 	.word	0xfffffe5f

08005118 <__errno>:
 8005118:	4b01      	ldr	r3, [pc, #4]	; (8005120 <__errno+0x8>)
 800511a:	6818      	ldr	r0, [r3, #0]
 800511c:	4770      	bx	lr
 800511e:	46c0      	nop			; (mov r8, r8)
 8005120:	20000018 	.word	0x20000018

08005124 <__libc_init_array>:
 8005124:	b570      	push	{r4, r5, r6, lr}
 8005126:	2600      	movs	r6, #0
 8005128:	4d0c      	ldr	r5, [pc, #48]	; (800515c <__libc_init_array+0x38>)
 800512a:	4c0d      	ldr	r4, [pc, #52]	; (8005160 <__libc_init_array+0x3c>)
 800512c:	1b64      	subs	r4, r4, r5
 800512e:	10a4      	asrs	r4, r4, #2
 8005130:	42a6      	cmp	r6, r4
 8005132:	d109      	bne.n	8005148 <__libc_init_array+0x24>
 8005134:	2600      	movs	r6, #0
 8005136:	f002 f8d1 	bl	80072dc <_init>
 800513a:	4d0a      	ldr	r5, [pc, #40]	; (8005164 <__libc_init_array+0x40>)
 800513c:	4c0a      	ldr	r4, [pc, #40]	; (8005168 <__libc_init_array+0x44>)
 800513e:	1b64      	subs	r4, r4, r5
 8005140:	10a4      	asrs	r4, r4, #2
 8005142:	42a6      	cmp	r6, r4
 8005144:	d105      	bne.n	8005152 <__libc_init_array+0x2e>
 8005146:	bd70      	pop	{r4, r5, r6, pc}
 8005148:	00b3      	lsls	r3, r6, #2
 800514a:	58eb      	ldr	r3, [r5, r3]
 800514c:	4798      	blx	r3
 800514e:	3601      	adds	r6, #1
 8005150:	e7ee      	b.n	8005130 <__libc_init_array+0xc>
 8005152:	00b3      	lsls	r3, r6, #2
 8005154:	58eb      	ldr	r3, [r5, r3]
 8005156:	4798      	blx	r3
 8005158:	3601      	adds	r6, #1
 800515a:	e7f2      	b.n	8005142 <__libc_init_array+0x1e>
 800515c:	08007708 	.word	0x08007708
 8005160:	08007708 	.word	0x08007708
 8005164:	08007708 	.word	0x08007708
 8005168:	0800770c 	.word	0x0800770c

0800516c <memset>:
 800516c:	0003      	movs	r3, r0
 800516e:	1812      	adds	r2, r2, r0
 8005170:	4293      	cmp	r3, r2
 8005172:	d100      	bne.n	8005176 <memset+0xa>
 8005174:	4770      	bx	lr
 8005176:	7019      	strb	r1, [r3, #0]
 8005178:	3301      	adds	r3, #1
 800517a:	e7f9      	b.n	8005170 <memset+0x4>

0800517c <__cvt>:
 800517c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800517e:	b08b      	sub	sp, #44	; 0x2c
 8005180:	0014      	movs	r4, r2
 8005182:	1e1d      	subs	r5, r3, #0
 8005184:	9912      	ldr	r1, [sp, #72]	; 0x48
 8005186:	da53      	bge.n	8005230 <__cvt+0xb4>
 8005188:	2480      	movs	r4, #128	; 0x80
 800518a:	0624      	lsls	r4, r4, #24
 800518c:	191b      	adds	r3, r3, r4
 800518e:	001d      	movs	r5, r3
 8005190:	0014      	movs	r4, r2
 8005192:	232d      	movs	r3, #45	; 0x2d
 8005194:	700b      	strb	r3, [r1, #0]
 8005196:	2320      	movs	r3, #32
 8005198:	9e14      	ldr	r6, [sp, #80]	; 0x50
 800519a:	2203      	movs	r2, #3
 800519c:	439e      	bics	r6, r3
 800519e:	2e46      	cmp	r6, #70	; 0x46
 80051a0:	d007      	beq.n	80051b2 <__cvt+0x36>
 80051a2:	0033      	movs	r3, r6
 80051a4:	3b45      	subs	r3, #69	; 0x45
 80051a6:	4259      	negs	r1, r3
 80051a8:	414b      	adcs	r3, r1
 80051aa:	9910      	ldr	r1, [sp, #64]	; 0x40
 80051ac:	3a01      	subs	r2, #1
 80051ae:	18cb      	adds	r3, r1, r3
 80051b0:	9310      	str	r3, [sp, #64]	; 0x40
 80051b2:	ab09      	add	r3, sp, #36	; 0x24
 80051b4:	9304      	str	r3, [sp, #16]
 80051b6:	ab08      	add	r3, sp, #32
 80051b8:	9303      	str	r3, [sp, #12]
 80051ba:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80051bc:	9200      	str	r2, [sp, #0]
 80051be:	9302      	str	r3, [sp, #8]
 80051c0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80051c2:	0022      	movs	r2, r4
 80051c4:	9301      	str	r3, [sp, #4]
 80051c6:	002b      	movs	r3, r5
 80051c8:	f000 fd0e 	bl	8005be8 <_dtoa_r>
 80051cc:	0007      	movs	r7, r0
 80051ce:	2e47      	cmp	r6, #71	; 0x47
 80051d0:	d102      	bne.n	80051d8 <__cvt+0x5c>
 80051d2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80051d4:	07db      	lsls	r3, r3, #31
 80051d6:	d524      	bpl.n	8005222 <__cvt+0xa6>
 80051d8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80051da:	18fb      	adds	r3, r7, r3
 80051dc:	9307      	str	r3, [sp, #28]
 80051de:	2e46      	cmp	r6, #70	; 0x46
 80051e0:	d114      	bne.n	800520c <__cvt+0x90>
 80051e2:	783b      	ldrb	r3, [r7, #0]
 80051e4:	2b30      	cmp	r3, #48	; 0x30
 80051e6:	d10c      	bne.n	8005202 <__cvt+0x86>
 80051e8:	2200      	movs	r2, #0
 80051ea:	2300      	movs	r3, #0
 80051ec:	0020      	movs	r0, r4
 80051ee:	0029      	movs	r1, r5
 80051f0:	f7fb f922 	bl	8000438 <__aeabi_dcmpeq>
 80051f4:	2800      	cmp	r0, #0
 80051f6:	d104      	bne.n	8005202 <__cvt+0x86>
 80051f8:	2301      	movs	r3, #1
 80051fa:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80051fc:	1a9b      	subs	r3, r3, r2
 80051fe:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8005200:	6013      	str	r3, [r2, #0]
 8005202:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8005204:	9a07      	ldr	r2, [sp, #28]
 8005206:	681b      	ldr	r3, [r3, #0]
 8005208:	18d3      	adds	r3, r2, r3
 800520a:	9307      	str	r3, [sp, #28]
 800520c:	2200      	movs	r2, #0
 800520e:	2300      	movs	r3, #0
 8005210:	0020      	movs	r0, r4
 8005212:	0029      	movs	r1, r5
 8005214:	f7fb f910 	bl	8000438 <__aeabi_dcmpeq>
 8005218:	2230      	movs	r2, #48	; 0x30
 800521a:	2800      	cmp	r0, #0
 800521c:	d00d      	beq.n	800523a <__cvt+0xbe>
 800521e:	9b07      	ldr	r3, [sp, #28]
 8005220:	9309      	str	r3, [sp, #36]	; 0x24
 8005222:	0038      	movs	r0, r7
 8005224:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005226:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8005228:	1bdb      	subs	r3, r3, r7
 800522a:	6013      	str	r3, [r2, #0]
 800522c:	b00b      	add	sp, #44	; 0x2c
 800522e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005230:	2300      	movs	r3, #0
 8005232:	e7af      	b.n	8005194 <__cvt+0x18>
 8005234:	1c59      	adds	r1, r3, #1
 8005236:	9109      	str	r1, [sp, #36]	; 0x24
 8005238:	701a      	strb	r2, [r3, #0]
 800523a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800523c:	9907      	ldr	r1, [sp, #28]
 800523e:	428b      	cmp	r3, r1
 8005240:	d3f8      	bcc.n	8005234 <__cvt+0xb8>
 8005242:	e7ee      	b.n	8005222 <__cvt+0xa6>

08005244 <__exponent>:
 8005244:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005246:	1c83      	adds	r3, r0, #2
 8005248:	b085      	sub	sp, #20
 800524a:	9301      	str	r3, [sp, #4]
 800524c:	0006      	movs	r6, r0
 800524e:	000c      	movs	r4, r1
 8005250:	7002      	strb	r2, [r0, #0]
 8005252:	232b      	movs	r3, #43	; 0x2b
 8005254:	2900      	cmp	r1, #0
 8005256:	da01      	bge.n	800525c <__exponent+0x18>
 8005258:	232d      	movs	r3, #45	; 0x2d
 800525a:	424c      	negs	r4, r1
 800525c:	7073      	strb	r3, [r6, #1]
 800525e:	2c09      	cmp	r4, #9
 8005260:	dd22      	ble.n	80052a8 <__exponent+0x64>
 8005262:	ab02      	add	r3, sp, #8
 8005264:	1ddd      	adds	r5, r3, #7
 8005266:	0020      	movs	r0, r4
 8005268:	210a      	movs	r1, #10
 800526a:	f7fb f8cf 	bl	800040c <__aeabi_idivmod>
 800526e:	1e6f      	subs	r7, r5, #1
 8005270:	3130      	adds	r1, #48	; 0x30
 8005272:	7039      	strb	r1, [r7, #0]
 8005274:	0020      	movs	r0, r4
 8005276:	210a      	movs	r1, #10
 8005278:	f7fa ffe2 	bl	8000240 <__divsi3>
 800527c:	0004      	movs	r4, r0
 800527e:	2809      	cmp	r0, #9
 8005280:	dc0b      	bgt.n	800529a <__exponent+0x56>
 8005282:	3d02      	subs	r5, #2
 8005284:	3430      	adds	r4, #48	; 0x30
 8005286:	9b01      	ldr	r3, [sp, #4]
 8005288:	702c      	strb	r4, [r5, #0]
 800528a:	aa02      	add	r2, sp, #8
 800528c:	3207      	adds	r2, #7
 800528e:	0018      	movs	r0, r3
 8005290:	42aa      	cmp	r2, r5
 8005292:	d804      	bhi.n	800529e <__exponent+0x5a>
 8005294:	1b80      	subs	r0, r0, r6
 8005296:	b005      	add	sp, #20
 8005298:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800529a:	003d      	movs	r5, r7
 800529c:	e7e3      	b.n	8005266 <__exponent+0x22>
 800529e:	782a      	ldrb	r2, [r5, #0]
 80052a0:	3501      	adds	r5, #1
 80052a2:	701a      	strb	r2, [r3, #0]
 80052a4:	3301      	adds	r3, #1
 80052a6:	e7f0      	b.n	800528a <__exponent+0x46>
 80052a8:	2330      	movs	r3, #48	; 0x30
 80052aa:	18e4      	adds	r4, r4, r3
 80052ac:	70b3      	strb	r3, [r6, #2]
 80052ae:	1d30      	adds	r0, r6, #4
 80052b0:	70f4      	strb	r4, [r6, #3]
 80052b2:	e7ef      	b.n	8005294 <__exponent+0x50>

080052b4 <_printf_float>:
 80052b4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80052b6:	b095      	sub	sp, #84	; 0x54
 80052b8:	000c      	movs	r4, r1
 80052ba:	920a      	str	r2, [sp, #40]	; 0x28
 80052bc:	930b      	str	r3, [sp, #44]	; 0x2c
 80052be:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 80052c0:	9009      	str	r0, [sp, #36]	; 0x24
 80052c2:	f001 fa71 	bl	80067a8 <_localeconv_r>
 80052c6:	6803      	ldr	r3, [r0, #0]
 80052c8:	0018      	movs	r0, r3
 80052ca:	930c      	str	r3, [sp, #48]	; 0x30
 80052cc:	f7fa ff1c 	bl	8000108 <strlen>
 80052d0:	2300      	movs	r3, #0
 80052d2:	9312      	str	r3, [sp, #72]	; 0x48
 80052d4:	6823      	ldr	r3, [r4, #0]
 80052d6:	900e      	str	r0, [sp, #56]	; 0x38
 80052d8:	930d      	str	r3, [sp, #52]	; 0x34
 80052da:	990d      	ldr	r1, [sp, #52]	; 0x34
 80052dc:	7e27      	ldrb	r7, [r4, #24]
 80052de:	682b      	ldr	r3, [r5, #0]
 80052e0:	2207      	movs	r2, #7
 80052e2:	05c9      	lsls	r1, r1, #23
 80052e4:	d545      	bpl.n	8005372 <_printf_float+0xbe>
 80052e6:	189b      	adds	r3, r3, r2
 80052e8:	4393      	bics	r3, r2
 80052ea:	001a      	movs	r2, r3
 80052ec:	3208      	adds	r2, #8
 80052ee:	602a      	str	r2, [r5, #0]
 80052f0:	681a      	ldr	r2, [r3, #0]
 80052f2:	685b      	ldr	r3, [r3, #4]
 80052f4:	64a2      	str	r2, [r4, #72]	; 0x48
 80052f6:	64e3      	str	r3, [r4, #76]	; 0x4c
 80052f8:	2201      	movs	r2, #1
 80052fa:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 80052fc:	6ca6      	ldr	r6, [r4, #72]	; 0x48
 80052fe:	006b      	lsls	r3, r5, #1
 8005300:	085b      	lsrs	r3, r3, #1
 8005302:	930f      	str	r3, [sp, #60]	; 0x3c
 8005304:	4252      	negs	r2, r2
 8005306:	4bac      	ldr	r3, [pc, #688]	; (80055b8 <_printf_float+0x304>)
 8005308:	0030      	movs	r0, r6
 800530a:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800530c:	f7fd fcd8 	bl	8002cc0 <__aeabi_dcmpun>
 8005310:	2800      	cmp	r0, #0
 8005312:	d130      	bne.n	8005376 <_printf_float+0xc2>
 8005314:	2201      	movs	r2, #1
 8005316:	4ba8      	ldr	r3, [pc, #672]	; (80055b8 <_printf_float+0x304>)
 8005318:	4252      	negs	r2, r2
 800531a:	0030      	movs	r0, r6
 800531c:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800531e:	f7fb f89b 	bl	8000458 <__aeabi_dcmple>
 8005322:	2800      	cmp	r0, #0
 8005324:	d127      	bne.n	8005376 <_printf_float+0xc2>
 8005326:	2200      	movs	r2, #0
 8005328:	2300      	movs	r3, #0
 800532a:	0030      	movs	r0, r6
 800532c:	0029      	movs	r1, r5
 800532e:	f7fb f889 	bl	8000444 <__aeabi_dcmplt>
 8005332:	2800      	cmp	r0, #0
 8005334:	d003      	beq.n	800533e <_printf_float+0x8a>
 8005336:	0023      	movs	r3, r4
 8005338:	222d      	movs	r2, #45	; 0x2d
 800533a:	3343      	adds	r3, #67	; 0x43
 800533c:	701a      	strb	r2, [r3, #0]
 800533e:	4d9f      	ldr	r5, [pc, #636]	; (80055bc <_printf_float+0x308>)
 8005340:	2f47      	cmp	r7, #71	; 0x47
 8005342:	d800      	bhi.n	8005346 <_printf_float+0x92>
 8005344:	4d9e      	ldr	r5, [pc, #632]	; (80055c0 <_printf_float+0x30c>)
 8005346:	2303      	movs	r3, #3
 8005348:	2600      	movs	r6, #0
 800534a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800534c:	6123      	str	r3, [r4, #16]
 800534e:	3301      	adds	r3, #1
 8005350:	439a      	bics	r2, r3
 8005352:	6022      	str	r2, [r4, #0]
 8005354:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8005356:	aa13      	add	r2, sp, #76	; 0x4c
 8005358:	9300      	str	r3, [sp, #0]
 800535a:	0021      	movs	r1, r4
 800535c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800535e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8005360:	f000 f9f4 	bl	800574c <_printf_common>
 8005364:	1c43      	adds	r3, r0, #1
 8005366:	d000      	beq.n	800536a <_printf_float+0xb6>
 8005368:	e093      	b.n	8005492 <_printf_float+0x1de>
 800536a:	2001      	movs	r0, #1
 800536c:	4240      	negs	r0, r0
 800536e:	b015      	add	sp, #84	; 0x54
 8005370:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005372:	3307      	adds	r3, #7
 8005374:	e7b8      	b.n	80052e8 <_printf_float+0x34>
 8005376:	0032      	movs	r2, r6
 8005378:	002b      	movs	r3, r5
 800537a:	0030      	movs	r0, r6
 800537c:	0029      	movs	r1, r5
 800537e:	f7fd fc9f 	bl	8002cc0 <__aeabi_dcmpun>
 8005382:	2800      	cmp	r0, #0
 8005384:	d004      	beq.n	8005390 <_printf_float+0xdc>
 8005386:	4d8f      	ldr	r5, [pc, #572]	; (80055c4 <_printf_float+0x310>)
 8005388:	2f47      	cmp	r7, #71	; 0x47
 800538a:	d8dc      	bhi.n	8005346 <_printf_float+0x92>
 800538c:	4d8e      	ldr	r5, [pc, #568]	; (80055c8 <_printf_float+0x314>)
 800538e:	e7da      	b.n	8005346 <_printf_float+0x92>
 8005390:	2380      	movs	r3, #128	; 0x80
 8005392:	990d      	ldr	r1, [sp, #52]	; 0x34
 8005394:	6862      	ldr	r2, [r4, #4]
 8005396:	00db      	lsls	r3, r3, #3
 8005398:	430b      	orrs	r3, r1
 800539a:	1c51      	adds	r1, r2, #1
 800539c:	d143      	bne.n	8005426 <_printf_float+0x172>
 800539e:	3207      	adds	r2, #7
 80053a0:	6062      	str	r2, [r4, #4]
 80053a2:	aa12      	add	r2, sp, #72	; 0x48
 80053a4:	2100      	movs	r1, #0
 80053a6:	9205      	str	r2, [sp, #20]
 80053a8:	aa11      	add	r2, sp, #68	; 0x44
 80053aa:	9203      	str	r2, [sp, #12]
 80053ac:	2223      	movs	r2, #35	; 0x23
 80053ae:	6023      	str	r3, [r4, #0]
 80053b0:	9106      	str	r1, [sp, #24]
 80053b2:	9301      	str	r3, [sp, #4]
 80053b4:	a908      	add	r1, sp, #32
 80053b6:	6863      	ldr	r3, [r4, #4]
 80053b8:	1852      	adds	r2, r2, r1
 80053ba:	9202      	str	r2, [sp, #8]
 80053bc:	9300      	str	r3, [sp, #0]
 80053be:	0032      	movs	r2, r6
 80053c0:	002b      	movs	r3, r5
 80053c2:	9704      	str	r7, [sp, #16]
 80053c4:	9809      	ldr	r0, [sp, #36]	; 0x24
 80053c6:	f7ff fed9 	bl	800517c <__cvt>
 80053ca:	2320      	movs	r3, #32
 80053cc:	003a      	movs	r2, r7
 80053ce:	0005      	movs	r5, r0
 80053d0:	439a      	bics	r2, r3
 80053d2:	2a47      	cmp	r2, #71	; 0x47
 80053d4:	d107      	bne.n	80053e6 <_printf_float+0x132>
 80053d6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80053d8:	1cda      	adds	r2, r3, #3
 80053da:	db02      	blt.n	80053e2 <_printf_float+0x12e>
 80053dc:	6862      	ldr	r2, [r4, #4]
 80053de:	4293      	cmp	r3, r2
 80053e0:	dd45      	ble.n	800546e <_printf_float+0x1ba>
 80053e2:	3f02      	subs	r7, #2
 80053e4:	b2ff      	uxtb	r7, r7
 80053e6:	9911      	ldr	r1, [sp, #68]	; 0x44
 80053e8:	2f65      	cmp	r7, #101	; 0x65
 80053ea:	d825      	bhi.n	8005438 <_printf_float+0x184>
 80053ec:	0020      	movs	r0, r4
 80053ee:	3901      	subs	r1, #1
 80053f0:	003a      	movs	r2, r7
 80053f2:	3050      	adds	r0, #80	; 0x50
 80053f4:	9111      	str	r1, [sp, #68]	; 0x44
 80053f6:	f7ff ff25 	bl	8005244 <__exponent>
 80053fa:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80053fc:	0006      	movs	r6, r0
 80053fe:	1813      	adds	r3, r2, r0
 8005400:	6123      	str	r3, [r4, #16]
 8005402:	2a01      	cmp	r2, #1
 8005404:	dc02      	bgt.n	800540c <_printf_float+0x158>
 8005406:	6822      	ldr	r2, [r4, #0]
 8005408:	07d2      	lsls	r2, r2, #31
 800540a:	d501      	bpl.n	8005410 <_printf_float+0x15c>
 800540c:	3301      	adds	r3, #1
 800540e:	6123      	str	r3, [r4, #16]
 8005410:	2323      	movs	r3, #35	; 0x23
 8005412:	aa08      	add	r2, sp, #32
 8005414:	189b      	adds	r3, r3, r2
 8005416:	781b      	ldrb	r3, [r3, #0]
 8005418:	2b00      	cmp	r3, #0
 800541a:	d09b      	beq.n	8005354 <_printf_float+0xa0>
 800541c:	0023      	movs	r3, r4
 800541e:	222d      	movs	r2, #45	; 0x2d
 8005420:	3343      	adds	r3, #67	; 0x43
 8005422:	701a      	strb	r2, [r3, #0]
 8005424:	e796      	b.n	8005354 <_printf_float+0xa0>
 8005426:	2f67      	cmp	r7, #103	; 0x67
 8005428:	d100      	bne.n	800542c <_printf_float+0x178>
 800542a:	e176      	b.n	800571a <_printf_float+0x466>
 800542c:	2f47      	cmp	r7, #71	; 0x47
 800542e:	d1b8      	bne.n	80053a2 <_printf_float+0xee>
 8005430:	2a00      	cmp	r2, #0
 8005432:	d1b6      	bne.n	80053a2 <_printf_float+0xee>
 8005434:	2201      	movs	r2, #1
 8005436:	e7b3      	b.n	80053a0 <_printf_float+0xec>
 8005438:	2f66      	cmp	r7, #102	; 0x66
 800543a:	d119      	bne.n	8005470 <_printf_float+0x1bc>
 800543c:	6863      	ldr	r3, [r4, #4]
 800543e:	2900      	cmp	r1, #0
 8005440:	dd0c      	ble.n	800545c <_printf_float+0x1a8>
 8005442:	6121      	str	r1, [r4, #16]
 8005444:	2b00      	cmp	r3, #0
 8005446:	d102      	bne.n	800544e <_printf_float+0x19a>
 8005448:	6822      	ldr	r2, [r4, #0]
 800544a:	07d2      	lsls	r2, r2, #31
 800544c:	d502      	bpl.n	8005454 <_printf_float+0x1a0>
 800544e:	3301      	adds	r3, #1
 8005450:	185b      	adds	r3, r3, r1
 8005452:	6123      	str	r3, [r4, #16]
 8005454:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8005456:	2600      	movs	r6, #0
 8005458:	65a3      	str	r3, [r4, #88]	; 0x58
 800545a:	e7d9      	b.n	8005410 <_printf_float+0x15c>
 800545c:	2b00      	cmp	r3, #0
 800545e:	d103      	bne.n	8005468 <_printf_float+0x1b4>
 8005460:	2201      	movs	r2, #1
 8005462:	6821      	ldr	r1, [r4, #0]
 8005464:	4211      	tst	r1, r2
 8005466:	d000      	beq.n	800546a <_printf_float+0x1b6>
 8005468:	1c9a      	adds	r2, r3, #2
 800546a:	6122      	str	r2, [r4, #16]
 800546c:	e7f2      	b.n	8005454 <_printf_float+0x1a0>
 800546e:	2767      	movs	r7, #103	; 0x67
 8005470:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8005472:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8005474:	4293      	cmp	r3, r2
 8005476:	db05      	blt.n	8005484 <_printf_float+0x1d0>
 8005478:	6822      	ldr	r2, [r4, #0]
 800547a:	6123      	str	r3, [r4, #16]
 800547c:	07d2      	lsls	r2, r2, #31
 800547e:	d5e9      	bpl.n	8005454 <_printf_float+0x1a0>
 8005480:	3301      	adds	r3, #1
 8005482:	e7e6      	b.n	8005452 <_printf_float+0x19e>
 8005484:	2101      	movs	r1, #1
 8005486:	2b00      	cmp	r3, #0
 8005488:	dc01      	bgt.n	800548e <_printf_float+0x1da>
 800548a:	1849      	adds	r1, r1, r1
 800548c:	1ac9      	subs	r1, r1, r3
 800548e:	1852      	adds	r2, r2, r1
 8005490:	e7eb      	b.n	800546a <_printf_float+0x1b6>
 8005492:	6822      	ldr	r2, [r4, #0]
 8005494:	0553      	lsls	r3, r2, #21
 8005496:	d408      	bmi.n	80054aa <_printf_float+0x1f6>
 8005498:	6923      	ldr	r3, [r4, #16]
 800549a:	002a      	movs	r2, r5
 800549c:	990a      	ldr	r1, [sp, #40]	; 0x28
 800549e:	9809      	ldr	r0, [sp, #36]	; 0x24
 80054a0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80054a2:	47a8      	blx	r5
 80054a4:	1c43      	adds	r3, r0, #1
 80054a6:	d129      	bne.n	80054fc <_printf_float+0x248>
 80054a8:	e75f      	b.n	800536a <_printf_float+0xb6>
 80054aa:	2f65      	cmp	r7, #101	; 0x65
 80054ac:	d800      	bhi.n	80054b0 <_printf_float+0x1fc>
 80054ae:	e0e0      	b.n	8005672 <_printf_float+0x3be>
 80054b0:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 80054b2:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 80054b4:	2200      	movs	r2, #0
 80054b6:	2300      	movs	r3, #0
 80054b8:	f7fa ffbe 	bl	8000438 <__aeabi_dcmpeq>
 80054bc:	2800      	cmp	r0, #0
 80054be:	d034      	beq.n	800552a <_printf_float+0x276>
 80054c0:	2301      	movs	r3, #1
 80054c2:	4a42      	ldr	r2, [pc, #264]	; (80055cc <_printf_float+0x318>)
 80054c4:	990a      	ldr	r1, [sp, #40]	; 0x28
 80054c6:	9809      	ldr	r0, [sp, #36]	; 0x24
 80054c8:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80054ca:	47a8      	blx	r5
 80054cc:	1c43      	adds	r3, r0, #1
 80054ce:	d100      	bne.n	80054d2 <_printf_float+0x21e>
 80054d0:	e74b      	b.n	800536a <_printf_float+0xb6>
 80054d2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80054d4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80054d6:	4293      	cmp	r3, r2
 80054d8:	db02      	blt.n	80054e0 <_printf_float+0x22c>
 80054da:	6823      	ldr	r3, [r4, #0]
 80054dc:	07db      	lsls	r3, r3, #31
 80054de:	d50d      	bpl.n	80054fc <_printf_float+0x248>
 80054e0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80054e2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80054e4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80054e6:	990a      	ldr	r1, [sp, #40]	; 0x28
 80054e8:	9809      	ldr	r0, [sp, #36]	; 0x24
 80054ea:	47a8      	blx	r5
 80054ec:	2500      	movs	r5, #0
 80054ee:	1c43      	adds	r3, r0, #1
 80054f0:	d100      	bne.n	80054f4 <_printf_float+0x240>
 80054f2:	e73a      	b.n	800536a <_printf_float+0xb6>
 80054f4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80054f6:	3b01      	subs	r3, #1
 80054f8:	42ab      	cmp	r3, r5
 80054fa:	dc0a      	bgt.n	8005512 <_printf_float+0x25e>
 80054fc:	6823      	ldr	r3, [r4, #0]
 80054fe:	079b      	lsls	r3, r3, #30
 8005500:	d500      	bpl.n	8005504 <_printf_float+0x250>
 8005502:	e108      	b.n	8005716 <_printf_float+0x462>
 8005504:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8005506:	68e0      	ldr	r0, [r4, #12]
 8005508:	4298      	cmp	r0, r3
 800550a:	db00      	blt.n	800550e <_printf_float+0x25a>
 800550c:	e72f      	b.n	800536e <_printf_float+0xba>
 800550e:	0018      	movs	r0, r3
 8005510:	e72d      	b.n	800536e <_printf_float+0xba>
 8005512:	0022      	movs	r2, r4
 8005514:	2301      	movs	r3, #1
 8005516:	321a      	adds	r2, #26
 8005518:	990a      	ldr	r1, [sp, #40]	; 0x28
 800551a:	9809      	ldr	r0, [sp, #36]	; 0x24
 800551c:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 800551e:	47b0      	blx	r6
 8005520:	1c43      	adds	r3, r0, #1
 8005522:	d100      	bne.n	8005526 <_printf_float+0x272>
 8005524:	e721      	b.n	800536a <_printf_float+0xb6>
 8005526:	3501      	adds	r5, #1
 8005528:	e7e4      	b.n	80054f4 <_printf_float+0x240>
 800552a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800552c:	2b00      	cmp	r3, #0
 800552e:	dc2d      	bgt.n	800558c <_printf_float+0x2d8>
 8005530:	2301      	movs	r3, #1
 8005532:	4a26      	ldr	r2, [pc, #152]	; (80055cc <_printf_float+0x318>)
 8005534:	990a      	ldr	r1, [sp, #40]	; 0x28
 8005536:	9809      	ldr	r0, [sp, #36]	; 0x24
 8005538:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 800553a:	47b0      	blx	r6
 800553c:	1c43      	adds	r3, r0, #1
 800553e:	d100      	bne.n	8005542 <_printf_float+0x28e>
 8005540:	e713      	b.n	800536a <_printf_float+0xb6>
 8005542:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8005544:	2b00      	cmp	r3, #0
 8005546:	d105      	bne.n	8005554 <_printf_float+0x2a0>
 8005548:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800554a:	2b00      	cmp	r3, #0
 800554c:	d102      	bne.n	8005554 <_printf_float+0x2a0>
 800554e:	6823      	ldr	r3, [r4, #0]
 8005550:	07db      	lsls	r3, r3, #31
 8005552:	d5d3      	bpl.n	80054fc <_printf_float+0x248>
 8005554:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8005556:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005558:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800555a:	990a      	ldr	r1, [sp, #40]	; 0x28
 800555c:	9809      	ldr	r0, [sp, #36]	; 0x24
 800555e:	47b0      	blx	r6
 8005560:	2600      	movs	r6, #0
 8005562:	1c43      	adds	r3, r0, #1
 8005564:	d100      	bne.n	8005568 <_printf_float+0x2b4>
 8005566:	e700      	b.n	800536a <_printf_float+0xb6>
 8005568:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800556a:	425b      	negs	r3, r3
 800556c:	42b3      	cmp	r3, r6
 800556e:	dc01      	bgt.n	8005574 <_printf_float+0x2c0>
 8005570:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8005572:	e792      	b.n	800549a <_printf_float+0x1e6>
 8005574:	0022      	movs	r2, r4
 8005576:	2301      	movs	r3, #1
 8005578:	321a      	adds	r2, #26
 800557a:	990a      	ldr	r1, [sp, #40]	; 0x28
 800557c:	9809      	ldr	r0, [sp, #36]	; 0x24
 800557e:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8005580:	47b8      	blx	r7
 8005582:	1c43      	adds	r3, r0, #1
 8005584:	d100      	bne.n	8005588 <_printf_float+0x2d4>
 8005586:	e6f0      	b.n	800536a <_printf_float+0xb6>
 8005588:	3601      	adds	r6, #1
 800558a:	e7ed      	b.n	8005568 <_printf_float+0x2b4>
 800558c:	6da3      	ldr	r3, [r4, #88]	; 0x58
 800558e:	9f12      	ldr	r7, [sp, #72]	; 0x48
 8005590:	429f      	cmp	r7, r3
 8005592:	dd00      	ble.n	8005596 <_printf_float+0x2e2>
 8005594:	001f      	movs	r7, r3
 8005596:	2f00      	cmp	r7, #0
 8005598:	dd08      	ble.n	80055ac <_printf_float+0x2f8>
 800559a:	003b      	movs	r3, r7
 800559c:	002a      	movs	r2, r5
 800559e:	990a      	ldr	r1, [sp, #40]	; 0x28
 80055a0:	9809      	ldr	r0, [sp, #36]	; 0x24
 80055a2:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 80055a4:	47b0      	blx	r6
 80055a6:	1c43      	adds	r3, r0, #1
 80055a8:	d100      	bne.n	80055ac <_printf_float+0x2f8>
 80055aa:	e6de      	b.n	800536a <_printf_float+0xb6>
 80055ac:	2300      	movs	r3, #0
 80055ae:	930d      	str	r3, [sp, #52]	; 0x34
 80055b0:	43fb      	mvns	r3, r7
 80055b2:	17db      	asrs	r3, r3, #31
 80055b4:	930f      	str	r3, [sp, #60]	; 0x3c
 80055b6:	e018      	b.n	80055ea <_printf_float+0x336>
 80055b8:	7fefffff 	.word	0x7fefffff
 80055bc:	080074ac 	.word	0x080074ac
 80055c0:	080074a8 	.word	0x080074a8
 80055c4:	080074b4 	.word	0x080074b4
 80055c8:	080074b0 	.word	0x080074b0
 80055cc:	080074b8 	.word	0x080074b8
 80055d0:	0022      	movs	r2, r4
 80055d2:	2301      	movs	r3, #1
 80055d4:	321a      	adds	r2, #26
 80055d6:	990a      	ldr	r1, [sp, #40]	; 0x28
 80055d8:	9809      	ldr	r0, [sp, #36]	; 0x24
 80055da:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 80055dc:	47b0      	blx	r6
 80055de:	1c43      	adds	r3, r0, #1
 80055e0:	d100      	bne.n	80055e4 <_printf_float+0x330>
 80055e2:	e6c2      	b.n	800536a <_printf_float+0xb6>
 80055e4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80055e6:	3301      	adds	r3, #1
 80055e8:	930d      	str	r3, [sp, #52]	; 0x34
 80055ea:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80055ec:	6da6      	ldr	r6, [r4, #88]	; 0x58
 80055ee:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80055f0:	403b      	ands	r3, r7
 80055f2:	1af3      	subs	r3, r6, r3
 80055f4:	4293      	cmp	r3, r2
 80055f6:	dceb      	bgt.n	80055d0 <_printf_float+0x31c>
 80055f8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80055fa:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80055fc:	19ad      	adds	r5, r5, r6
 80055fe:	4293      	cmp	r3, r2
 8005600:	db10      	blt.n	8005624 <_printf_float+0x370>
 8005602:	6823      	ldr	r3, [r4, #0]
 8005604:	07db      	lsls	r3, r3, #31
 8005606:	d40d      	bmi.n	8005624 <_printf_float+0x370>
 8005608:	9f12      	ldr	r7, [sp, #72]	; 0x48
 800560a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800560c:	1bbe      	subs	r6, r7, r6
 800560e:	1aff      	subs	r7, r7, r3
 8005610:	42b7      	cmp	r7, r6
 8005612:	dd00      	ble.n	8005616 <_printf_float+0x362>
 8005614:	0037      	movs	r7, r6
 8005616:	2f00      	cmp	r7, #0
 8005618:	dc0d      	bgt.n	8005636 <_printf_float+0x382>
 800561a:	43fe      	mvns	r6, r7
 800561c:	17f3      	asrs	r3, r6, #31
 800561e:	2500      	movs	r5, #0
 8005620:	930c      	str	r3, [sp, #48]	; 0x30
 8005622:	e01c      	b.n	800565e <_printf_float+0x3aa>
 8005624:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005626:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8005628:	990a      	ldr	r1, [sp, #40]	; 0x28
 800562a:	9809      	ldr	r0, [sp, #36]	; 0x24
 800562c:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 800562e:	47b8      	blx	r7
 8005630:	1c43      	adds	r3, r0, #1
 8005632:	d1e9      	bne.n	8005608 <_printf_float+0x354>
 8005634:	e699      	b.n	800536a <_printf_float+0xb6>
 8005636:	003b      	movs	r3, r7
 8005638:	002a      	movs	r2, r5
 800563a:	990a      	ldr	r1, [sp, #40]	; 0x28
 800563c:	9809      	ldr	r0, [sp, #36]	; 0x24
 800563e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8005640:	47a8      	blx	r5
 8005642:	1c43      	adds	r3, r0, #1
 8005644:	d1e9      	bne.n	800561a <_printf_float+0x366>
 8005646:	e690      	b.n	800536a <_printf_float+0xb6>
 8005648:	0022      	movs	r2, r4
 800564a:	2301      	movs	r3, #1
 800564c:	321a      	adds	r2, #26
 800564e:	990a      	ldr	r1, [sp, #40]	; 0x28
 8005650:	9809      	ldr	r0, [sp, #36]	; 0x24
 8005652:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8005654:	47b0      	blx	r6
 8005656:	1c43      	adds	r3, r0, #1
 8005658:	d100      	bne.n	800565c <_printf_float+0x3a8>
 800565a:	e686      	b.n	800536a <_printf_float+0xb6>
 800565c:	3501      	adds	r5, #1
 800565e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8005660:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8005662:	990c      	ldr	r1, [sp, #48]	; 0x30
 8005664:	1a9b      	subs	r3, r3, r2
 8005666:	003a      	movs	r2, r7
 8005668:	400a      	ands	r2, r1
 800566a:	1a9b      	subs	r3, r3, r2
 800566c:	42ab      	cmp	r3, r5
 800566e:	dceb      	bgt.n	8005648 <_printf_float+0x394>
 8005670:	e744      	b.n	80054fc <_printf_float+0x248>
 8005672:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8005674:	2b01      	cmp	r3, #1
 8005676:	dc02      	bgt.n	800567e <_printf_float+0x3ca>
 8005678:	2301      	movs	r3, #1
 800567a:	421a      	tst	r2, r3
 800567c:	d032      	beq.n	80056e4 <_printf_float+0x430>
 800567e:	2301      	movs	r3, #1
 8005680:	002a      	movs	r2, r5
 8005682:	990a      	ldr	r1, [sp, #40]	; 0x28
 8005684:	9809      	ldr	r0, [sp, #36]	; 0x24
 8005686:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8005688:	47b8      	blx	r7
 800568a:	1c43      	adds	r3, r0, #1
 800568c:	d100      	bne.n	8005690 <_printf_float+0x3dc>
 800568e:	e66c      	b.n	800536a <_printf_float+0xb6>
 8005690:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005692:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8005694:	990a      	ldr	r1, [sp, #40]	; 0x28
 8005696:	9809      	ldr	r0, [sp, #36]	; 0x24
 8005698:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 800569a:	3501      	adds	r5, #1
 800569c:	47b8      	blx	r7
 800569e:	1c43      	adds	r3, r0, #1
 80056a0:	d100      	bne.n	80056a4 <_printf_float+0x3f0>
 80056a2:	e662      	b.n	800536a <_printf_float+0xb6>
 80056a4:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 80056a6:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 80056a8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80056aa:	2200      	movs	r2, #0
 80056ac:	1e5f      	subs	r7, r3, #1
 80056ae:	2300      	movs	r3, #0
 80056b0:	f7fa fec2 	bl	8000438 <__aeabi_dcmpeq>
 80056b4:	003b      	movs	r3, r7
 80056b6:	2800      	cmp	r0, #0
 80056b8:	d014      	beq.n	80056e4 <_printf_float+0x430>
 80056ba:	2500      	movs	r5, #0
 80056bc:	e00a      	b.n	80056d4 <_printf_float+0x420>
 80056be:	0022      	movs	r2, r4
 80056c0:	2301      	movs	r3, #1
 80056c2:	321a      	adds	r2, #26
 80056c4:	990a      	ldr	r1, [sp, #40]	; 0x28
 80056c6:	9809      	ldr	r0, [sp, #36]	; 0x24
 80056c8:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 80056ca:	47b8      	blx	r7
 80056cc:	1c43      	adds	r3, r0, #1
 80056ce:	d100      	bne.n	80056d2 <_printf_float+0x41e>
 80056d0:	e64b      	b.n	800536a <_printf_float+0xb6>
 80056d2:	3501      	adds	r5, #1
 80056d4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80056d6:	3b01      	subs	r3, #1
 80056d8:	42ab      	cmp	r3, r5
 80056da:	dcf0      	bgt.n	80056be <_printf_float+0x40a>
 80056dc:	0022      	movs	r2, r4
 80056de:	0033      	movs	r3, r6
 80056e0:	3250      	adds	r2, #80	; 0x50
 80056e2:	e6db      	b.n	800549c <_printf_float+0x1e8>
 80056e4:	002a      	movs	r2, r5
 80056e6:	990a      	ldr	r1, [sp, #40]	; 0x28
 80056e8:	9809      	ldr	r0, [sp, #36]	; 0x24
 80056ea:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80056ec:	47a8      	blx	r5
 80056ee:	1c43      	adds	r3, r0, #1
 80056f0:	d1f4      	bne.n	80056dc <_printf_float+0x428>
 80056f2:	e63a      	b.n	800536a <_printf_float+0xb6>
 80056f4:	0022      	movs	r2, r4
 80056f6:	2301      	movs	r3, #1
 80056f8:	3219      	adds	r2, #25
 80056fa:	990a      	ldr	r1, [sp, #40]	; 0x28
 80056fc:	9809      	ldr	r0, [sp, #36]	; 0x24
 80056fe:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8005700:	47b0      	blx	r6
 8005702:	1c43      	adds	r3, r0, #1
 8005704:	d100      	bne.n	8005708 <_printf_float+0x454>
 8005706:	e630      	b.n	800536a <_printf_float+0xb6>
 8005708:	3501      	adds	r5, #1
 800570a:	68e3      	ldr	r3, [r4, #12]
 800570c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800570e:	1a9b      	subs	r3, r3, r2
 8005710:	42ab      	cmp	r3, r5
 8005712:	dcef      	bgt.n	80056f4 <_printf_float+0x440>
 8005714:	e6f6      	b.n	8005504 <_printf_float+0x250>
 8005716:	2500      	movs	r5, #0
 8005718:	e7f7      	b.n	800570a <_printf_float+0x456>
 800571a:	2a00      	cmp	r2, #0
 800571c:	d100      	bne.n	8005720 <_printf_float+0x46c>
 800571e:	e689      	b.n	8005434 <_printf_float+0x180>
 8005720:	2100      	movs	r1, #0
 8005722:	9106      	str	r1, [sp, #24]
 8005724:	a912      	add	r1, sp, #72	; 0x48
 8005726:	9105      	str	r1, [sp, #20]
 8005728:	a911      	add	r1, sp, #68	; 0x44
 800572a:	9103      	str	r1, [sp, #12]
 800572c:	2123      	movs	r1, #35	; 0x23
 800572e:	a808      	add	r0, sp, #32
 8005730:	1809      	adds	r1, r1, r0
 8005732:	6023      	str	r3, [r4, #0]
 8005734:	9301      	str	r3, [sp, #4]
 8005736:	9200      	str	r2, [sp, #0]
 8005738:	002b      	movs	r3, r5
 800573a:	9704      	str	r7, [sp, #16]
 800573c:	9102      	str	r1, [sp, #8]
 800573e:	0032      	movs	r2, r6
 8005740:	9809      	ldr	r0, [sp, #36]	; 0x24
 8005742:	f7ff fd1b 	bl	800517c <__cvt>
 8005746:	0005      	movs	r5, r0
 8005748:	e645      	b.n	80053d6 <_printf_float+0x122>
 800574a:	46c0      	nop			; (mov r8, r8)

0800574c <_printf_common>:
 800574c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800574e:	0015      	movs	r5, r2
 8005750:	9301      	str	r3, [sp, #4]
 8005752:	688a      	ldr	r2, [r1, #8]
 8005754:	690b      	ldr	r3, [r1, #16]
 8005756:	9000      	str	r0, [sp, #0]
 8005758:	000c      	movs	r4, r1
 800575a:	4293      	cmp	r3, r2
 800575c:	da00      	bge.n	8005760 <_printf_common+0x14>
 800575e:	0013      	movs	r3, r2
 8005760:	0022      	movs	r2, r4
 8005762:	602b      	str	r3, [r5, #0]
 8005764:	3243      	adds	r2, #67	; 0x43
 8005766:	7812      	ldrb	r2, [r2, #0]
 8005768:	2a00      	cmp	r2, #0
 800576a:	d001      	beq.n	8005770 <_printf_common+0x24>
 800576c:	3301      	adds	r3, #1
 800576e:	602b      	str	r3, [r5, #0]
 8005770:	6823      	ldr	r3, [r4, #0]
 8005772:	069b      	lsls	r3, r3, #26
 8005774:	d502      	bpl.n	800577c <_printf_common+0x30>
 8005776:	682b      	ldr	r3, [r5, #0]
 8005778:	3302      	adds	r3, #2
 800577a:	602b      	str	r3, [r5, #0]
 800577c:	2706      	movs	r7, #6
 800577e:	6823      	ldr	r3, [r4, #0]
 8005780:	401f      	ands	r7, r3
 8005782:	d027      	beq.n	80057d4 <_printf_common+0x88>
 8005784:	0023      	movs	r3, r4
 8005786:	3343      	adds	r3, #67	; 0x43
 8005788:	781b      	ldrb	r3, [r3, #0]
 800578a:	1e5a      	subs	r2, r3, #1
 800578c:	4193      	sbcs	r3, r2
 800578e:	6822      	ldr	r2, [r4, #0]
 8005790:	0692      	lsls	r2, r2, #26
 8005792:	d430      	bmi.n	80057f6 <_printf_common+0xaa>
 8005794:	0022      	movs	r2, r4
 8005796:	9901      	ldr	r1, [sp, #4]
 8005798:	3243      	adds	r2, #67	; 0x43
 800579a:	9800      	ldr	r0, [sp, #0]
 800579c:	9e08      	ldr	r6, [sp, #32]
 800579e:	47b0      	blx	r6
 80057a0:	1c43      	adds	r3, r0, #1
 80057a2:	d025      	beq.n	80057f0 <_printf_common+0xa4>
 80057a4:	2306      	movs	r3, #6
 80057a6:	6820      	ldr	r0, [r4, #0]
 80057a8:	682a      	ldr	r2, [r5, #0]
 80057aa:	68e1      	ldr	r1, [r4, #12]
 80057ac:	4003      	ands	r3, r0
 80057ae:	2500      	movs	r5, #0
 80057b0:	2b04      	cmp	r3, #4
 80057b2:	d103      	bne.n	80057bc <_printf_common+0x70>
 80057b4:	1a8d      	subs	r5, r1, r2
 80057b6:	43eb      	mvns	r3, r5
 80057b8:	17db      	asrs	r3, r3, #31
 80057ba:	401d      	ands	r5, r3
 80057bc:	68a3      	ldr	r3, [r4, #8]
 80057be:	6922      	ldr	r2, [r4, #16]
 80057c0:	4293      	cmp	r3, r2
 80057c2:	dd01      	ble.n	80057c8 <_printf_common+0x7c>
 80057c4:	1a9b      	subs	r3, r3, r2
 80057c6:	18ed      	adds	r5, r5, r3
 80057c8:	2700      	movs	r7, #0
 80057ca:	42bd      	cmp	r5, r7
 80057cc:	d120      	bne.n	8005810 <_printf_common+0xc4>
 80057ce:	2000      	movs	r0, #0
 80057d0:	e010      	b.n	80057f4 <_printf_common+0xa8>
 80057d2:	3701      	adds	r7, #1
 80057d4:	68e3      	ldr	r3, [r4, #12]
 80057d6:	682a      	ldr	r2, [r5, #0]
 80057d8:	1a9b      	subs	r3, r3, r2
 80057da:	42bb      	cmp	r3, r7
 80057dc:	ddd2      	ble.n	8005784 <_printf_common+0x38>
 80057de:	0022      	movs	r2, r4
 80057e0:	2301      	movs	r3, #1
 80057e2:	3219      	adds	r2, #25
 80057e4:	9901      	ldr	r1, [sp, #4]
 80057e6:	9800      	ldr	r0, [sp, #0]
 80057e8:	9e08      	ldr	r6, [sp, #32]
 80057ea:	47b0      	blx	r6
 80057ec:	1c43      	adds	r3, r0, #1
 80057ee:	d1f0      	bne.n	80057d2 <_printf_common+0x86>
 80057f0:	2001      	movs	r0, #1
 80057f2:	4240      	negs	r0, r0
 80057f4:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80057f6:	2030      	movs	r0, #48	; 0x30
 80057f8:	18e1      	adds	r1, r4, r3
 80057fa:	3143      	adds	r1, #67	; 0x43
 80057fc:	7008      	strb	r0, [r1, #0]
 80057fe:	0021      	movs	r1, r4
 8005800:	1c5a      	adds	r2, r3, #1
 8005802:	3145      	adds	r1, #69	; 0x45
 8005804:	7809      	ldrb	r1, [r1, #0]
 8005806:	18a2      	adds	r2, r4, r2
 8005808:	3243      	adds	r2, #67	; 0x43
 800580a:	3302      	adds	r3, #2
 800580c:	7011      	strb	r1, [r2, #0]
 800580e:	e7c1      	b.n	8005794 <_printf_common+0x48>
 8005810:	0022      	movs	r2, r4
 8005812:	2301      	movs	r3, #1
 8005814:	321a      	adds	r2, #26
 8005816:	9901      	ldr	r1, [sp, #4]
 8005818:	9800      	ldr	r0, [sp, #0]
 800581a:	9e08      	ldr	r6, [sp, #32]
 800581c:	47b0      	blx	r6
 800581e:	1c43      	adds	r3, r0, #1
 8005820:	d0e6      	beq.n	80057f0 <_printf_common+0xa4>
 8005822:	3701      	adds	r7, #1
 8005824:	e7d1      	b.n	80057ca <_printf_common+0x7e>
	...

08005828 <_printf_i>:
 8005828:	b5f0      	push	{r4, r5, r6, r7, lr}
 800582a:	b089      	sub	sp, #36	; 0x24
 800582c:	9204      	str	r2, [sp, #16]
 800582e:	000a      	movs	r2, r1
 8005830:	3243      	adds	r2, #67	; 0x43
 8005832:	9305      	str	r3, [sp, #20]
 8005834:	9003      	str	r0, [sp, #12]
 8005836:	9202      	str	r2, [sp, #8]
 8005838:	7e0a      	ldrb	r2, [r1, #24]
 800583a:	000c      	movs	r4, r1
 800583c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800583e:	2a6e      	cmp	r2, #110	; 0x6e
 8005840:	d100      	bne.n	8005844 <_printf_i+0x1c>
 8005842:	e086      	b.n	8005952 <_printf_i+0x12a>
 8005844:	d81f      	bhi.n	8005886 <_printf_i+0x5e>
 8005846:	2a63      	cmp	r2, #99	; 0x63
 8005848:	d033      	beq.n	80058b2 <_printf_i+0x8a>
 800584a:	d808      	bhi.n	800585e <_printf_i+0x36>
 800584c:	2a00      	cmp	r2, #0
 800584e:	d100      	bne.n	8005852 <_printf_i+0x2a>
 8005850:	e08c      	b.n	800596c <_printf_i+0x144>
 8005852:	2a58      	cmp	r2, #88	; 0x58
 8005854:	d04d      	beq.n	80058f2 <_printf_i+0xca>
 8005856:	0025      	movs	r5, r4
 8005858:	3542      	adds	r5, #66	; 0x42
 800585a:	702a      	strb	r2, [r5, #0]
 800585c:	e030      	b.n	80058c0 <_printf_i+0x98>
 800585e:	2a64      	cmp	r2, #100	; 0x64
 8005860:	d001      	beq.n	8005866 <_printf_i+0x3e>
 8005862:	2a69      	cmp	r2, #105	; 0x69
 8005864:	d1f7      	bne.n	8005856 <_printf_i+0x2e>
 8005866:	6819      	ldr	r1, [r3, #0]
 8005868:	6825      	ldr	r5, [r4, #0]
 800586a:	1d0a      	adds	r2, r1, #4
 800586c:	0628      	lsls	r0, r5, #24
 800586e:	d529      	bpl.n	80058c4 <_printf_i+0x9c>
 8005870:	6808      	ldr	r0, [r1, #0]
 8005872:	601a      	str	r2, [r3, #0]
 8005874:	2800      	cmp	r0, #0
 8005876:	da03      	bge.n	8005880 <_printf_i+0x58>
 8005878:	232d      	movs	r3, #45	; 0x2d
 800587a:	9a02      	ldr	r2, [sp, #8]
 800587c:	4240      	negs	r0, r0
 800587e:	7013      	strb	r3, [r2, #0]
 8005880:	4e6b      	ldr	r6, [pc, #428]	; (8005a30 <_printf_i+0x208>)
 8005882:	270a      	movs	r7, #10
 8005884:	e04f      	b.n	8005926 <_printf_i+0xfe>
 8005886:	2a73      	cmp	r2, #115	; 0x73
 8005888:	d074      	beq.n	8005974 <_printf_i+0x14c>
 800588a:	d808      	bhi.n	800589e <_printf_i+0x76>
 800588c:	2a6f      	cmp	r2, #111	; 0x6f
 800588e:	d01f      	beq.n	80058d0 <_printf_i+0xa8>
 8005890:	2a70      	cmp	r2, #112	; 0x70
 8005892:	d1e0      	bne.n	8005856 <_printf_i+0x2e>
 8005894:	2220      	movs	r2, #32
 8005896:	6809      	ldr	r1, [r1, #0]
 8005898:	430a      	orrs	r2, r1
 800589a:	6022      	str	r2, [r4, #0]
 800589c:	e003      	b.n	80058a6 <_printf_i+0x7e>
 800589e:	2a75      	cmp	r2, #117	; 0x75
 80058a0:	d016      	beq.n	80058d0 <_printf_i+0xa8>
 80058a2:	2a78      	cmp	r2, #120	; 0x78
 80058a4:	d1d7      	bne.n	8005856 <_printf_i+0x2e>
 80058a6:	0022      	movs	r2, r4
 80058a8:	2178      	movs	r1, #120	; 0x78
 80058aa:	3245      	adds	r2, #69	; 0x45
 80058ac:	7011      	strb	r1, [r2, #0]
 80058ae:	4e61      	ldr	r6, [pc, #388]	; (8005a34 <_printf_i+0x20c>)
 80058b0:	e022      	b.n	80058f8 <_printf_i+0xd0>
 80058b2:	0025      	movs	r5, r4
 80058b4:	681a      	ldr	r2, [r3, #0]
 80058b6:	3542      	adds	r5, #66	; 0x42
 80058b8:	1d11      	adds	r1, r2, #4
 80058ba:	6019      	str	r1, [r3, #0]
 80058bc:	6813      	ldr	r3, [r2, #0]
 80058be:	702b      	strb	r3, [r5, #0]
 80058c0:	2301      	movs	r3, #1
 80058c2:	e065      	b.n	8005990 <_printf_i+0x168>
 80058c4:	6808      	ldr	r0, [r1, #0]
 80058c6:	601a      	str	r2, [r3, #0]
 80058c8:	0669      	lsls	r1, r5, #25
 80058ca:	d5d3      	bpl.n	8005874 <_printf_i+0x4c>
 80058cc:	b200      	sxth	r0, r0
 80058ce:	e7d1      	b.n	8005874 <_printf_i+0x4c>
 80058d0:	6819      	ldr	r1, [r3, #0]
 80058d2:	6825      	ldr	r5, [r4, #0]
 80058d4:	1d08      	adds	r0, r1, #4
 80058d6:	6018      	str	r0, [r3, #0]
 80058d8:	6808      	ldr	r0, [r1, #0]
 80058da:	062e      	lsls	r6, r5, #24
 80058dc:	d505      	bpl.n	80058ea <_printf_i+0xc2>
 80058de:	4e54      	ldr	r6, [pc, #336]	; (8005a30 <_printf_i+0x208>)
 80058e0:	2708      	movs	r7, #8
 80058e2:	2a6f      	cmp	r2, #111	; 0x6f
 80058e4:	d01b      	beq.n	800591e <_printf_i+0xf6>
 80058e6:	270a      	movs	r7, #10
 80058e8:	e019      	b.n	800591e <_printf_i+0xf6>
 80058ea:	066d      	lsls	r5, r5, #25
 80058ec:	d5f7      	bpl.n	80058de <_printf_i+0xb6>
 80058ee:	b280      	uxth	r0, r0
 80058f0:	e7f5      	b.n	80058de <_printf_i+0xb6>
 80058f2:	3145      	adds	r1, #69	; 0x45
 80058f4:	4e4e      	ldr	r6, [pc, #312]	; (8005a30 <_printf_i+0x208>)
 80058f6:	700a      	strb	r2, [r1, #0]
 80058f8:	6818      	ldr	r0, [r3, #0]
 80058fa:	6822      	ldr	r2, [r4, #0]
 80058fc:	1d01      	adds	r1, r0, #4
 80058fe:	6800      	ldr	r0, [r0, #0]
 8005900:	6019      	str	r1, [r3, #0]
 8005902:	0615      	lsls	r5, r2, #24
 8005904:	d521      	bpl.n	800594a <_printf_i+0x122>
 8005906:	07d3      	lsls	r3, r2, #31
 8005908:	d502      	bpl.n	8005910 <_printf_i+0xe8>
 800590a:	2320      	movs	r3, #32
 800590c:	431a      	orrs	r2, r3
 800590e:	6022      	str	r2, [r4, #0]
 8005910:	2710      	movs	r7, #16
 8005912:	2800      	cmp	r0, #0
 8005914:	d103      	bne.n	800591e <_printf_i+0xf6>
 8005916:	2320      	movs	r3, #32
 8005918:	6822      	ldr	r2, [r4, #0]
 800591a:	439a      	bics	r2, r3
 800591c:	6022      	str	r2, [r4, #0]
 800591e:	0023      	movs	r3, r4
 8005920:	2200      	movs	r2, #0
 8005922:	3343      	adds	r3, #67	; 0x43
 8005924:	701a      	strb	r2, [r3, #0]
 8005926:	6863      	ldr	r3, [r4, #4]
 8005928:	60a3      	str	r3, [r4, #8]
 800592a:	2b00      	cmp	r3, #0
 800592c:	db58      	blt.n	80059e0 <_printf_i+0x1b8>
 800592e:	2204      	movs	r2, #4
 8005930:	6821      	ldr	r1, [r4, #0]
 8005932:	4391      	bics	r1, r2
 8005934:	6021      	str	r1, [r4, #0]
 8005936:	2800      	cmp	r0, #0
 8005938:	d154      	bne.n	80059e4 <_printf_i+0x1bc>
 800593a:	9d02      	ldr	r5, [sp, #8]
 800593c:	2b00      	cmp	r3, #0
 800593e:	d05a      	beq.n	80059f6 <_printf_i+0x1ce>
 8005940:	0025      	movs	r5, r4
 8005942:	7833      	ldrb	r3, [r6, #0]
 8005944:	3542      	adds	r5, #66	; 0x42
 8005946:	702b      	strb	r3, [r5, #0]
 8005948:	e055      	b.n	80059f6 <_printf_i+0x1ce>
 800594a:	0655      	lsls	r5, r2, #25
 800594c:	d5db      	bpl.n	8005906 <_printf_i+0xde>
 800594e:	b280      	uxth	r0, r0
 8005950:	e7d9      	b.n	8005906 <_printf_i+0xde>
 8005952:	681a      	ldr	r2, [r3, #0]
 8005954:	680d      	ldr	r5, [r1, #0]
 8005956:	1d10      	adds	r0, r2, #4
 8005958:	6949      	ldr	r1, [r1, #20]
 800595a:	6018      	str	r0, [r3, #0]
 800595c:	6813      	ldr	r3, [r2, #0]
 800595e:	062e      	lsls	r6, r5, #24
 8005960:	d501      	bpl.n	8005966 <_printf_i+0x13e>
 8005962:	6019      	str	r1, [r3, #0]
 8005964:	e002      	b.n	800596c <_printf_i+0x144>
 8005966:	066d      	lsls	r5, r5, #25
 8005968:	d5fb      	bpl.n	8005962 <_printf_i+0x13a>
 800596a:	8019      	strh	r1, [r3, #0]
 800596c:	2300      	movs	r3, #0
 800596e:	9d02      	ldr	r5, [sp, #8]
 8005970:	6123      	str	r3, [r4, #16]
 8005972:	e04f      	b.n	8005a14 <_printf_i+0x1ec>
 8005974:	681a      	ldr	r2, [r3, #0]
 8005976:	1d11      	adds	r1, r2, #4
 8005978:	6019      	str	r1, [r3, #0]
 800597a:	6815      	ldr	r5, [r2, #0]
 800597c:	2100      	movs	r1, #0
 800597e:	6862      	ldr	r2, [r4, #4]
 8005980:	0028      	movs	r0, r5
 8005982:	f000 ff27 	bl	80067d4 <memchr>
 8005986:	2800      	cmp	r0, #0
 8005988:	d001      	beq.n	800598e <_printf_i+0x166>
 800598a:	1b40      	subs	r0, r0, r5
 800598c:	6060      	str	r0, [r4, #4]
 800598e:	6863      	ldr	r3, [r4, #4]
 8005990:	6123      	str	r3, [r4, #16]
 8005992:	2300      	movs	r3, #0
 8005994:	9a02      	ldr	r2, [sp, #8]
 8005996:	7013      	strb	r3, [r2, #0]
 8005998:	e03c      	b.n	8005a14 <_printf_i+0x1ec>
 800599a:	6923      	ldr	r3, [r4, #16]
 800599c:	002a      	movs	r2, r5
 800599e:	9904      	ldr	r1, [sp, #16]
 80059a0:	9803      	ldr	r0, [sp, #12]
 80059a2:	9d05      	ldr	r5, [sp, #20]
 80059a4:	47a8      	blx	r5
 80059a6:	1c43      	adds	r3, r0, #1
 80059a8:	d03e      	beq.n	8005a28 <_printf_i+0x200>
 80059aa:	6823      	ldr	r3, [r4, #0]
 80059ac:	079b      	lsls	r3, r3, #30
 80059ae:	d415      	bmi.n	80059dc <_printf_i+0x1b4>
 80059b0:	9b07      	ldr	r3, [sp, #28]
 80059b2:	68e0      	ldr	r0, [r4, #12]
 80059b4:	4298      	cmp	r0, r3
 80059b6:	da39      	bge.n	8005a2c <_printf_i+0x204>
 80059b8:	0018      	movs	r0, r3
 80059ba:	e037      	b.n	8005a2c <_printf_i+0x204>
 80059bc:	0022      	movs	r2, r4
 80059be:	2301      	movs	r3, #1
 80059c0:	3219      	adds	r2, #25
 80059c2:	9904      	ldr	r1, [sp, #16]
 80059c4:	9803      	ldr	r0, [sp, #12]
 80059c6:	9e05      	ldr	r6, [sp, #20]
 80059c8:	47b0      	blx	r6
 80059ca:	1c43      	adds	r3, r0, #1
 80059cc:	d02c      	beq.n	8005a28 <_printf_i+0x200>
 80059ce:	3501      	adds	r5, #1
 80059d0:	68e3      	ldr	r3, [r4, #12]
 80059d2:	9a07      	ldr	r2, [sp, #28]
 80059d4:	1a9b      	subs	r3, r3, r2
 80059d6:	42ab      	cmp	r3, r5
 80059d8:	dcf0      	bgt.n	80059bc <_printf_i+0x194>
 80059da:	e7e9      	b.n	80059b0 <_printf_i+0x188>
 80059dc:	2500      	movs	r5, #0
 80059de:	e7f7      	b.n	80059d0 <_printf_i+0x1a8>
 80059e0:	2800      	cmp	r0, #0
 80059e2:	d0ad      	beq.n	8005940 <_printf_i+0x118>
 80059e4:	9d02      	ldr	r5, [sp, #8]
 80059e6:	0039      	movs	r1, r7
 80059e8:	f7fa fc26 	bl	8000238 <__aeabi_uidivmod>
 80059ec:	5c73      	ldrb	r3, [r6, r1]
 80059ee:	3d01      	subs	r5, #1
 80059f0:	702b      	strb	r3, [r5, #0]
 80059f2:	2800      	cmp	r0, #0
 80059f4:	d1f7      	bne.n	80059e6 <_printf_i+0x1be>
 80059f6:	2f08      	cmp	r7, #8
 80059f8:	d109      	bne.n	8005a0e <_printf_i+0x1e6>
 80059fa:	6823      	ldr	r3, [r4, #0]
 80059fc:	07db      	lsls	r3, r3, #31
 80059fe:	d506      	bpl.n	8005a0e <_printf_i+0x1e6>
 8005a00:	6863      	ldr	r3, [r4, #4]
 8005a02:	6922      	ldr	r2, [r4, #16]
 8005a04:	4293      	cmp	r3, r2
 8005a06:	dc02      	bgt.n	8005a0e <_printf_i+0x1e6>
 8005a08:	2330      	movs	r3, #48	; 0x30
 8005a0a:	3d01      	subs	r5, #1
 8005a0c:	702b      	strb	r3, [r5, #0]
 8005a0e:	9b02      	ldr	r3, [sp, #8]
 8005a10:	1b5b      	subs	r3, r3, r5
 8005a12:	6123      	str	r3, [r4, #16]
 8005a14:	9b05      	ldr	r3, [sp, #20]
 8005a16:	aa07      	add	r2, sp, #28
 8005a18:	9300      	str	r3, [sp, #0]
 8005a1a:	0021      	movs	r1, r4
 8005a1c:	9b04      	ldr	r3, [sp, #16]
 8005a1e:	9803      	ldr	r0, [sp, #12]
 8005a20:	f7ff fe94 	bl	800574c <_printf_common>
 8005a24:	1c43      	adds	r3, r0, #1
 8005a26:	d1b8      	bne.n	800599a <_printf_i+0x172>
 8005a28:	2001      	movs	r0, #1
 8005a2a:	4240      	negs	r0, r0
 8005a2c:	b009      	add	sp, #36	; 0x24
 8005a2e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005a30:	080074ba 	.word	0x080074ba
 8005a34:	080074cb 	.word	0x080074cb

08005a38 <rand>:
 8005a38:	4b12      	ldr	r3, [pc, #72]	; (8005a84 <rand+0x4c>)
 8005a3a:	b510      	push	{r4, lr}
 8005a3c:	681c      	ldr	r4, [r3, #0]
 8005a3e:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8005a40:	2b00      	cmp	r3, #0
 8005a42:	d10f      	bne.n	8005a64 <rand+0x2c>
 8005a44:	2018      	movs	r0, #24
 8005a46:	f000 febb 	bl	80067c0 <malloc>
 8005a4a:	4b0f      	ldr	r3, [pc, #60]	; (8005a88 <rand+0x50>)
 8005a4c:	63a0      	str	r0, [r4, #56]	; 0x38
 8005a4e:	6003      	str	r3, [r0, #0]
 8005a50:	4b0e      	ldr	r3, [pc, #56]	; (8005a8c <rand+0x54>)
 8005a52:	2201      	movs	r2, #1
 8005a54:	6043      	str	r3, [r0, #4]
 8005a56:	4b0e      	ldr	r3, [pc, #56]	; (8005a90 <rand+0x58>)
 8005a58:	6083      	str	r3, [r0, #8]
 8005a5a:	230b      	movs	r3, #11
 8005a5c:	8183      	strh	r3, [r0, #12]
 8005a5e:	2300      	movs	r3, #0
 8005a60:	6102      	str	r2, [r0, #16]
 8005a62:	6143      	str	r3, [r0, #20]
 8005a64:	6ba4      	ldr	r4, [r4, #56]	; 0x38
 8005a66:	4a0b      	ldr	r2, [pc, #44]	; (8005a94 <rand+0x5c>)
 8005a68:	6920      	ldr	r0, [r4, #16]
 8005a6a:	6961      	ldr	r1, [r4, #20]
 8005a6c:	4b0a      	ldr	r3, [pc, #40]	; (8005a98 <rand+0x60>)
 8005a6e:	f7fa fd4b 	bl	8000508 <__aeabi_lmul>
 8005a72:	2201      	movs	r2, #1
 8005a74:	2300      	movs	r3, #0
 8005a76:	1880      	adds	r0, r0, r2
 8005a78:	4159      	adcs	r1, r3
 8005a7a:	6120      	str	r0, [r4, #16]
 8005a7c:	6161      	str	r1, [r4, #20]
 8005a7e:	0048      	lsls	r0, r1, #1
 8005a80:	0840      	lsrs	r0, r0, #1
 8005a82:	bd10      	pop	{r4, pc}
 8005a84:	20000018 	.word	0x20000018
 8005a88:	abcd330e 	.word	0xabcd330e
 8005a8c:	e66d1234 	.word	0xe66d1234
 8005a90:	0005deec 	.word	0x0005deec
 8005a94:	4c957f2d 	.word	0x4c957f2d
 8005a98:	5851f42d 	.word	0x5851f42d

08005a9c <siprintf>:
 8005a9c:	b40e      	push	{r1, r2, r3}
 8005a9e:	b500      	push	{lr}
 8005aa0:	490b      	ldr	r1, [pc, #44]	; (8005ad0 <siprintf+0x34>)
 8005aa2:	b09c      	sub	sp, #112	; 0x70
 8005aa4:	ab1d      	add	r3, sp, #116	; 0x74
 8005aa6:	9002      	str	r0, [sp, #8]
 8005aa8:	9006      	str	r0, [sp, #24]
 8005aaa:	9107      	str	r1, [sp, #28]
 8005aac:	9104      	str	r1, [sp, #16]
 8005aae:	4809      	ldr	r0, [pc, #36]	; (8005ad4 <siprintf+0x38>)
 8005ab0:	4909      	ldr	r1, [pc, #36]	; (8005ad8 <siprintf+0x3c>)
 8005ab2:	cb04      	ldmia	r3!, {r2}
 8005ab4:	9105      	str	r1, [sp, #20]
 8005ab6:	6800      	ldr	r0, [r0, #0]
 8005ab8:	a902      	add	r1, sp, #8
 8005aba:	9301      	str	r3, [sp, #4]
 8005abc:	f001 fa9c 	bl	8006ff8 <_svfiprintf_r>
 8005ac0:	2300      	movs	r3, #0
 8005ac2:	9a02      	ldr	r2, [sp, #8]
 8005ac4:	7013      	strb	r3, [r2, #0]
 8005ac6:	b01c      	add	sp, #112	; 0x70
 8005ac8:	bc08      	pop	{r3}
 8005aca:	b003      	add	sp, #12
 8005acc:	4718      	bx	r3
 8005ace:	46c0      	nop			; (mov r8, r8)
 8005ad0:	7fffffff 	.word	0x7fffffff
 8005ad4:	20000018 	.word	0x20000018
 8005ad8:	ffff0208 	.word	0xffff0208

08005adc <quorem>:
 8005adc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005ade:	6903      	ldr	r3, [r0, #16]
 8005ae0:	690c      	ldr	r4, [r1, #16]
 8005ae2:	b089      	sub	sp, #36	; 0x24
 8005ae4:	0007      	movs	r7, r0
 8005ae6:	9105      	str	r1, [sp, #20]
 8005ae8:	2600      	movs	r6, #0
 8005aea:	42a3      	cmp	r3, r4
 8005aec:	db65      	blt.n	8005bba <quorem+0xde>
 8005aee:	000b      	movs	r3, r1
 8005af0:	3c01      	subs	r4, #1
 8005af2:	3314      	adds	r3, #20
 8005af4:	00a5      	lsls	r5, r4, #2
 8005af6:	9303      	str	r3, [sp, #12]
 8005af8:	195b      	adds	r3, r3, r5
 8005afa:	9304      	str	r3, [sp, #16]
 8005afc:	0003      	movs	r3, r0
 8005afe:	3314      	adds	r3, #20
 8005b00:	9302      	str	r3, [sp, #8]
 8005b02:	195d      	adds	r5, r3, r5
 8005b04:	9b04      	ldr	r3, [sp, #16]
 8005b06:	6828      	ldr	r0, [r5, #0]
 8005b08:	681b      	ldr	r3, [r3, #0]
 8005b0a:	1c59      	adds	r1, r3, #1
 8005b0c:	9301      	str	r3, [sp, #4]
 8005b0e:	f7fa fb0d 	bl	800012c <__udivsi3>
 8005b12:	9001      	str	r0, [sp, #4]
 8005b14:	42b0      	cmp	r0, r6
 8005b16:	d029      	beq.n	8005b6c <quorem+0x90>
 8005b18:	9b03      	ldr	r3, [sp, #12]
 8005b1a:	9802      	ldr	r0, [sp, #8]
 8005b1c:	469c      	mov	ip, r3
 8005b1e:	9606      	str	r6, [sp, #24]
 8005b20:	4662      	mov	r2, ip
 8005b22:	ca08      	ldmia	r2!, {r3}
 8005b24:	4694      	mov	ip, r2
 8005b26:	9a01      	ldr	r2, [sp, #4]
 8005b28:	b299      	uxth	r1, r3
 8005b2a:	4351      	muls	r1, r2
 8005b2c:	0c1b      	lsrs	r3, r3, #16
 8005b2e:	4353      	muls	r3, r2
 8005b30:	1989      	adds	r1, r1, r6
 8005b32:	0c0a      	lsrs	r2, r1, #16
 8005b34:	189b      	adds	r3, r3, r2
 8005b36:	9307      	str	r3, [sp, #28]
 8005b38:	0c1e      	lsrs	r6, r3, #16
 8005b3a:	6803      	ldr	r3, [r0, #0]
 8005b3c:	b289      	uxth	r1, r1
 8005b3e:	b29a      	uxth	r2, r3
 8005b40:	9b06      	ldr	r3, [sp, #24]
 8005b42:	18d2      	adds	r2, r2, r3
 8005b44:	6803      	ldr	r3, [r0, #0]
 8005b46:	1a52      	subs	r2, r2, r1
 8005b48:	0c19      	lsrs	r1, r3, #16
 8005b4a:	466b      	mov	r3, sp
 8005b4c:	8b9b      	ldrh	r3, [r3, #28]
 8005b4e:	1acb      	subs	r3, r1, r3
 8005b50:	1411      	asrs	r1, r2, #16
 8005b52:	185b      	adds	r3, r3, r1
 8005b54:	1419      	asrs	r1, r3, #16
 8005b56:	b292      	uxth	r2, r2
 8005b58:	041b      	lsls	r3, r3, #16
 8005b5a:	431a      	orrs	r2, r3
 8005b5c:	9b04      	ldr	r3, [sp, #16]
 8005b5e:	9106      	str	r1, [sp, #24]
 8005b60:	c004      	stmia	r0!, {r2}
 8005b62:	4563      	cmp	r3, ip
 8005b64:	d2dc      	bcs.n	8005b20 <quorem+0x44>
 8005b66:	682b      	ldr	r3, [r5, #0]
 8005b68:	2b00      	cmp	r3, #0
 8005b6a:	d02d      	beq.n	8005bc8 <quorem+0xec>
 8005b6c:	9905      	ldr	r1, [sp, #20]
 8005b6e:	0038      	movs	r0, r7
 8005b70:	f001 f858 	bl	8006c24 <__mcmp>
 8005b74:	2800      	cmp	r0, #0
 8005b76:	db1f      	blt.n	8005bb8 <quorem+0xdc>
 8005b78:	2500      	movs	r5, #0
 8005b7a:	9b01      	ldr	r3, [sp, #4]
 8005b7c:	9802      	ldr	r0, [sp, #8]
 8005b7e:	3301      	adds	r3, #1
 8005b80:	9903      	ldr	r1, [sp, #12]
 8005b82:	9301      	str	r3, [sp, #4]
 8005b84:	6802      	ldr	r2, [r0, #0]
 8005b86:	c908      	ldmia	r1!, {r3}
 8005b88:	b292      	uxth	r2, r2
 8005b8a:	1955      	adds	r5, r2, r5
 8005b8c:	b29a      	uxth	r2, r3
 8005b8e:	1aaa      	subs	r2, r5, r2
 8005b90:	6805      	ldr	r5, [r0, #0]
 8005b92:	0c1b      	lsrs	r3, r3, #16
 8005b94:	0c2d      	lsrs	r5, r5, #16
 8005b96:	1aeb      	subs	r3, r5, r3
 8005b98:	1415      	asrs	r5, r2, #16
 8005b9a:	195b      	adds	r3, r3, r5
 8005b9c:	141d      	asrs	r5, r3, #16
 8005b9e:	b292      	uxth	r2, r2
 8005ba0:	041b      	lsls	r3, r3, #16
 8005ba2:	4313      	orrs	r3, r2
 8005ba4:	c008      	stmia	r0!, {r3}
 8005ba6:	9b04      	ldr	r3, [sp, #16]
 8005ba8:	428b      	cmp	r3, r1
 8005baa:	d2eb      	bcs.n	8005b84 <quorem+0xa8>
 8005bac:	9a02      	ldr	r2, [sp, #8]
 8005bae:	00a3      	lsls	r3, r4, #2
 8005bb0:	18d3      	adds	r3, r2, r3
 8005bb2:	681a      	ldr	r2, [r3, #0]
 8005bb4:	2a00      	cmp	r2, #0
 8005bb6:	d011      	beq.n	8005bdc <quorem+0x100>
 8005bb8:	9e01      	ldr	r6, [sp, #4]
 8005bba:	0030      	movs	r0, r6
 8005bbc:	b009      	add	sp, #36	; 0x24
 8005bbe:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005bc0:	682b      	ldr	r3, [r5, #0]
 8005bc2:	2b00      	cmp	r3, #0
 8005bc4:	d104      	bne.n	8005bd0 <quorem+0xf4>
 8005bc6:	3c01      	subs	r4, #1
 8005bc8:	9b02      	ldr	r3, [sp, #8]
 8005bca:	3d04      	subs	r5, #4
 8005bcc:	42ab      	cmp	r3, r5
 8005bce:	d3f7      	bcc.n	8005bc0 <quorem+0xe4>
 8005bd0:	613c      	str	r4, [r7, #16]
 8005bd2:	e7cb      	b.n	8005b6c <quorem+0x90>
 8005bd4:	681a      	ldr	r2, [r3, #0]
 8005bd6:	2a00      	cmp	r2, #0
 8005bd8:	d104      	bne.n	8005be4 <quorem+0x108>
 8005bda:	3c01      	subs	r4, #1
 8005bdc:	9a02      	ldr	r2, [sp, #8]
 8005bde:	3b04      	subs	r3, #4
 8005be0:	429a      	cmp	r2, r3
 8005be2:	d3f7      	bcc.n	8005bd4 <quorem+0xf8>
 8005be4:	613c      	str	r4, [r7, #16]
 8005be6:	e7e7      	b.n	8005bb8 <quorem+0xdc>

08005be8 <_dtoa_r>:
 8005be8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005bea:	0016      	movs	r6, r2
 8005bec:	001f      	movs	r7, r3
 8005bee:	6a44      	ldr	r4, [r0, #36]	; 0x24
 8005bf0:	b09b      	sub	sp, #108	; 0x6c
 8005bf2:	9002      	str	r0, [sp, #8]
 8005bf4:	9d23      	ldr	r5, [sp, #140]	; 0x8c
 8005bf6:	9606      	str	r6, [sp, #24]
 8005bf8:	9707      	str	r7, [sp, #28]
 8005bfa:	2c00      	cmp	r4, #0
 8005bfc:	d108      	bne.n	8005c10 <_dtoa_r+0x28>
 8005bfe:	2010      	movs	r0, #16
 8005c00:	f000 fdde 	bl	80067c0 <malloc>
 8005c04:	9b02      	ldr	r3, [sp, #8]
 8005c06:	6258      	str	r0, [r3, #36]	; 0x24
 8005c08:	6044      	str	r4, [r0, #4]
 8005c0a:	6084      	str	r4, [r0, #8]
 8005c0c:	6004      	str	r4, [r0, #0]
 8005c0e:	60c4      	str	r4, [r0, #12]
 8005c10:	9b02      	ldr	r3, [sp, #8]
 8005c12:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005c14:	6819      	ldr	r1, [r3, #0]
 8005c16:	2900      	cmp	r1, #0
 8005c18:	d00b      	beq.n	8005c32 <_dtoa_r+0x4a>
 8005c1a:	685a      	ldr	r2, [r3, #4]
 8005c1c:	2301      	movs	r3, #1
 8005c1e:	4093      	lsls	r3, r2
 8005c20:	604a      	str	r2, [r1, #4]
 8005c22:	608b      	str	r3, [r1, #8]
 8005c24:	9802      	ldr	r0, [sp, #8]
 8005c26:	f000 fe21 	bl	800686c <_Bfree>
 8005c2a:	2200      	movs	r2, #0
 8005c2c:	9b02      	ldr	r3, [sp, #8]
 8005c2e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005c30:	601a      	str	r2, [r3, #0]
 8005c32:	2f00      	cmp	r7, #0
 8005c34:	da20      	bge.n	8005c78 <_dtoa_r+0x90>
 8005c36:	2301      	movs	r3, #1
 8005c38:	602b      	str	r3, [r5, #0]
 8005c3a:	007b      	lsls	r3, r7, #1
 8005c3c:	085b      	lsrs	r3, r3, #1
 8005c3e:	9307      	str	r3, [sp, #28]
 8005c40:	9c07      	ldr	r4, [sp, #28]
 8005c42:	4bb2      	ldr	r3, [pc, #712]	; (8005f0c <_dtoa_r+0x324>)
 8005c44:	0022      	movs	r2, r4
 8005c46:	9317      	str	r3, [sp, #92]	; 0x5c
 8005c48:	401a      	ands	r2, r3
 8005c4a:	429a      	cmp	r2, r3
 8005c4c:	d117      	bne.n	8005c7e <_dtoa_r+0x96>
 8005c4e:	4bb0      	ldr	r3, [pc, #704]	; (8005f10 <_dtoa_r+0x328>)
 8005c50:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8005c52:	6013      	str	r3, [r2, #0]
 8005c54:	9b06      	ldr	r3, [sp, #24]
 8005c56:	2b00      	cmp	r3, #0
 8005c58:	d103      	bne.n	8005c62 <_dtoa_r+0x7a>
 8005c5a:	0324      	lsls	r4, r4, #12
 8005c5c:	d101      	bne.n	8005c62 <_dtoa_r+0x7a>
 8005c5e:	f000 fd87 	bl	8006770 <_dtoa_r+0xb88>
 8005c62:	4bac      	ldr	r3, [pc, #688]	; (8005f14 <_dtoa_r+0x32c>)
 8005c64:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8005c66:	9308      	str	r3, [sp, #32]
 8005c68:	2a00      	cmp	r2, #0
 8005c6a:	d002      	beq.n	8005c72 <_dtoa_r+0x8a>
 8005c6c:	4baa      	ldr	r3, [pc, #680]	; (8005f18 <_dtoa_r+0x330>)
 8005c6e:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8005c70:	6013      	str	r3, [r2, #0]
 8005c72:	9808      	ldr	r0, [sp, #32]
 8005c74:	b01b      	add	sp, #108	; 0x6c
 8005c76:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005c78:	2300      	movs	r3, #0
 8005c7a:	602b      	str	r3, [r5, #0]
 8005c7c:	e7e0      	b.n	8005c40 <_dtoa_r+0x58>
 8005c7e:	9e06      	ldr	r6, [sp, #24]
 8005c80:	9f07      	ldr	r7, [sp, #28]
 8005c82:	2200      	movs	r2, #0
 8005c84:	2300      	movs	r3, #0
 8005c86:	0030      	movs	r0, r6
 8005c88:	0039      	movs	r1, r7
 8005c8a:	f7fa fbd5 	bl	8000438 <__aeabi_dcmpeq>
 8005c8e:	1e05      	subs	r5, r0, #0
 8005c90:	d00b      	beq.n	8005caa <_dtoa_r+0xc2>
 8005c92:	2301      	movs	r3, #1
 8005c94:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8005c96:	6013      	str	r3, [r2, #0]
 8005c98:	4ba0      	ldr	r3, [pc, #640]	; (8005f1c <_dtoa_r+0x334>)
 8005c9a:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8005c9c:	9308      	str	r3, [sp, #32]
 8005c9e:	2a00      	cmp	r2, #0
 8005ca0:	d0e7      	beq.n	8005c72 <_dtoa_r+0x8a>
 8005ca2:	4a9f      	ldr	r2, [pc, #636]	; (8005f20 <_dtoa_r+0x338>)
 8005ca4:	9924      	ldr	r1, [sp, #144]	; 0x90
 8005ca6:	600a      	str	r2, [r1, #0]
 8005ca8:	e7e3      	b.n	8005c72 <_dtoa_r+0x8a>
 8005caa:	ab18      	add	r3, sp, #96	; 0x60
 8005cac:	9301      	str	r3, [sp, #4]
 8005cae:	ab19      	add	r3, sp, #100	; 0x64
 8005cb0:	9300      	str	r3, [sp, #0]
 8005cb2:	0032      	movs	r2, r6
 8005cb4:	003b      	movs	r3, r7
 8005cb6:	9802      	ldr	r0, [sp, #8]
 8005cb8:	f001 f832 	bl	8006d20 <__d2b>
 8005cbc:	0063      	lsls	r3, r4, #1
 8005cbe:	9003      	str	r0, [sp, #12]
 8005cc0:	0d5b      	lsrs	r3, r3, #21
 8005cc2:	d074      	beq.n	8005dae <_dtoa_r+0x1c6>
 8005cc4:	033a      	lsls	r2, r7, #12
 8005cc6:	4c97      	ldr	r4, [pc, #604]	; (8005f24 <_dtoa_r+0x33c>)
 8005cc8:	0b12      	lsrs	r2, r2, #12
 8005cca:	4314      	orrs	r4, r2
 8005ccc:	0021      	movs	r1, r4
 8005cce:	4a96      	ldr	r2, [pc, #600]	; (8005f28 <_dtoa_r+0x340>)
 8005cd0:	0030      	movs	r0, r6
 8005cd2:	9516      	str	r5, [sp, #88]	; 0x58
 8005cd4:	189e      	adds	r6, r3, r2
 8005cd6:	2200      	movs	r2, #0
 8005cd8:	4b94      	ldr	r3, [pc, #592]	; (8005f2c <_dtoa_r+0x344>)
 8005cda:	f7fc fca9 	bl	8002630 <__aeabi_dsub>
 8005cde:	4a94      	ldr	r2, [pc, #592]	; (8005f30 <_dtoa_r+0x348>)
 8005ce0:	4b94      	ldr	r3, [pc, #592]	; (8005f34 <_dtoa_r+0x34c>)
 8005ce2:	f7fc fa33 	bl	800214c <__aeabi_dmul>
 8005ce6:	4a94      	ldr	r2, [pc, #592]	; (8005f38 <_dtoa_r+0x350>)
 8005ce8:	4b94      	ldr	r3, [pc, #592]	; (8005f3c <_dtoa_r+0x354>)
 8005cea:	f7fb fb09 	bl	8001300 <__aeabi_dadd>
 8005cee:	0004      	movs	r4, r0
 8005cf0:	0030      	movs	r0, r6
 8005cf2:	000d      	movs	r5, r1
 8005cf4:	f7fd f836 	bl	8002d64 <__aeabi_i2d>
 8005cf8:	4a91      	ldr	r2, [pc, #580]	; (8005f40 <_dtoa_r+0x358>)
 8005cfa:	4b92      	ldr	r3, [pc, #584]	; (8005f44 <_dtoa_r+0x35c>)
 8005cfc:	f7fc fa26 	bl	800214c <__aeabi_dmul>
 8005d00:	0002      	movs	r2, r0
 8005d02:	000b      	movs	r3, r1
 8005d04:	0020      	movs	r0, r4
 8005d06:	0029      	movs	r1, r5
 8005d08:	f7fb fafa 	bl	8001300 <__aeabi_dadd>
 8005d0c:	0004      	movs	r4, r0
 8005d0e:	000d      	movs	r5, r1
 8005d10:	f7fc fff2 	bl	8002cf8 <__aeabi_d2iz>
 8005d14:	2200      	movs	r2, #0
 8005d16:	0007      	movs	r7, r0
 8005d18:	2300      	movs	r3, #0
 8005d1a:	0020      	movs	r0, r4
 8005d1c:	0029      	movs	r1, r5
 8005d1e:	f7fa fb91 	bl	8000444 <__aeabi_dcmplt>
 8005d22:	2800      	cmp	r0, #0
 8005d24:	d009      	beq.n	8005d3a <_dtoa_r+0x152>
 8005d26:	0038      	movs	r0, r7
 8005d28:	f7fd f81c 	bl	8002d64 <__aeabi_i2d>
 8005d2c:	002b      	movs	r3, r5
 8005d2e:	0022      	movs	r2, r4
 8005d30:	f7fa fb82 	bl	8000438 <__aeabi_dcmpeq>
 8005d34:	4243      	negs	r3, r0
 8005d36:	4158      	adcs	r0, r3
 8005d38:	1a3f      	subs	r7, r7, r0
 8005d3a:	2301      	movs	r3, #1
 8005d3c:	9314      	str	r3, [sp, #80]	; 0x50
 8005d3e:	2f16      	cmp	r7, #22
 8005d40:	d80d      	bhi.n	8005d5e <_dtoa_r+0x176>
 8005d42:	4981      	ldr	r1, [pc, #516]	; (8005f48 <_dtoa_r+0x360>)
 8005d44:	00fb      	lsls	r3, r7, #3
 8005d46:	18c9      	adds	r1, r1, r3
 8005d48:	6808      	ldr	r0, [r1, #0]
 8005d4a:	6849      	ldr	r1, [r1, #4]
 8005d4c:	9a06      	ldr	r2, [sp, #24]
 8005d4e:	9b07      	ldr	r3, [sp, #28]
 8005d50:	f7fa fb8c 	bl	800046c <__aeabi_dcmpgt>
 8005d54:	2800      	cmp	r0, #0
 8005d56:	d046      	beq.n	8005de6 <_dtoa_r+0x1fe>
 8005d58:	2300      	movs	r3, #0
 8005d5a:	3f01      	subs	r7, #1
 8005d5c:	9314      	str	r3, [sp, #80]	; 0x50
 8005d5e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8005d60:	1b9e      	subs	r6, r3, r6
 8005d62:	2300      	movs	r3, #0
 8005d64:	930a      	str	r3, [sp, #40]	; 0x28
 8005d66:	0033      	movs	r3, r6
 8005d68:	3b01      	subs	r3, #1
 8005d6a:	930b      	str	r3, [sp, #44]	; 0x2c
 8005d6c:	d504      	bpl.n	8005d78 <_dtoa_r+0x190>
 8005d6e:	2301      	movs	r3, #1
 8005d70:	1b9b      	subs	r3, r3, r6
 8005d72:	930a      	str	r3, [sp, #40]	; 0x28
 8005d74:	2300      	movs	r3, #0
 8005d76:	930b      	str	r3, [sp, #44]	; 0x2c
 8005d78:	2f00      	cmp	r7, #0
 8005d7a:	db36      	blt.n	8005dea <_dtoa_r+0x202>
 8005d7c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8005d7e:	9711      	str	r7, [sp, #68]	; 0x44
 8005d80:	19db      	adds	r3, r3, r7
 8005d82:	930b      	str	r3, [sp, #44]	; 0x2c
 8005d84:	2300      	movs	r3, #0
 8005d86:	9304      	str	r3, [sp, #16]
 8005d88:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8005d8a:	2401      	movs	r4, #1
 8005d8c:	2b09      	cmp	r3, #9
 8005d8e:	d900      	bls.n	8005d92 <_dtoa_r+0x1aa>
 8005d90:	e084      	b.n	8005e9c <_dtoa_r+0x2b4>
 8005d92:	2b05      	cmp	r3, #5
 8005d94:	dd02      	ble.n	8005d9c <_dtoa_r+0x1b4>
 8005d96:	2400      	movs	r4, #0
 8005d98:	3b04      	subs	r3, #4
 8005d9a:	9320      	str	r3, [sp, #128]	; 0x80
 8005d9c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8005d9e:	1e98      	subs	r0, r3, #2
 8005da0:	2803      	cmp	r0, #3
 8005da2:	d900      	bls.n	8005da6 <_dtoa_r+0x1be>
 8005da4:	e084      	b.n	8005eb0 <_dtoa_r+0x2c8>
 8005da6:	f7fa f9b7 	bl	8000118 <__gnu_thumb1_case_uqi>
 8005daa:	7775      	.short	0x7775
 8005dac:	6a28      	.short	0x6a28
 8005dae:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8005db0:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8005db2:	189e      	adds	r6, r3, r2
 8005db4:	4b65      	ldr	r3, [pc, #404]	; (8005f4c <_dtoa_r+0x364>)
 8005db6:	18f2      	adds	r2, r6, r3
 8005db8:	2a20      	cmp	r2, #32
 8005dba:	dd0f      	ble.n	8005ddc <_dtoa_r+0x1f4>
 8005dbc:	2340      	movs	r3, #64	; 0x40
 8005dbe:	1a9b      	subs	r3, r3, r2
 8005dc0:	409c      	lsls	r4, r3
 8005dc2:	4b63      	ldr	r3, [pc, #396]	; (8005f50 <_dtoa_r+0x368>)
 8005dc4:	9806      	ldr	r0, [sp, #24]
 8005dc6:	18f3      	adds	r3, r6, r3
 8005dc8:	40d8      	lsrs	r0, r3
 8005dca:	4320      	orrs	r0, r4
 8005dcc:	f7fd f804 	bl	8002dd8 <__aeabi_ui2d>
 8005dd0:	2301      	movs	r3, #1
 8005dd2:	4c60      	ldr	r4, [pc, #384]	; (8005f54 <_dtoa_r+0x36c>)
 8005dd4:	3e01      	subs	r6, #1
 8005dd6:	1909      	adds	r1, r1, r4
 8005dd8:	9316      	str	r3, [sp, #88]	; 0x58
 8005dda:	e77c      	b.n	8005cd6 <_dtoa_r+0xee>
 8005ddc:	2320      	movs	r3, #32
 8005dde:	9806      	ldr	r0, [sp, #24]
 8005de0:	1a9b      	subs	r3, r3, r2
 8005de2:	4098      	lsls	r0, r3
 8005de4:	e7f2      	b.n	8005dcc <_dtoa_r+0x1e4>
 8005de6:	9014      	str	r0, [sp, #80]	; 0x50
 8005de8:	e7b9      	b.n	8005d5e <_dtoa_r+0x176>
 8005dea:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005dec:	1bdb      	subs	r3, r3, r7
 8005dee:	930a      	str	r3, [sp, #40]	; 0x28
 8005df0:	427b      	negs	r3, r7
 8005df2:	9304      	str	r3, [sp, #16]
 8005df4:	2300      	movs	r3, #0
 8005df6:	9311      	str	r3, [sp, #68]	; 0x44
 8005df8:	e7c6      	b.n	8005d88 <_dtoa_r+0x1a0>
 8005dfa:	2301      	movs	r3, #1
 8005dfc:	930d      	str	r3, [sp, #52]	; 0x34
 8005dfe:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8005e00:	2b00      	cmp	r3, #0
 8005e02:	dd59      	ble.n	8005eb8 <_dtoa_r+0x2d0>
 8005e04:	930c      	str	r3, [sp, #48]	; 0x30
 8005e06:	9309      	str	r3, [sp, #36]	; 0x24
 8005e08:	9a02      	ldr	r2, [sp, #8]
 8005e0a:	6a55      	ldr	r5, [r2, #36]	; 0x24
 8005e0c:	2200      	movs	r2, #0
 8005e0e:	606a      	str	r2, [r5, #4]
 8005e10:	3204      	adds	r2, #4
 8005e12:	0010      	movs	r0, r2
 8005e14:	3014      	adds	r0, #20
 8005e16:	6869      	ldr	r1, [r5, #4]
 8005e18:	4298      	cmp	r0, r3
 8005e1a:	d952      	bls.n	8005ec2 <_dtoa_r+0x2da>
 8005e1c:	9802      	ldr	r0, [sp, #8]
 8005e1e:	f000 fced 	bl	80067fc <_Balloc>
 8005e22:	9b02      	ldr	r3, [sp, #8]
 8005e24:	6028      	str	r0, [r5, #0]
 8005e26:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005e28:	681b      	ldr	r3, [r3, #0]
 8005e2a:	9308      	str	r3, [sp, #32]
 8005e2c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005e2e:	2b0e      	cmp	r3, #14
 8005e30:	d900      	bls.n	8005e34 <_dtoa_r+0x24c>
 8005e32:	e10a      	b.n	800604a <_dtoa_r+0x462>
 8005e34:	2c00      	cmp	r4, #0
 8005e36:	d100      	bne.n	8005e3a <_dtoa_r+0x252>
 8005e38:	e107      	b.n	800604a <_dtoa_r+0x462>
 8005e3a:	9b06      	ldr	r3, [sp, #24]
 8005e3c:	9c07      	ldr	r4, [sp, #28]
 8005e3e:	9312      	str	r3, [sp, #72]	; 0x48
 8005e40:	9413      	str	r4, [sp, #76]	; 0x4c
 8005e42:	2f00      	cmp	r7, #0
 8005e44:	dc00      	bgt.n	8005e48 <_dtoa_r+0x260>
 8005e46:	e089      	b.n	8005f5c <_dtoa_r+0x374>
 8005e48:	210f      	movs	r1, #15
 8005e4a:	003a      	movs	r2, r7
 8005e4c:	4b3e      	ldr	r3, [pc, #248]	; (8005f48 <_dtoa_r+0x360>)
 8005e4e:	400a      	ands	r2, r1
 8005e50:	00d2      	lsls	r2, r2, #3
 8005e52:	189b      	adds	r3, r3, r2
 8005e54:	681d      	ldr	r5, [r3, #0]
 8005e56:	685e      	ldr	r6, [r3, #4]
 8005e58:	2302      	movs	r3, #2
 8005e5a:	113c      	asrs	r4, r7, #4
 8005e5c:	930e      	str	r3, [sp, #56]	; 0x38
 8005e5e:	06e3      	lsls	r3, r4, #27
 8005e60:	d50b      	bpl.n	8005e7a <_dtoa_r+0x292>
 8005e62:	4b3d      	ldr	r3, [pc, #244]	; (8005f58 <_dtoa_r+0x370>)
 8005e64:	400c      	ands	r4, r1
 8005e66:	6a1a      	ldr	r2, [r3, #32]
 8005e68:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005e6a:	9812      	ldr	r0, [sp, #72]	; 0x48
 8005e6c:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8005e6e:	f7fb fd63 	bl	8001938 <__aeabi_ddiv>
 8005e72:	2303      	movs	r3, #3
 8005e74:	9006      	str	r0, [sp, #24]
 8005e76:	9107      	str	r1, [sp, #28]
 8005e78:	930e      	str	r3, [sp, #56]	; 0x38
 8005e7a:	2300      	movs	r3, #0
 8005e7c:	e03a      	b.n	8005ef4 <_dtoa_r+0x30c>
 8005e7e:	2301      	movs	r3, #1
 8005e80:	930d      	str	r3, [sp, #52]	; 0x34
 8005e82:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8005e84:	18fb      	adds	r3, r7, r3
 8005e86:	930c      	str	r3, [sp, #48]	; 0x30
 8005e88:	3301      	adds	r3, #1
 8005e8a:	9309      	str	r3, [sp, #36]	; 0x24
 8005e8c:	2b00      	cmp	r3, #0
 8005e8e:	dcbb      	bgt.n	8005e08 <_dtoa_r+0x220>
 8005e90:	2301      	movs	r3, #1
 8005e92:	e7b9      	b.n	8005e08 <_dtoa_r+0x220>
 8005e94:	2300      	movs	r3, #0
 8005e96:	e7b1      	b.n	8005dfc <_dtoa_r+0x214>
 8005e98:	2300      	movs	r3, #0
 8005e9a:	e7f1      	b.n	8005e80 <_dtoa_r+0x298>
 8005e9c:	2300      	movs	r3, #0
 8005e9e:	940d      	str	r4, [sp, #52]	; 0x34
 8005ea0:	9320      	str	r3, [sp, #128]	; 0x80
 8005ea2:	3b01      	subs	r3, #1
 8005ea4:	2200      	movs	r2, #0
 8005ea6:	930c      	str	r3, [sp, #48]	; 0x30
 8005ea8:	9309      	str	r3, [sp, #36]	; 0x24
 8005eaa:	3313      	adds	r3, #19
 8005eac:	9221      	str	r2, [sp, #132]	; 0x84
 8005eae:	e7ab      	b.n	8005e08 <_dtoa_r+0x220>
 8005eb0:	2301      	movs	r3, #1
 8005eb2:	930d      	str	r3, [sp, #52]	; 0x34
 8005eb4:	3b02      	subs	r3, #2
 8005eb6:	e7f5      	b.n	8005ea4 <_dtoa_r+0x2bc>
 8005eb8:	2301      	movs	r3, #1
 8005eba:	930c      	str	r3, [sp, #48]	; 0x30
 8005ebc:	9309      	str	r3, [sp, #36]	; 0x24
 8005ebe:	001a      	movs	r2, r3
 8005ec0:	e7f4      	b.n	8005eac <_dtoa_r+0x2c4>
 8005ec2:	3101      	adds	r1, #1
 8005ec4:	6069      	str	r1, [r5, #4]
 8005ec6:	0052      	lsls	r2, r2, #1
 8005ec8:	e7a3      	b.n	8005e12 <_dtoa_r+0x22a>
 8005eca:	2301      	movs	r3, #1
 8005ecc:	421c      	tst	r4, r3
 8005ece:	d00e      	beq.n	8005eee <_dtoa_r+0x306>
 8005ed0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005ed2:	4a21      	ldr	r2, [pc, #132]	; (8005f58 <_dtoa_r+0x370>)
 8005ed4:	3301      	adds	r3, #1
 8005ed6:	930e      	str	r3, [sp, #56]	; 0x38
 8005ed8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8005eda:	0028      	movs	r0, r5
 8005edc:	00db      	lsls	r3, r3, #3
 8005ede:	189b      	adds	r3, r3, r2
 8005ee0:	0031      	movs	r1, r6
 8005ee2:	681a      	ldr	r2, [r3, #0]
 8005ee4:	685b      	ldr	r3, [r3, #4]
 8005ee6:	f7fc f931 	bl	800214c <__aeabi_dmul>
 8005eea:	0005      	movs	r5, r0
 8005eec:	000e      	movs	r6, r1
 8005eee:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8005ef0:	1064      	asrs	r4, r4, #1
 8005ef2:	3301      	adds	r3, #1
 8005ef4:	9310      	str	r3, [sp, #64]	; 0x40
 8005ef6:	2c00      	cmp	r4, #0
 8005ef8:	d1e7      	bne.n	8005eca <_dtoa_r+0x2e2>
 8005efa:	9806      	ldr	r0, [sp, #24]
 8005efc:	9907      	ldr	r1, [sp, #28]
 8005efe:	002a      	movs	r2, r5
 8005f00:	0033      	movs	r3, r6
 8005f02:	f7fb fd19 	bl	8001938 <__aeabi_ddiv>
 8005f06:	9006      	str	r0, [sp, #24]
 8005f08:	9107      	str	r1, [sp, #28]
 8005f0a:	e042      	b.n	8005f92 <_dtoa_r+0x3aa>
 8005f0c:	7ff00000 	.word	0x7ff00000
 8005f10:	0000270f 	.word	0x0000270f
 8005f14:	080074e5 	.word	0x080074e5
 8005f18:	080074e8 	.word	0x080074e8
 8005f1c:	080074b8 	.word	0x080074b8
 8005f20:	080074b9 	.word	0x080074b9
 8005f24:	3ff00000 	.word	0x3ff00000
 8005f28:	fffffc01 	.word	0xfffffc01
 8005f2c:	3ff80000 	.word	0x3ff80000
 8005f30:	636f4361 	.word	0x636f4361
 8005f34:	3fd287a7 	.word	0x3fd287a7
 8005f38:	8b60c8b3 	.word	0x8b60c8b3
 8005f3c:	3fc68a28 	.word	0x3fc68a28
 8005f40:	509f79fb 	.word	0x509f79fb
 8005f44:	3fd34413 	.word	0x3fd34413
 8005f48:	08007518 	.word	0x08007518
 8005f4c:	00000432 	.word	0x00000432
 8005f50:	00000412 	.word	0x00000412
 8005f54:	fe100000 	.word	0xfe100000
 8005f58:	080074f0 	.word	0x080074f0
 8005f5c:	2302      	movs	r3, #2
 8005f5e:	930e      	str	r3, [sp, #56]	; 0x38
 8005f60:	2f00      	cmp	r7, #0
 8005f62:	d016      	beq.n	8005f92 <_dtoa_r+0x3aa>
 8005f64:	9812      	ldr	r0, [sp, #72]	; 0x48
 8005f66:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8005f68:	427c      	negs	r4, r7
 8005f6a:	330d      	adds	r3, #13
 8005f6c:	4023      	ands	r3, r4
 8005f6e:	4ace      	ldr	r2, [pc, #824]	; (80062a8 <_dtoa_r+0x6c0>)
 8005f70:	00db      	lsls	r3, r3, #3
 8005f72:	18d3      	adds	r3, r2, r3
 8005f74:	681a      	ldr	r2, [r3, #0]
 8005f76:	685b      	ldr	r3, [r3, #4]
 8005f78:	f7fc f8e8 	bl	800214c <__aeabi_dmul>
 8005f7c:	2300      	movs	r3, #0
 8005f7e:	2601      	movs	r6, #1
 8005f80:	001d      	movs	r5, r3
 8005f82:	9006      	str	r0, [sp, #24]
 8005f84:	9107      	str	r1, [sp, #28]
 8005f86:	1124      	asrs	r4, r4, #4
 8005f88:	2c00      	cmp	r4, #0
 8005f8a:	d000      	beq.n	8005f8e <_dtoa_r+0x3a6>
 8005f8c:	e08c      	b.n	80060a8 <_dtoa_r+0x4c0>
 8005f8e:	2b00      	cmp	r3, #0
 8005f90:	d1b9      	bne.n	8005f06 <_dtoa_r+0x31e>
 8005f92:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8005f94:	2b00      	cmp	r3, #0
 8005f96:	d100      	bne.n	8005f9a <_dtoa_r+0x3b2>
 8005f98:	e096      	b.n	80060c8 <_dtoa_r+0x4e0>
 8005f9a:	9c06      	ldr	r4, [sp, #24]
 8005f9c:	9d07      	ldr	r5, [sp, #28]
 8005f9e:	2200      	movs	r2, #0
 8005fa0:	4bc2      	ldr	r3, [pc, #776]	; (80062ac <_dtoa_r+0x6c4>)
 8005fa2:	0020      	movs	r0, r4
 8005fa4:	0029      	movs	r1, r5
 8005fa6:	f7fa fa4d 	bl	8000444 <__aeabi_dcmplt>
 8005faa:	2800      	cmp	r0, #0
 8005fac:	d100      	bne.n	8005fb0 <_dtoa_r+0x3c8>
 8005fae:	e08b      	b.n	80060c8 <_dtoa_r+0x4e0>
 8005fb0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005fb2:	2b00      	cmp	r3, #0
 8005fb4:	d100      	bne.n	8005fb8 <_dtoa_r+0x3d0>
 8005fb6:	e087      	b.n	80060c8 <_dtoa_r+0x4e0>
 8005fb8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8005fba:	2b00      	cmp	r3, #0
 8005fbc:	dd41      	ble.n	8006042 <_dtoa_r+0x45a>
 8005fbe:	4bbc      	ldr	r3, [pc, #752]	; (80062b0 <_dtoa_r+0x6c8>)
 8005fc0:	2200      	movs	r2, #0
 8005fc2:	0020      	movs	r0, r4
 8005fc4:	0029      	movs	r1, r5
 8005fc6:	f7fc f8c1 	bl	800214c <__aeabi_dmul>
 8005fca:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005fcc:	9006      	str	r0, [sp, #24]
 8005fce:	9107      	str	r1, [sp, #28]
 8005fd0:	3301      	adds	r3, #1
 8005fd2:	930e      	str	r3, [sp, #56]	; 0x38
 8005fd4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8005fd6:	1e7e      	subs	r6, r7, #1
 8005fd8:	980e      	ldr	r0, [sp, #56]	; 0x38
 8005fda:	9310      	str	r3, [sp, #64]	; 0x40
 8005fdc:	f7fc fec2 	bl	8002d64 <__aeabi_i2d>
 8005fe0:	9a06      	ldr	r2, [sp, #24]
 8005fe2:	9b07      	ldr	r3, [sp, #28]
 8005fe4:	f7fc f8b2 	bl	800214c <__aeabi_dmul>
 8005fe8:	2200      	movs	r2, #0
 8005fea:	4bb2      	ldr	r3, [pc, #712]	; (80062b4 <_dtoa_r+0x6cc>)
 8005fec:	f7fb f988 	bl	8001300 <__aeabi_dadd>
 8005ff0:	4ab1      	ldr	r2, [pc, #708]	; (80062b8 <_dtoa_r+0x6d0>)
 8005ff2:	900e      	str	r0, [sp, #56]	; 0x38
 8005ff4:	910f      	str	r1, [sp, #60]	; 0x3c
 8005ff6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8005ff8:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8005ffa:	4694      	mov	ip, r2
 8005ffc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8005ffe:	4463      	add	r3, ip
 8006000:	9315      	str	r3, [sp, #84]	; 0x54
 8006002:	001d      	movs	r5, r3
 8006004:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8006006:	2b00      	cmp	r3, #0
 8006008:	d161      	bne.n	80060ce <_dtoa_r+0x4e6>
 800600a:	9806      	ldr	r0, [sp, #24]
 800600c:	9907      	ldr	r1, [sp, #28]
 800600e:	2200      	movs	r2, #0
 8006010:	4baa      	ldr	r3, [pc, #680]	; (80062bc <_dtoa_r+0x6d4>)
 8006012:	f7fc fb0d 	bl	8002630 <__aeabi_dsub>
 8006016:	0022      	movs	r2, r4
 8006018:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800601a:	9006      	str	r0, [sp, #24]
 800601c:	9107      	str	r1, [sp, #28]
 800601e:	f7fa fa25 	bl	800046c <__aeabi_dcmpgt>
 8006022:	2800      	cmp	r0, #0
 8006024:	d000      	beq.n	8006028 <_dtoa_r+0x440>
 8006026:	e2a8      	b.n	800657a <_dtoa_r+0x992>
 8006028:	48a5      	ldr	r0, [pc, #660]	; (80062c0 <_dtoa_r+0x6d8>)
 800602a:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800602c:	4684      	mov	ip, r0
 800602e:	4461      	add	r1, ip
 8006030:	000b      	movs	r3, r1
 8006032:	9806      	ldr	r0, [sp, #24]
 8006034:	9907      	ldr	r1, [sp, #28]
 8006036:	0022      	movs	r2, r4
 8006038:	f7fa fa04 	bl	8000444 <__aeabi_dcmplt>
 800603c:	2800      	cmp	r0, #0
 800603e:	d000      	beq.n	8006042 <_dtoa_r+0x45a>
 8006040:	e295      	b.n	800656e <_dtoa_r+0x986>
 8006042:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8006044:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8006046:	9306      	str	r3, [sp, #24]
 8006048:	9407      	str	r4, [sp, #28]
 800604a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800604c:	2b00      	cmp	r3, #0
 800604e:	da00      	bge.n	8006052 <_dtoa_r+0x46a>
 8006050:	e15c      	b.n	800630c <_dtoa_r+0x724>
 8006052:	2f0e      	cmp	r7, #14
 8006054:	dd00      	ble.n	8006058 <_dtoa_r+0x470>
 8006056:	e159      	b.n	800630c <_dtoa_r+0x724>
 8006058:	4b93      	ldr	r3, [pc, #588]	; (80062a8 <_dtoa_r+0x6c0>)
 800605a:	00fa      	lsls	r2, r7, #3
 800605c:	189b      	adds	r3, r3, r2
 800605e:	685c      	ldr	r4, [r3, #4]
 8006060:	681b      	ldr	r3, [r3, #0]
 8006062:	9304      	str	r3, [sp, #16]
 8006064:	9405      	str	r4, [sp, #20]
 8006066:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8006068:	2b00      	cmp	r3, #0
 800606a:	db00      	blt.n	800606e <_dtoa_r+0x486>
 800606c:	e0d8      	b.n	8006220 <_dtoa_r+0x638>
 800606e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006070:	2b00      	cmp	r3, #0
 8006072:	dd00      	ble.n	8006076 <_dtoa_r+0x48e>
 8006074:	e0d4      	b.n	8006220 <_dtoa_r+0x638>
 8006076:	d000      	beq.n	800607a <_dtoa_r+0x492>
 8006078:	e27d      	b.n	8006576 <_dtoa_r+0x98e>
 800607a:	9804      	ldr	r0, [sp, #16]
 800607c:	9905      	ldr	r1, [sp, #20]
 800607e:	2200      	movs	r2, #0
 8006080:	4b8e      	ldr	r3, [pc, #568]	; (80062bc <_dtoa_r+0x6d4>)
 8006082:	f7fc f863 	bl	800214c <__aeabi_dmul>
 8006086:	9a06      	ldr	r2, [sp, #24]
 8006088:	9b07      	ldr	r3, [sp, #28]
 800608a:	f7fa f9f9 	bl	8000480 <__aeabi_dcmpge>
 800608e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006090:	9304      	str	r3, [sp, #16]
 8006092:	001e      	movs	r6, r3
 8006094:	2800      	cmp	r0, #0
 8006096:	d000      	beq.n	800609a <_dtoa_r+0x4b2>
 8006098:	e24f      	b.n	800653a <_dtoa_r+0x952>
 800609a:	9b08      	ldr	r3, [sp, #32]
 800609c:	9a08      	ldr	r2, [sp, #32]
 800609e:	1c5d      	adds	r5, r3, #1
 80060a0:	2331      	movs	r3, #49	; 0x31
 80060a2:	3701      	adds	r7, #1
 80060a4:	7013      	strb	r3, [r2, #0]
 80060a6:	e24b      	b.n	8006540 <_dtoa_r+0x958>
 80060a8:	4234      	tst	r4, r6
 80060aa:	d00a      	beq.n	80060c2 <_dtoa_r+0x4da>
 80060ac:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80060ae:	4a85      	ldr	r2, [pc, #532]	; (80062c4 <_dtoa_r+0x6dc>)
 80060b0:	3301      	adds	r3, #1
 80060b2:	930e      	str	r3, [sp, #56]	; 0x38
 80060b4:	00eb      	lsls	r3, r5, #3
 80060b6:	189b      	adds	r3, r3, r2
 80060b8:	681a      	ldr	r2, [r3, #0]
 80060ba:	685b      	ldr	r3, [r3, #4]
 80060bc:	f7fc f846 	bl	800214c <__aeabi_dmul>
 80060c0:	0033      	movs	r3, r6
 80060c2:	1064      	asrs	r4, r4, #1
 80060c4:	3501      	adds	r5, #1
 80060c6:	e75f      	b.n	8005f88 <_dtoa_r+0x3a0>
 80060c8:	003e      	movs	r6, r7
 80060ca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80060cc:	e784      	b.n	8005fd8 <_dtoa_r+0x3f0>
 80060ce:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80060d0:	990d      	ldr	r1, [sp, #52]	; 0x34
 80060d2:	1e5a      	subs	r2, r3, #1
 80060d4:	4b74      	ldr	r3, [pc, #464]	; (80062a8 <_dtoa_r+0x6c0>)
 80060d6:	00d2      	lsls	r2, r2, #3
 80060d8:	189b      	adds	r3, r3, r2
 80060da:	681a      	ldr	r2, [r3, #0]
 80060dc:	685b      	ldr	r3, [r3, #4]
 80060de:	2900      	cmp	r1, #0
 80060e0:	d049      	beq.n	8006176 <_dtoa_r+0x58e>
 80060e2:	2000      	movs	r0, #0
 80060e4:	4978      	ldr	r1, [pc, #480]	; (80062c8 <_dtoa_r+0x6e0>)
 80060e6:	f7fb fc27 	bl	8001938 <__aeabi_ddiv>
 80060ea:	002b      	movs	r3, r5
 80060ec:	0022      	movs	r2, r4
 80060ee:	f7fc fa9f 	bl	8002630 <__aeabi_dsub>
 80060f2:	9b08      	ldr	r3, [sp, #32]
 80060f4:	900e      	str	r0, [sp, #56]	; 0x38
 80060f6:	910f      	str	r1, [sp, #60]	; 0x3c
 80060f8:	9315      	str	r3, [sp, #84]	; 0x54
 80060fa:	9806      	ldr	r0, [sp, #24]
 80060fc:	9907      	ldr	r1, [sp, #28]
 80060fe:	f7fc fdfb 	bl	8002cf8 <__aeabi_d2iz>
 8006102:	0004      	movs	r4, r0
 8006104:	f7fc fe2e 	bl	8002d64 <__aeabi_i2d>
 8006108:	0002      	movs	r2, r0
 800610a:	000b      	movs	r3, r1
 800610c:	9806      	ldr	r0, [sp, #24]
 800610e:	9907      	ldr	r1, [sp, #28]
 8006110:	f7fc fa8e 	bl	8002630 <__aeabi_dsub>
 8006114:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8006116:	3430      	adds	r4, #48	; 0x30
 8006118:	1c5d      	adds	r5, r3, #1
 800611a:	701c      	strb	r4, [r3, #0]
 800611c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800611e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8006120:	9006      	str	r0, [sp, #24]
 8006122:	9107      	str	r1, [sp, #28]
 8006124:	f7fa f98e 	bl	8000444 <__aeabi_dcmplt>
 8006128:	2800      	cmp	r0, #0
 800612a:	d16c      	bne.n	8006206 <_dtoa_r+0x61e>
 800612c:	9a06      	ldr	r2, [sp, #24]
 800612e:	9b07      	ldr	r3, [sp, #28]
 8006130:	2000      	movs	r0, #0
 8006132:	495e      	ldr	r1, [pc, #376]	; (80062ac <_dtoa_r+0x6c4>)
 8006134:	f7fc fa7c 	bl	8002630 <__aeabi_dsub>
 8006138:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800613a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800613c:	f7fa f982 	bl	8000444 <__aeabi_dcmplt>
 8006140:	2800      	cmp	r0, #0
 8006142:	d000      	beq.n	8006146 <_dtoa_r+0x55e>
 8006144:	e0c3      	b.n	80062ce <_dtoa_r+0x6e6>
 8006146:	9b08      	ldr	r3, [sp, #32]
 8006148:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800614a:	1aeb      	subs	r3, r5, r3
 800614c:	429a      	cmp	r2, r3
 800614e:	dc00      	bgt.n	8006152 <_dtoa_r+0x56a>
 8006150:	e777      	b.n	8006042 <_dtoa_r+0x45a>
 8006152:	980e      	ldr	r0, [sp, #56]	; 0x38
 8006154:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8006156:	2200      	movs	r2, #0
 8006158:	4b55      	ldr	r3, [pc, #340]	; (80062b0 <_dtoa_r+0x6c8>)
 800615a:	f7fb fff7 	bl	800214c <__aeabi_dmul>
 800615e:	2200      	movs	r2, #0
 8006160:	900e      	str	r0, [sp, #56]	; 0x38
 8006162:	910f      	str	r1, [sp, #60]	; 0x3c
 8006164:	9806      	ldr	r0, [sp, #24]
 8006166:	9907      	ldr	r1, [sp, #28]
 8006168:	4b51      	ldr	r3, [pc, #324]	; (80062b0 <_dtoa_r+0x6c8>)
 800616a:	f7fb ffef 	bl	800214c <__aeabi_dmul>
 800616e:	9515      	str	r5, [sp, #84]	; 0x54
 8006170:	9006      	str	r0, [sp, #24]
 8006172:	9107      	str	r1, [sp, #28]
 8006174:	e7c1      	b.n	80060fa <_dtoa_r+0x512>
 8006176:	0020      	movs	r0, r4
 8006178:	0029      	movs	r1, r5
 800617a:	f7fb ffe7 	bl	800214c <__aeabi_dmul>
 800617e:	9c08      	ldr	r4, [sp, #32]
 8006180:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8006182:	0023      	movs	r3, r4
 8006184:	4694      	mov	ip, r2
 8006186:	900e      	str	r0, [sp, #56]	; 0x38
 8006188:	910f      	str	r1, [sp, #60]	; 0x3c
 800618a:	4463      	add	r3, ip
 800618c:	9315      	str	r3, [sp, #84]	; 0x54
 800618e:	9806      	ldr	r0, [sp, #24]
 8006190:	9907      	ldr	r1, [sp, #28]
 8006192:	f7fc fdb1 	bl	8002cf8 <__aeabi_d2iz>
 8006196:	0005      	movs	r5, r0
 8006198:	f7fc fde4 	bl	8002d64 <__aeabi_i2d>
 800619c:	000b      	movs	r3, r1
 800619e:	0002      	movs	r2, r0
 80061a0:	9806      	ldr	r0, [sp, #24]
 80061a2:	9907      	ldr	r1, [sp, #28]
 80061a4:	f7fc fa44 	bl	8002630 <__aeabi_dsub>
 80061a8:	3530      	adds	r5, #48	; 0x30
 80061aa:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80061ac:	7025      	strb	r5, [r4, #0]
 80061ae:	3401      	adds	r4, #1
 80061b0:	9006      	str	r0, [sp, #24]
 80061b2:	9107      	str	r1, [sp, #28]
 80061b4:	42a3      	cmp	r3, r4
 80061b6:	d12a      	bne.n	800620e <_dtoa_r+0x626>
 80061b8:	980e      	ldr	r0, [sp, #56]	; 0x38
 80061ba:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80061bc:	9a08      	ldr	r2, [sp, #32]
 80061be:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80061c0:	4694      	mov	ip, r2
 80061c2:	4463      	add	r3, ip
 80061c4:	2200      	movs	r2, #0
 80061c6:	001d      	movs	r5, r3
 80061c8:	4b3f      	ldr	r3, [pc, #252]	; (80062c8 <_dtoa_r+0x6e0>)
 80061ca:	f7fb f899 	bl	8001300 <__aeabi_dadd>
 80061ce:	0002      	movs	r2, r0
 80061d0:	000b      	movs	r3, r1
 80061d2:	9806      	ldr	r0, [sp, #24]
 80061d4:	9907      	ldr	r1, [sp, #28]
 80061d6:	f7fa f949 	bl	800046c <__aeabi_dcmpgt>
 80061da:	2800      	cmp	r0, #0
 80061dc:	d000      	beq.n	80061e0 <_dtoa_r+0x5f8>
 80061de:	e076      	b.n	80062ce <_dtoa_r+0x6e6>
 80061e0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80061e2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80061e4:	2000      	movs	r0, #0
 80061e6:	4938      	ldr	r1, [pc, #224]	; (80062c8 <_dtoa_r+0x6e0>)
 80061e8:	f7fc fa22 	bl	8002630 <__aeabi_dsub>
 80061ec:	0002      	movs	r2, r0
 80061ee:	000b      	movs	r3, r1
 80061f0:	9806      	ldr	r0, [sp, #24]
 80061f2:	9907      	ldr	r1, [sp, #28]
 80061f4:	f7fa f926 	bl	8000444 <__aeabi_dcmplt>
 80061f8:	2800      	cmp	r0, #0
 80061fa:	d100      	bne.n	80061fe <_dtoa_r+0x616>
 80061fc:	e721      	b.n	8006042 <_dtoa_r+0x45a>
 80061fe:	1e6b      	subs	r3, r5, #1
 8006200:	781a      	ldrb	r2, [r3, #0]
 8006202:	2a30      	cmp	r2, #48	; 0x30
 8006204:	d001      	beq.n	800620a <_dtoa_r+0x622>
 8006206:	0037      	movs	r7, r6
 8006208:	e03f      	b.n	800628a <_dtoa_r+0x6a2>
 800620a:	001d      	movs	r5, r3
 800620c:	e7f7      	b.n	80061fe <_dtoa_r+0x616>
 800620e:	9806      	ldr	r0, [sp, #24]
 8006210:	9907      	ldr	r1, [sp, #28]
 8006212:	2200      	movs	r2, #0
 8006214:	4b26      	ldr	r3, [pc, #152]	; (80062b0 <_dtoa_r+0x6c8>)
 8006216:	f7fb ff99 	bl	800214c <__aeabi_dmul>
 800621a:	9006      	str	r0, [sp, #24]
 800621c:	9107      	str	r1, [sp, #28]
 800621e:	e7b6      	b.n	800618e <_dtoa_r+0x5a6>
 8006220:	9e08      	ldr	r6, [sp, #32]
 8006222:	9a04      	ldr	r2, [sp, #16]
 8006224:	9b05      	ldr	r3, [sp, #20]
 8006226:	9806      	ldr	r0, [sp, #24]
 8006228:	9907      	ldr	r1, [sp, #28]
 800622a:	f7fb fb85 	bl	8001938 <__aeabi_ddiv>
 800622e:	f7fc fd63 	bl	8002cf8 <__aeabi_d2iz>
 8006232:	0004      	movs	r4, r0
 8006234:	f7fc fd96 	bl	8002d64 <__aeabi_i2d>
 8006238:	9a04      	ldr	r2, [sp, #16]
 800623a:	9b05      	ldr	r3, [sp, #20]
 800623c:	f7fb ff86 	bl	800214c <__aeabi_dmul>
 8006240:	0002      	movs	r2, r0
 8006242:	000b      	movs	r3, r1
 8006244:	9806      	ldr	r0, [sp, #24]
 8006246:	9907      	ldr	r1, [sp, #28]
 8006248:	f7fc f9f2 	bl	8002630 <__aeabi_dsub>
 800624c:	0023      	movs	r3, r4
 800624e:	3330      	adds	r3, #48	; 0x30
 8006250:	7033      	strb	r3, [r6, #0]
 8006252:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8006254:	9b08      	ldr	r3, [sp, #32]
 8006256:	1c75      	adds	r5, r6, #1
 8006258:	1aeb      	subs	r3, r5, r3
 800625a:	429a      	cmp	r2, r3
 800625c:	d148      	bne.n	80062f0 <_dtoa_r+0x708>
 800625e:	0002      	movs	r2, r0
 8006260:	000b      	movs	r3, r1
 8006262:	f7fb f84d 	bl	8001300 <__aeabi_dadd>
 8006266:	9a04      	ldr	r2, [sp, #16]
 8006268:	9b05      	ldr	r3, [sp, #20]
 800626a:	9006      	str	r0, [sp, #24]
 800626c:	9107      	str	r1, [sp, #28]
 800626e:	f7fa f8fd 	bl	800046c <__aeabi_dcmpgt>
 8006272:	2800      	cmp	r0, #0
 8006274:	d12a      	bne.n	80062cc <_dtoa_r+0x6e4>
 8006276:	9a04      	ldr	r2, [sp, #16]
 8006278:	9b05      	ldr	r3, [sp, #20]
 800627a:	9806      	ldr	r0, [sp, #24]
 800627c:	9907      	ldr	r1, [sp, #28]
 800627e:	f7fa f8db 	bl	8000438 <__aeabi_dcmpeq>
 8006282:	2800      	cmp	r0, #0
 8006284:	d001      	beq.n	800628a <_dtoa_r+0x6a2>
 8006286:	07e3      	lsls	r3, r4, #31
 8006288:	d420      	bmi.n	80062cc <_dtoa_r+0x6e4>
 800628a:	9903      	ldr	r1, [sp, #12]
 800628c:	9802      	ldr	r0, [sp, #8]
 800628e:	f000 faed 	bl	800686c <_Bfree>
 8006292:	2300      	movs	r3, #0
 8006294:	702b      	strb	r3, [r5, #0]
 8006296:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8006298:	3701      	adds	r7, #1
 800629a:	601f      	str	r7, [r3, #0]
 800629c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 800629e:	2b00      	cmp	r3, #0
 80062a0:	d100      	bne.n	80062a4 <_dtoa_r+0x6bc>
 80062a2:	e4e6      	b.n	8005c72 <_dtoa_r+0x8a>
 80062a4:	601d      	str	r5, [r3, #0]
 80062a6:	e4e4      	b.n	8005c72 <_dtoa_r+0x8a>
 80062a8:	08007518 	.word	0x08007518
 80062ac:	3ff00000 	.word	0x3ff00000
 80062b0:	40240000 	.word	0x40240000
 80062b4:	401c0000 	.word	0x401c0000
 80062b8:	fcc00000 	.word	0xfcc00000
 80062bc:	40140000 	.word	0x40140000
 80062c0:	7cc00000 	.word	0x7cc00000
 80062c4:	080074f0 	.word	0x080074f0
 80062c8:	3fe00000 	.word	0x3fe00000
 80062cc:	003e      	movs	r6, r7
 80062ce:	1e6b      	subs	r3, r5, #1
 80062d0:	781a      	ldrb	r2, [r3, #0]
 80062d2:	2a39      	cmp	r2, #57	; 0x39
 80062d4:	d106      	bne.n	80062e4 <_dtoa_r+0x6fc>
 80062d6:	9a08      	ldr	r2, [sp, #32]
 80062d8:	429a      	cmp	r2, r3
 80062da:	d107      	bne.n	80062ec <_dtoa_r+0x704>
 80062dc:	2330      	movs	r3, #48	; 0x30
 80062de:	7013      	strb	r3, [r2, #0]
 80062e0:	0013      	movs	r3, r2
 80062e2:	3601      	adds	r6, #1
 80062e4:	781a      	ldrb	r2, [r3, #0]
 80062e6:	3201      	adds	r2, #1
 80062e8:	701a      	strb	r2, [r3, #0]
 80062ea:	e78c      	b.n	8006206 <_dtoa_r+0x61e>
 80062ec:	001d      	movs	r5, r3
 80062ee:	e7ee      	b.n	80062ce <_dtoa_r+0x6e6>
 80062f0:	2200      	movs	r2, #0
 80062f2:	4ba4      	ldr	r3, [pc, #656]	; (8006584 <_dtoa_r+0x99c>)
 80062f4:	f7fb ff2a 	bl	800214c <__aeabi_dmul>
 80062f8:	2200      	movs	r2, #0
 80062fa:	2300      	movs	r3, #0
 80062fc:	9006      	str	r0, [sp, #24]
 80062fe:	9107      	str	r1, [sp, #28]
 8006300:	002e      	movs	r6, r5
 8006302:	f7fa f899 	bl	8000438 <__aeabi_dcmpeq>
 8006306:	2800      	cmp	r0, #0
 8006308:	d08b      	beq.n	8006222 <_dtoa_r+0x63a>
 800630a:	e7be      	b.n	800628a <_dtoa_r+0x6a2>
 800630c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800630e:	2a00      	cmp	r2, #0
 8006310:	d100      	bne.n	8006314 <_dtoa_r+0x72c>
 8006312:	e0da      	b.n	80064ca <_dtoa_r+0x8e2>
 8006314:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8006316:	2a01      	cmp	r2, #1
 8006318:	dd00      	ble.n	800631c <_dtoa_r+0x734>
 800631a:	e0bd      	b.n	8006498 <_dtoa_r+0x8b0>
 800631c:	9a16      	ldr	r2, [sp, #88]	; 0x58
 800631e:	2a00      	cmp	r2, #0
 8006320:	d100      	bne.n	8006324 <_dtoa_r+0x73c>
 8006322:	e0b5      	b.n	8006490 <_dtoa_r+0x8a8>
 8006324:	4a98      	ldr	r2, [pc, #608]	; (8006588 <_dtoa_r+0x9a0>)
 8006326:	189b      	adds	r3, r3, r2
 8006328:	9d04      	ldr	r5, [sp, #16]
 800632a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800632c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800632e:	2101      	movs	r1, #1
 8006330:	18d2      	adds	r2, r2, r3
 8006332:	920a      	str	r2, [sp, #40]	; 0x28
 8006334:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8006336:	9802      	ldr	r0, [sp, #8]
 8006338:	18d3      	adds	r3, r2, r3
 800633a:	930b      	str	r3, [sp, #44]	; 0x2c
 800633c:	f000 fb36 	bl	80069ac <__i2b>
 8006340:	0006      	movs	r6, r0
 8006342:	2c00      	cmp	r4, #0
 8006344:	dd0e      	ble.n	8006364 <_dtoa_r+0x77c>
 8006346:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8006348:	2b00      	cmp	r3, #0
 800634a:	dd0b      	ble.n	8006364 <_dtoa_r+0x77c>
 800634c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800634e:	0023      	movs	r3, r4
 8006350:	4294      	cmp	r4, r2
 8006352:	dd00      	ble.n	8006356 <_dtoa_r+0x76e>
 8006354:	0013      	movs	r3, r2
 8006356:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8006358:	1ae4      	subs	r4, r4, r3
 800635a:	1ad2      	subs	r2, r2, r3
 800635c:	920a      	str	r2, [sp, #40]	; 0x28
 800635e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8006360:	1ad3      	subs	r3, r2, r3
 8006362:	930b      	str	r3, [sp, #44]	; 0x2c
 8006364:	9b04      	ldr	r3, [sp, #16]
 8006366:	2b00      	cmp	r3, #0
 8006368:	d01f      	beq.n	80063aa <_dtoa_r+0x7c2>
 800636a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800636c:	2b00      	cmp	r3, #0
 800636e:	d100      	bne.n	8006372 <_dtoa_r+0x78a>
 8006370:	e0af      	b.n	80064d2 <_dtoa_r+0x8ea>
 8006372:	2d00      	cmp	r5, #0
 8006374:	d011      	beq.n	800639a <_dtoa_r+0x7b2>
 8006376:	0031      	movs	r1, r6
 8006378:	002a      	movs	r2, r5
 800637a:	9802      	ldr	r0, [sp, #8]
 800637c:	f000 fbae 	bl	8006adc <__pow5mult>
 8006380:	9a03      	ldr	r2, [sp, #12]
 8006382:	0001      	movs	r1, r0
 8006384:	0006      	movs	r6, r0
 8006386:	9802      	ldr	r0, [sp, #8]
 8006388:	f000 fb19 	bl	80069be <__multiply>
 800638c:	9903      	ldr	r1, [sp, #12]
 800638e:	9010      	str	r0, [sp, #64]	; 0x40
 8006390:	9802      	ldr	r0, [sp, #8]
 8006392:	f000 fa6b 	bl	800686c <_Bfree>
 8006396:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8006398:	9303      	str	r3, [sp, #12]
 800639a:	9b04      	ldr	r3, [sp, #16]
 800639c:	1b5a      	subs	r2, r3, r5
 800639e:	d004      	beq.n	80063aa <_dtoa_r+0x7c2>
 80063a0:	9903      	ldr	r1, [sp, #12]
 80063a2:	9802      	ldr	r0, [sp, #8]
 80063a4:	f000 fb9a 	bl	8006adc <__pow5mult>
 80063a8:	9003      	str	r0, [sp, #12]
 80063aa:	2101      	movs	r1, #1
 80063ac:	9802      	ldr	r0, [sp, #8]
 80063ae:	f000 fafd 	bl	80069ac <__i2b>
 80063b2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80063b4:	9004      	str	r0, [sp, #16]
 80063b6:	2b00      	cmp	r3, #0
 80063b8:	d100      	bne.n	80063bc <_dtoa_r+0x7d4>
 80063ba:	e1e3      	b.n	8006784 <_dtoa_r+0xb9c>
 80063bc:	001a      	movs	r2, r3
 80063be:	0001      	movs	r1, r0
 80063c0:	9802      	ldr	r0, [sp, #8]
 80063c2:	f000 fb8b 	bl	8006adc <__pow5mult>
 80063c6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80063c8:	9004      	str	r0, [sp, #16]
 80063ca:	2b01      	cmp	r3, #1
 80063cc:	dd00      	ble.n	80063d0 <_dtoa_r+0x7e8>
 80063ce:	e082      	b.n	80064d6 <_dtoa_r+0x8ee>
 80063d0:	2500      	movs	r5, #0
 80063d2:	9b06      	ldr	r3, [sp, #24]
 80063d4:	42ab      	cmp	r3, r5
 80063d6:	d10e      	bne.n	80063f6 <_dtoa_r+0x80e>
 80063d8:	9b07      	ldr	r3, [sp, #28]
 80063da:	031b      	lsls	r3, r3, #12
 80063dc:	42ab      	cmp	r3, r5
 80063de:	d10a      	bne.n	80063f6 <_dtoa_r+0x80e>
 80063e0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80063e2:	9a07      	ldr	r2, [sp, #28]
 80063e4:	4213      	tst	r3, r2
 80063e6:	d006      	beq.n	80063f6 <_dtoa_r+0x80e>
 80063e8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80063ea:	3501      	adds	r5, #1
 80063ec:	3301      	adds	r3, #1
 80063ee:	930a      	str	r3, [sp, #40]	; 0x28
 80063f0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80063f2:	3301      	adds	r3, #1
 80063f4:	930b      	str	r3, [sp, #44]	; 0x2c
 80063f6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80063f8:	2001      	movs	r0, #1
 80063fa:	2b00      	cmp	r3, #0
 80063fc:	d16c      	bne.n	80064d8 <_dtoa_r+0x8f0>
 80063fe:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8006400:	1818      	adds	r0, r3, r0
 8006402:	231f      	movs	r3, #31
 8006404:	4018      	ands	r0, r3
 8006406:	d07e      	beq.n	8006506 <_dtoa_r+0x91e>
 8006408:	3301      	adds	r3, #1
 800640a:	1a1b      	subs	r3, r3, r0
 800640c:	2b04      	cmp	r3, #4
 800640e:	dd70      	ble.n	80064f2 <_dtoa_r+0x90a>
 8006410:	231c      	movs	r3, #28
 8006412:	1a18      	subs	r0, r3, r0
 8006414:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006416:	1824      	adds	r4, r4, r0
 8006418:	181b      	adds	r3, r3, r0
 800641a:	930a      	str	r3, [sp, #40]	; 0x28
 800641c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800641e:	181b      	adds	r3, r3, r0
 8006420:	930b      	str	r3, [sp, #44]	; 0x2c
 8006422:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006424:	2b00      	cmp	r3, #0
 8006426:	dd05      	ble.n	8006434 <_dtoa_r+0x84c>
 8006428:	001a      	movs	r2, r3
 800642a:	9903      	ldr	r1, [sp, #12]
 800642c:	9802      	ldr	r0, [sp, #8]
 800642e:	f000 fba7 	bl	8006b80 <__lshift>
 8006432:	9003      	str	r0, [sp, #12]
 8006434:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8006436:	2b00      	cmp	r3, #0
 8006438:	dd05      	ble.n	8006446 <_dtoa_r+0x85e>
 800643a:	001a      	movs	r2, r3
 800643c:	9904      	ldr	r1, [sp, #16]
 800643e:	9802      	ldr	r0, [sp, #8]
 8006440:	f000 fb9e 	bl	8006b80 <__lshift>
 8006444:	9004      	str	r0, [sp, #16]
 8006446:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8006448:	2b00      	cmp	r3, #0
 800644a:	d05e      	beq.n	800650a <_dtoa_r+0x922>
 800644c:	9904      	ldr	r1, [sp, #16]
 800644e:	9803      	ldr	r0, [sp, #12]
 8006450:	f000 fbe8 	bl	8006c24 <__mcmp>
 8006454:	2800      	cmp	r0, #0
 8006456:	da58      	bge.n	800650a <_dtoa_r+0x922>
 8006458:	2300      	movs	r3, #0
 800645a:	220a      	movs	r2, #10
 800645c:	9903      	ldr	r1, [sp, #12]
 800645e:	9802      	ldr	r0, [sp, #8]
 8006460:	f000 fa1d 	bl	800689e <__multadd>
 8006464:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8006466:	3f01      	subs	r7, #1
 8006468:	9003      	str	r0, [sp, #12]
 800646a:	2b00      	cmp	r3, #0
 800646c:	d100      	bne.n	8006470 <_dtoa_r+0x888>
 800646e:	e190      	b.n	8006792 <_dtoa_r+0xbaa>
 8006470:	2300      	movs	r3, #0
 8006472:	0031      	movs	r1, r6
 8006474:	220a      	movs	r2, #10
 8006476:	9802      	ldr	r0, [sp, #8]
 8006478:	f000 fa11 	bl	800689e <__multadd>
 800647c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800647e:	0006      	movs	r6, r0
 8006480:	2b00      	cmp	r3, #0
 8006482:	dd00      	ble.n	8006486 <_dtoa_r+0x89e>
 8006484:	e088      	b.n	8006598 <_dtoa_r+0x9b0>
 8006486:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8006488:	2b02      	cmp	r3, #2
 800648a:	dc00      	bgt.n	800648e <_dtoa_r+0x8a6>
 800648c:	e084      	b.n	8006598 <_dtoa_r+0x9b0>
 800648e:	e044      	b.n	800651a <_dtoa_r+0x932>
 8006490:	2336      	movs	r3, #54	; 0x36
 8006492:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8006494:	1a9b      	subs	r3, r3, r2
 8006496:	e747      	b.n	8006328 <_dtoa_r+0x740>
 8006498:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800649a:	1e5d      	subs	r5, r3, #1
 800649c:	9b04      	ldr	r3, [sp, #16]
 800649e:	42ab      	cmp	r3, r5
 80064a0:	db08      	blt.n	80064b4 <_dtoa_r+0x8cc>
 80064a2:	1b5d      	subs	r5, r3, r5
 80064a4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80064a6:	2b00      	cmp	r3, #0
 80064a8:	da0c      	bge.n	80064c4 <_dtoa_r+0x8dc>
 80064aa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80064ac:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80064ae:	1a9c      	subs	r4, r3, r2
 80064b0:	2300      	movs	r3, #0
 80064b2:	e73b      	b.n	800632c <_dtoa_r+0x744>
 80064b4:	9b04      	ldr	r3, [sp, #16]
 80064b6:	9504      	str	r5, [sp, #16]
 80064b8:	1aea      	subs	r2, r5, r3
 80064ba:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80064bc:	2500      	movs	r5, #0
 80064be:	189b      	adds	r3, r3, r2
 80064c0:	9311      	str	r3, [sp, #68]	; 0x44
 80064c2:	e7ef      	b.n	80064a4 <_dtoa_r+0x8bc>
 80064c4:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80064c6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80064c8:	e730      	b.n	800632c <_dtoa_r+0x744>
 80064ca:	9d04      	ldr	r5, [sp, #16]
 80064cc:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80064ce:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 80064d0:	e737      	b.n	8006342 <_dtoa_r+0x75a>
 80064d2:	9a04      	ldr	r2, [sp, #16]
 80064d4:	e764      	b.n	80063a0 <_dtoa_r+0x7b8>
 80064d6:	2500      	movs	r5, #0
 80064d8:	9b04      	ldr	r3, [sp, #16]
 80064da:	9a04      	ldr	r2, [sp, #16]
 80064dc:	691b      	ldr	r3, [r3, #16]
 80064de:	9310      	str	r3, [sp, #64]	; 0x40
 80064e0:	3303      	adds	r3, #3
 80064e2:	009b      	lsls	r3, r3, #2
 80064e4:	18d3      	adds	r3, r2, r3
 80064e6:	6858      	ldr	r0, [r3, #4]
 80064e8:	f000 fa17 	bl	800691a <__hi0bits>
 80064ec:	2320      	movs	r3, #32
 80064ee:	1a18      	subs	r0, r3, r0
 80064f0:	e785      	b.n	80063fe <_dtoa_r+0x816>
 80064f2:	2b04      	cmp	r3, #4
 80064f4:	d095      	beq.n	8006422 <_dtoa_r+0x83a>
 80064f6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80064f8:	331c      	adds	r3, #28
 80064fa:	18d2      	adds	r2, r2, r3
 80064fc:	920a      	str	r2, [sp, #40]	; 0x28
 80064fe:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8006500:	18e4      	adds	r4, r4, r3
 8006502:	18d3      	adds	r3, r2, r3
 8006504:	e78c      	b.n	8006420 <_dtoa_r+0x838>
 8006506:	0003      	movs	r3, r0
 8006508:	e7f5      	b.n	80064f6 <_dtoa_r+0x90e>
 800650a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800650c:	2b00      	cmp	r3, #0
 800650e:	dc3d      	bgt.n	800658c <_dtoa_r+0x9a4>
 8006510:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8006512:	2b02      	cmp	r3, #2
 8006514:	dd3a      	ble.n	800658c <_dtoa_r+0x9a4>
 8006516:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006518:	930c      	str	r3, [sp, #48]	; 0x30
 800651a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800651c:	2b00      	cmp	r3, #0
 800651e:	d10c      	bne.n	800653a <_dtoa_r+0x952>
 8006520:	9904      	ldr	r1, [sp, #16]
 8006522:	2205      	movs	r2, #5
 8006524:	9802      	ldr	r0, [sp, #8]
 8006526:	f000 f9ba 	bl	800689e <__multadd>
 800652a:	9004      	str	r0, [sp, #16]
 800652c:	0001      	movs	r1, r0
 800652e:	9803      	ldr	r0, [sp, #12]
 8006530:	f000 fb78 	bl	8006c24 <__mcmp>
 8006534:	2800      	cmp	r0, #0
 8006536:	dd00      	ble.n	800653a <_dtoa_r+0x952>
 8006538:	e5af      	b.n	800609a <_dtoa_r+0x4b2>
 800653a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800653c:	9d08      	ldr	r5, [sp, #32]
 800653e:	43df      	mvns	r7, r3
 8006540:	2300      	movs	r3, #0
 8006542:	9309      	str	r3, [sp, #36]	; 0x24
 8006544:	9904      	ldr	r1, [sp, #16]
 8006546:	9802      	ldr	r0, [sp, #8]
 8006548:	f000 f990 	bl	800686c <_Bfree>
 800654c:	2e00      	cmp	r6, #0
 800654e:	d100      	bne.n	8006552 <_dtoa_r+0x96a>
 8006550:	e69b      	b.n	800628a <_dtoa_r+0x6a2>
 8006552:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006554:	2b00      	cmp	r3, #0
 8006556:	d005      	beq.n	8006564 <_dtoa_r+0x97c>
 8006558:	42b3      	cmp	r3, r6
 800655a:	d003      	beq.n	8006564 <_dtoa_r+0x97c>
 800655c:	0019      	movs	r1, r3
 800655e:	9802      	ldr	r0, [sp, #8]
 8006560:	f000 f984 	bl	800686c <_Bfree>
 8006564:	0031      	movs	r1, r6
 8006566:	9802      	ldr	r0, [sp, #8]
 8006568:	f000 f980 	bl	800686c <_Bfree>
 800656c:	e68d      	b.n	800628a <_dtoa_r+0x6a2>
 800656e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8006570:	9304      	str	r3, [sp, #16]
 8006572:	001e      	movs	r6, r3
 8006574:	e7e1      	b.n	800653a <_dtoa_r+0x952>
 8006576:	2300      	movs	r3, #0
 8006578:	e7fa      	b.n	8006570 <_dtoa_r+0x988>
 800657a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800657c:	0037      	movs	r7, r6
 800657e:	9304      	str	r3, [sp, #16]
 8006580:	001e      	movs	r6, r3
 8006582:	e58a      	b.n	800609a <_dtoa_r+0x4b2>
 8006584:	40240000 	.word	0x40240000
 8006588:	00000433 	.word	0x00000433
 800658c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800658e:	2b00      	cmp	r3, #0
 8006590:	d100      	bne.n	8006594 <_dtoa_r+0x9ac>
 8006592:	e0b2      	b.n	80066fa <_dtoa_r+0xb12>
 8006594:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006596:	930c      	str	r3, [sp, #48]	; 0x30
 8006598:	2c00      	cmp	r4, #0
 800659a:	dd05      	ble.n	80065a8 <_dtoa_r+0x9c0>
 800659c:	0031      	movs	r1, r6
 800659e:	0022      	movs	r2, r4
 80065a0:	9802      	ldr	r0, [sp, #8]
 80065a2:	f000 faed 	bl	8006b80 <__lshift>
 80065a6:	0006      	movs	r6, r0
 80065a8:	0030      	movs	r0, r6
 80065aa:	2d00      	cmp	r5, #0
 80065ac:	d011      	beq.n	80065d2 <_dtoa_r+0x9ea>
 80065ae:	6871      	ldr	r1, [r6, #4]
 80065b0:	9802      	ldr	r0, [sp, #8]
 80065b2:	f000 f923 	bl	80067fc <_Balloc>
 80065b6:	0031      	movs	r1, r6
 80065b8:	0004      	movs	r4, r0
 80065ba:	6933      	ldr	r3, [r6, #16]
 80065bc:	310c      	adds	r1, #12
 80065be:	1c9a      	adds	r2, r3, #2
 80065c0:	0092      	lsls	r2, r2, #2
 80065c2:	300c      	adds	r0, #12
 80065c4:	f000 f911 	bl	80067ea <memcpy>
 80065c8:	2201      	movs	r2, #1
 80065ca:	0021      	movs	r1, r4
 80065cc:	9802      	ldr	r0, [sp, #8]
 80065ce:	f000 fad7 	bl	8006b80 <__lshift>
 80065d2:	9609      	str	r6, [sp, #36]	; 0x24
 80065d4:	0006      	movs	r6, r0
 80065d6:	9b08      	ldr	r3, [sp, #32]
 80065d8:	930a      	str	r3, [sp, #40]	; 0x28
 80065da:	9904      	ldr	r1, [sp, #16]
 80065dc:	9803      	ldr	r0, [sp, #12]
 80065de:	f7ff fa7d 	bl	8005adc <quorem>
 80065e2:	9909      	ldr	r1, [sp, #36]	; 0x24
 80065e4:	900d      	str	r0, [sp, #52]	; 0x34
 80065e6:	0004      	movs	r4, r0
 80065e8:	9803      	ldr	r0, [sp, #12]
 80065ea:	f000 fb1b 	bl	8006c24 <__mcmp>
 80065ee:	0032      	movs	r2, r6
 80065f0:	9010      	str	r0, [sp, #64]	; 0x40
 80065f2:	9904      	ldr	r1, [sp, #16]
 80065f4:	9802      	ldr	r0, [sp, #8]
 80065f6:	f000 fb2f 	bl	8006c58 <__mdiff>
 80065fa:	2301      	movs	r3, #1
 80065fc:	930b      	str	r3, [sp, #44]	; 0x2c
 80065fe:	68c3      	ldr	r3, [r0, #12]
 8006600:	3430      	adds	r4, #48	; 0x30
 8006602:	0005      	movs	r5, r0
 8006604:	2b00      	cmp	r3, #0
 8006606:	d104      	bne.n	8006612 <_dtoa_r+0xa2a>
 8006608:	0001      	movs	r1, r0
 800660a:	9803      	ldr	r0, [sp, #12]
 800660c:	f000 fb0a 	bl	8006c24 <__mcmp>
 8006610:	900b      	str	r0, [sp, #44]	; 0x2c
 8006612:	0029      	movs	r1, r5
 8006614:	9802      	ldr	r0, [sp, #8]
 8006616:	f000 f929 	bl	800686c <_Bfree>
 800661a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800661c:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800661e:	4313      	orrs	r3, r2
 8006620:	d10e      	bne.n	8006640 <_dtoa_r+0xa58>
 8006622:	9a06      	ldr	r2, [sp, #24]
 8006624:	3301      	adds	r3, #1
 8006626:	4213      	tst	r3, r2
 8006628:	d10a      	bne.n	8006640 <_dtoa_r+0xa58>
 800662a:	2c39      	cmp	r4, #57	; 0x39
 800662c:	d026      	beq.n	800667c <_dtoa_r+0xa94>
 800662e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8006630:	2b00      	cmp	r3, #0
 8006632:	dd01      	ble.n	8006638 <_dtoa_r+0xa50>
 8006634:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8006636:	3431      	adds	r4, #49	; 0x31
 8006638:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800663a:	1c5d      	adds	r5, r3, #1
 800663c:	701c      	strb	r4, [r3, #0]
 800663e:	e781      	b.n	8006544 <_dtoa_r+0x95c>
 8006640:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8006642:	2b00      	cmp	r3, #0
 8006644:	db07      	blt.n	8006656 <_dtoa_r+0xa6e>
 8006646:	001d      	movs	r5, r3
 8006648:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800664a:	431d      	orrs	r5, r3
 800664c:	d122      	bne.n	8006694 <_dtoa_r+0xaac>
 800664e:	2301      	movs	r3, #1
 8006650:	9a06      	ldr	r2, [sp, #24]
 8006652:	4213      	tst	r3, r2
 8006654:	d11e      	bne.n	8006694 <_dtoa_r+0xaac>
 8006656:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8006658:	2b00      	cmp	r3, #0
 800665a:	dded      	ble.n	8006638 <_dtoa_r+0xa50>
 800665c:	9903      	ldr	r1, [sp, #12]
 800665e:	2201      	movs	r2, #1
 8006660:	9802      	ldr	r0, [sp, #8]
 8006662:	f000 fa8d 	bl	8006b80 <__lshift>
 8006666:	9904      	ldr	r1, [sp, #16]
 8006668:	9003      	str	r0, [sp, #12]
 800666a:	f000 fadb 	bl	8006c24 <__mcmp>
 800666e:	2800      	cmp	r0, #0
 8006670:	dc02      	bgt.n	8006678 <_dtoa_r+0xa90>
 8006672:	d1e1      	bne.n	8006638 <_dtoa_r+0xa50>
 8006674:	07e3      	lsls	r3, r4, #31
 8006676:	d5df      	bpl.n	8006638 <_dtoa_r+0xa50>
 8006678:	2c39      	cmp	r4, #57	; 0x39
 800667a:	d1db      	bne.n	8006634 <_dtoa_r+0xa4c>
 800667c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800667e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8006680:	1c5d      	adds	r5, r3, #1
 8006682:	2339      	movs	r3, #57	; 0x39
 8006684:	7013      	strb	r3, [r2, #0]
 8006686:	1e6b      	subs	r3, r5, #1
 8006688:	781a      	ldrb	r2, [r3, #0]
 800668a:	2a39      	cmp	r2, #57	; 0x39
 800668c:	d067      	beq.n	800675e <_dtoa_r+0xb76>
 800668e:	3201      	adds	r2, #1
 8006690:	701a      	strb	r2, [r3, #0]
 8006692:	e757      	b.n	8006544 <_dtoa_r+0x95c>
 8006694:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006696:	1c5d      	adds	r5, r3, #1
 8006698:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800669a:	2b00      	cmp	r3, #0
 800669c:	dd04      	ble.n	80066a8 <_dtoa_r+0xac0>
 800669e:	2c39      	cmp	r4, #57	; 0x39
 80066a0:	d0ec      	beq.n	800667c <_dtoa_r+0xa94>
 80066a2:	3401      	adds	r4, #1
 80066a4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80066a6:	e7c9      	b.n	800663c <_dtoa_r+0xa54>
 80066a8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80066aa:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80066ac:	701c      	strb	r4, [r3, #0]
 80066ae:	9b08      	ldr	r3, [sp, #32]
 80066b0:	1aeb      	subs	r3, r5, r3
 80066b2:	4293      	cmp	r3, r2
 80066b4:	d03e      	beq.n	8006734 <_dtoa_r+0xb4c>
 80066b6:	2300      	movs	r3, #0
 80066b8:	220a      	movs	r2, #10
 80066ba:	9903      	ldr	r1, [sp, #12]
 80066bc:	9802      	ldr	r0, [sp, #8]
 80066be:	f000 f8ee 	bl	800689e <__multadd>
 80066c2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80066c4:	9003      	str	r0, [sp, #12]
 80066c6:	42b3      	cmp	r3, r6
 80066c8:	d109      	bne.n	80066de <_dtoa_r+0xaf6>
 80066ca:	2300      	movs	r3, #0
 80066cc:	220a      	movs	r2, #10
 80066ce:	9909      	ldr	r1, [sp, #36]	; 0x24
 80066d0:	9802      	ldr	r0, [sp, #8]
 80066d2:	f000 f8e4 	bl	800689e <__multadd>
 80066d6:	9009      	str	r0, [sp, #36]	; 0x24
 80066d8:	0006      	movs	r6, r0
 80066da:	950a      	str	r5, [sp, #40]	; 0x28
 80066dc:	e77d      	b.n	80065da <_dtoa_r+0x9f2>
 80066de:	9909      	ldr	r1, [sp, #36]	; 0x24
 80066e0:	2300      	movs	r3, #0
 80066e2:	220a      	movs	r2, #10
 80066e4:	9802      	ldr	r0, [sp, #8]
 80066e6:	f000 f8da 	bl	800689e <__multadd>
 80066ea:	2300      	movs	r3, #0
 80066ec:	9009      	str	r0, [sp, #36]	; 0x24
 80066ee:	220a      	movs	r2, #10
 80066f0:	0031      	movs	r1, r6
 80066f2:	9802      	ldr	r0, [sp, #8]
 80066f4:	f000 f8d3 	bl	800689e <__multadd>
 80066f8:	e7ee      	b.n	80066d8 <_dtoa_r+0xaf0>
 80066fa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80066fc:	930c      	str	r3, [sp, #48]	; 0x30
 80066fe:	9b08      	ldr	r3, [sp, #32]
 8006700:	9306      	str	r3, [sp, #24]
 8006702:	9904      	ldr	r1, [sp, #16]
 8006704:	9803      	ldr	r0, [sp, #12]
 8006706:	f7ff f9e9 	bl	8005adc <quorem>
 800670a:	9b06      	ldr	r3, [sp, #24]
 800670c:	3030      	adds	r0, #48	; 0x30
 800670e:	1c5d      	adds	r5, r3, #1
 8006710:	7018      	strb	r0, [r3, #0]
 8006712:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8006714:	9b08      	ldr	r3, [sp, #32]
 8006716:	0004      	movs	r4, r0
 8006718:	1aeb      	subs	r3, r5, r3
 800671a:	429a      	cmp	r2, r3
 800671c:	dd08      	ble.n	8006730 <_dtoa_r+0xb48>
 800671e:	2300      	movs	r3, #0
 8006720:	220a      	movs	r2, #10
 8006722:	9903      	ldr	r1, [sp, #12]
 8006724:	9802      	ldr	r0, [sp, #8]
 8006726:	f000 f8ba 	bl	800689e <__multadd>
 800672a:	9506      	str	r5, [sp, #24]
 800672c:	9003      	str	r0, [sp, #12]
 800672e:	e7e8      	b.n	8006702 <_dtoa_r+0xb1a>
 8006730:	2300      	movs	r3, #0
 8006732:	9309      	str	r3, [sp, #36]	; 0x24
 8006734:	9903      	ldr	r1, [sp, #12]
 8006736:	2201      	movs	r2, #1
 8006738:	9802      	ldr	r0, [sp, #8]
 800673a:	f000 fa21 	bl	8006b80 <__lshift>
 800673e:	9904      	ldr	r1, [sp, #16]
 8006740:	9003      	str	r0, [sp, #12]
 8006742:	f000 fa6f 	bl	8006c24 <__mcmp>
 8006746:	2800      	cmp	r0, #0
 8006748:	dc9d      	bgt.n	8006686 <_dtoa_r+0xa9e>
 800674a:	d101      	bne.n	8006750 <_dtoa_r+0xb68>
 800674c:	07e3      	lsls	r3, r4, #31
 800674e:	d49a      	bmi.n	8006686 <_dtoa_r+0xa9e>
 8006750:	1e6b      	subs	r3, r5, #1
 8006752:	781a      	ldrb	r2, [r3, #0]
 8006754:	2a30      	cmp	r2, #48	; 0x30
 8006756:	d000      	beq.n	800675a <_dtoa_r+0xb72>
 8006758:	e6f4      	b.n	8006544 <_dtoa_r+0x95c>
 800675a:	001d      	movs	r5, r3
 800675c:	e7f8      	b.n	8006750 <_dtoa_r+0xb68>
 800675e:	9a08      	ldr	r2, [sp, #32]
 8006760:	429a      	cmp	r2, r3
 8006762:	d103      	bne.n	800676c <_dtoa_r+0xb84>
 8006764:	2331      	movs	r3, #49	; 0x31
 8006766:	3701      	adds	r7, #1
 8006768:	7013      	strb	r3, [r2, #0]
 800676a:	e6eb      	b.n	8006544 <_dtoa_r+0x95c>
 800676c:	001d      	movs	r5, r3
 800676e:	e78a      	b.n	8006686 <_dtoa_r+0xa9e>
 8006770:	4b0b      	ldr	r3, [pc, #44]	; (80067a0 <_dtoa_r+0xbb8>)
 8006772:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8006774:	9308      	str	r3, [sp, #32]
 8006776:	4b0b      	ldr	r3, [pc, #44]	; (80067a4 <_dtoa_r+0xbbc>)
 8006778:	2a00      	cmp	r2, #0
 800677a:	d001      	beq.n	8006780 <_dtoa_r+0xb98>
 800677c:	f7ff fa77 	bl	8005c6e <_dtoa_r+0x86>
 8006780:	f7ff fa77 	bl	8005c72 <_dtoa_r+0x8a>
 8006784:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8006786:	2b01      	cmp	r3, #1
 8006788:	dc00      	bgt.n	800678c <_dtoa_r+0xba4>
 800678a:	e621      	b.n	80063d0 <_dtoa_r+0x7e8>
 800678c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 800678e:	2001      	movs	r0, #1
 8006790:	e635      	b.n	80063fe <_dtoa_r+0x816>
 8006792:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8006794:	2b00      	cmp	r3, #0
 8006796:	dcb2      	bgt.n	80066fe <_dtoa_r+0xb16>
 8006798:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800679a:	2b02      	cmp	r3, #2
 800679c:	ddaf      	ble.n	80066fe <_dtoa_r+0xb16>
 800679e:	e6bc      	b.n	800651a <_dtoa_r+0x932>
 80067a0:	080074dc 	.word	0x080074dc
 80067a4:	080074e4 	.word	0x080074e4

080067a8 <_localeconv_r>:
 80067a8:	4b03      	ldr	r3, [pc, #12]	; (80067b8 <_localeconv_r+0x10>)
 80067aa:	681b      	ldr	r3, [r3, #0]
 80067ac:	6a18      	ldr	r0, [r3, #32]
 80067ae:	2800      	cmp	r0, #0
 80067b0:	d100      	bne.n	80067b4 <_localeconv_r+0xc>
 80067b2:	4802      	ldr	r0, [pc, #8]	; (80067bc <_localeconv_r+0x14>)
 80067b4:	30f0      	adds	r0, #240	; 0xf0
 80067b6:	4770      	bx	lr
 80067b8:	20000018 	.word	0x20000018
 80067bc:	2000007c 	.word	0x2000007c

080067c0 <malloc>:
 80067c0:	b510      	push	{r4, lr}
 80067c2:	4b03      	ldr	r3, [pc, #12]	; (80067d0 <malloc+0x10>)
 80067c4:	0001      	movs	r1, r0
 80067c6:	6818      	ldr	r0, [r3, #0]
 80067c8:	f000 fb56 	bl	8006e78 <_malloc_r>
 80067cc:	bd10      	pop	{r4, pc}
 80067ce:	46c0      	nop			; (mov r8, r8)
 80067d0:	20000018 	.word	0x20000018

080067d4 <memchr>:
 80067d4:	b2c9      	uxtb	r1, r1
 80067d6:	1882      	adds	r2, r0, r2
 80067d8:	4290      	cmp	r0, r2
 80067da:	d101      	bne.n	80067e0 <memchr+0xc>
 80067dc:	2000      	movs	r0, #0
 80067de:	4770      	bx	lr
 80067e0:	7803      	ldrb	r3, [r0, #0]
 80067e2:	428b      	cmp	r3, r1
 80067e4:	d0fb      	beq.n	80067de <memchr+0xa>
 80067e6:	3001      	adds	r0, #1
 80067e8:	e7f6      	b.n	80067d8 <memchr+0x4>

080067ea <memcpy>:
 80067ea:	2300      	movs	r3, #0
 80067ec:	b510      	push	{r4, lr}
 80067ee:	429a      	cmp	r2, r3
 80067f0:	d100      	bne.n	80067f4 <memcpy+0xa>
 80067f2:	bd10      	pop	{r4, pc}
 80067f4:	5ccc      	ldrb	r4, [r1, r3]
 80067f6:	54c4      	strb	r4, [r0, r3]
 80067f8:	3301      	adds	r3, #1
 80067fa:	e7f8      	b.n	80067ee <memcpy+0x4>

080067fc <_Balloc>:
 80067fc:	b570      	push	{r4, r5, r6, lr}
 80067fe:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8006800:	0004      	movs	r4, r0
 8006802:	000d      	movs	r5, r1
 8006804:	2e00      	cmp	r6, #0
 8006806:	d107      	bne.n	8006818 <_Balloc+0x1c>
 8006808:	2010      	movs	r0, #16
 800680a:	f7ff ffd9 	bl	80067c0 <malloc>
 800680e:	6260      	str	r0, [r4, #36]	; 0x24
 8006810:	6046      	str	r6, [r0, #4]
 8006812:	6086      	str	r6, [r0, #8]
 8006814:	6006      	str	r6, [r0, #0]
 8006816:	60c6      	str	r6, [r0, #12]
 8006818:	6a66      	ldr	r6, [r4, #36]	; 0x24
 800681a:	68f3      	ldr	r3, [r6, #12]
 800681c:	2b00      	cmp	r3, #0
 800681e:	d013      	beq.n	8006848 <_Balloc+0x4c>
 8006820:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006822:	00aa      	lsls	r2, r5, #2
 8006824:	68db      	ldr	r3, [r3, #12]
 8006826:	189b      	adds	r3, r3, r2
 8006828:	6818      	ldr	r0, [r3, #0]
 800682a:	2800      	cmp	r0, #0
 800682c:	d118      	bne.n	8006860 <_Balloc+0x64>
 800682e:	2101      	movs	r1, #1
 8006830:	000e      	movs	r6, r1
 8006832:	40ae      	lsls	r6, r5
 8006834:	1d72      	adds	r2, r6, #5
 8006836:	0092      	lsls	r2, r2, #2
 8006838:	0020      	movs	r0, r4
 800683a:	f000 fac5 	bl	8006dc8 <_calloc_r>
 800683e:	2800      	cmp	r0, #0
 8006840:	d00c      	beq.n	800685c <_Balloc+0x60>
 8006842:	6045      	str	r5, [r0, #4]
 8006844:	6086      	str	r6, [r0, #8]
 8006846:	e00d      	b.n	8006864 <_Balloc+0x68>
 8006848:	2221      	movs	r2, #33	; 0x21
 800684a:	2104      	movs	r1, #4
 800684c:	0020      	movs	r0, r4
 800684e:	f000 fabb 	bl	8006dc8 <_calloc_r>
 8006852:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006854:	60f0      	str	r0, [r6, #12]
 8006856:	68db      	ldr	r3, [r3, #12]
 8006858:	2b00      	cmp	r3, #0
 800685a:	d1e1      	bne.n	8006820 <_Balloc+0x24>
 800685c:	2000      	movs	r0, #0
 800685e:	bd70      	pop	{r4, r5, r6, pc}
 8006860:	6802      	ldr	r2, [r0, #0]
 8006862:	601a      	str	r2, [r3, #0]
 8006864:	2300      	movs	r3, #0
 8006866:	6103      	str	r3, [r0, #16]
 8006868:	60c3      	str	r3, [r0, #12]
 800686a:	e7f8      	b.n	800685e <_Balloc+0x62>

0800686c <_Bfree>:
 800686c:	b570      	push	{r4, r5, r6, lr}
 800686e:	6a44      	ldr	r4, [r0, #36]	; 0x24
 8006870:	0006      	movs	r6, r0
 8006872:	000d      	movs	r5, r1
 8006874:	2c00      	cmp	r4, #0
 8006876:	d107      	bne.n	8006888 <_Bfree+0x1c>
 8006878:	2010      	movs	r0, #16
 800687a:	f7ff ffa1 	bl	80067c0 <malloc>
 800687e:	6270      	str	r0, [r6, #36]	; 0x24
 8006880:	6044      	str	r4, [r0, #4]
 8006882:	6084      	str	r4, [r0, #8]
 8006884:	6004      	str	r4, [r0, #0]
 8006886:	60c4      	str	r4, [r0, #12]
 8006888:	2d00      	cmp	r5, #0
 800688a:	d007      	beq.n	800689c <_Bfree+0x30>
 800688c:	6a73      	ldr	r3, [r6, #36]	; 0x24
 800688e:	686a      	ldr	r2, [r5, #4]
 8006890:	68db      	ldr	r3, [r3, #12]
 8006892:	0092      	lsls	r2, r2, #2
 8006894:	189b      	adds	r3, r3, r2
 8006896:	681a      	ldr	r2, [r3, #0]
 8006898:	602a      	str	r2, [r5, #0]
 800689a:	601d      	str	r5, [r3, #0]
 800689c:	bd70      	pop	{r4, r5, r6, pc}

0800689e <__multadd>:
 800689e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80068a0:	001e      	movs	r6, r3
 80068a2:	2314      	movs	r3, #20
 80068a4:	469c      	mov	ip, r3
 80068a6:	0007      	movs	r7, r0
 80068a8:	000c      	movs	r4, r1
 80068aa:	2000      	movs	r0, #0
 80068ac:	690d      	ldr	r5, [r1, #16]
 80068ae:	448c      	add	ip, r1
 80068b0:	4663      	mov	r3, ip
 80068b2:	681b      	ldr	r3, [r3, #0]
 80068b4:	3001      	adds	r0, #1
 80068b6:	b299      	uxth	r1, r3
 80068b8:	4663      	mov	r3, ip
 80068ba:	681b      	ldr	r3, [r3, #0]
 80068bc:	4351      	muls	r1, r2
 80068be:	0c1b      	lsrs	r3, r3, #16
 80068c0:	4353      	muls	r3, r2
 80068c2:	1989      	adds	r1, r1, r6
 80068c4:	0c0e      	lsrs	r6, r1, #16
 80068c6:	199b      	adds	r3, r3, r6
 80068c8:	b289      	uxth	r1, r1
 80068ca:	0c1e      	lsrs	r6, r3, #16
 80068cc:	041b      	lsls	r3, r3, #16
 80068ce:	185b      	adds	r3, r3, r1
 80068d0:	4661      	mov	r1, ip
 80068d2:	c108      	stmia	r1!, {r3}
 80068d4:	468c      	mov	ip, r1
 80068d6:	4285      	cmp	r5, r0
 80068d8:	dcea      	bgt.n	80068b0 <__multadd+0x12>
 80068da:	2e00      	cmp	r6, #0
 80068dc:	d01b      	beq.n	8006916 <__multadd+0x78>
 80068de:	68a3      	ldr	r3, [r4, #8]
 80068e0:	42ab      	cmp	r3, r5
 80068e2:	dc12      	bgt.n	800690a <__multadd+0x6c>
 80068e4:	6863      	ldr	r3, [r4, #4]
 80068e6:	0038      	movs	r0, r7
 80068e8:	1c59      	adds	r1, r3, #1
 80068ea:	f7ff ff87 	bl	80067fc <_Balloc>
 80068ee:	0021      	movs	r1, r4
 80068f0:	6923      	ldr	r3, [r4, #16]
 80068f2:	9001      	str	r0, [sp, #4]
 80068f4:	1c9a      	adds	r2, r3, #2
 80068f6:	0092      	lsls	r2, r2, #2
 80068f8:	310c      	adds	r1, #12
 80068fa:	300c      	adds	r0, #12
 80068fc:	f7ff ff75 	bl	80067ea <memcpy>
 8006900:	0021      	movs	r1, r4
 8006902:	0038      	movs	r0, r7
 8006904:	f7ff ffb2 	bl	800686c <_Bfree>
 8006908:	9c01      	ldr	r4, [sp, #4]
 800690a:	1d2b      	adds	r3, r5, #4
 800690c:	009b      	lsls	r3, r3, #2
 800690e:	18e3      	adds	r3, r4, r3
 8006910:	3501      	adds	r5, #1
 8006912:	605e      	str	r6, [r3, #4]
 8006914:	6125      	str	r5, [r4, #16]
 8006916:	0020      	movs	r0, r4
 8006918:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

0800691a <__hi0bits>:
 800691a:	0003      	movs	r3, r0
 800691c:	0c02      	lsrs	r2, r0, #16
 800691e:	2000      	movs	r0, #0
 8006920:	4282      	cmp	r2, r0
 8006922:	d101      	bne.n	8006928 <__hi0bits+0xe>
 8006924:	041b      	lsls	r3, r3, #16
 8006926:	3010      	adds	r0, #16
 8006928:	0e1a      	lsrs	r2, r3, #24
 800692a:	d101      	bne.n	8006930 <__hi0bits+0x16>
 800692c:	3008      	adds	r0, #8
 800692e:	021b      	lsls	r3, r3, #8
 8006930:	0f1a      	lsrs	r2, r3, #28
 8006932:	d101      	bne.n	8006938 <__hi0bits+0x1e>
 8006934:	3004      	adds	r0, #4
 8006936:	011b      	lsls	r3, r3, #4
 8006938:	0f9a      	lsrs	r2, r3, #30
 800693a:	d101      	bne.n	8006940 <__hi0bits+0x26>
 800693c:	3002      	adds	r0, #2
 800693e:	009b      	lsls	r3, r3, #2
 8006940:	2b00      	cmp	r3, #0
 8006942:	db03      	blt.n	800694c <__hi0bits+0x32>
 8006944:	3001      	adds	r0, #1
 8006946:	005b      	lsls	r3, r3, #1
 8006948:	d400      	bmi.n	800694c <__hi0bits+0x32>
 800694a:	2020      	movs	r0, #32
 800694c:	4770      	bx	lr

0800694e <__lo0bits>:
 800694e:	2207      	movs	r2, #7
 8006950:	6803      	ldr	r3, [r0, #0]
 8006952:	b510      	push	{r4, lr}
 8006954:	0001      	movs	r1, r0
 8006956:	401a      	ands	r2, r3
 8006958:	d00d      	beq.n	8006976 <__lo0bits+0x28>
 800695a:	2401      	movs	r4, #1
 800695c:	2000      	movs	r0, #0
 800695e:	4223      	tst	r3, r4
 8006960:	d105      	bne.n	800696e <__lo0bits+0x20>
 8006962:	3002      	adds	r0, #2
 8006964:	4203      	tst	r3, r0
 8006966:	d003      	beq.n	8006970 <__lo0bits+0x22>
 8006968:	40e3      	lsrs	r3, r4
 800696a:	0020      	movs	r0, r4
 800696c:	600b      	str	r3, [r1, #0]
 800696e:	bd10      	pop	{r4, pc}
 8006970:	089b      	lsrs	r3, r3, #2
 8006972:	600b      	str	r3, [r1, #0]
 8006974:	e7fb      	b.n	800696e <__lo0bits+0x20>
 8006976:	b29c      	uxth	r4, r3
 8006978:	0010      	movs	r0, r2
 800697a:	2c00      	cmp	r4, #0
 800697c:	d101      	bne.n	8006982 <__lo0bits+0x34>
 800697e:	2010      	movs	r0, #16
 8006980:	0c1b      	lsrs	r3, r3, #16
 8006982:	b2da      	uxtb	r2, r3
 8006984:	2a00      	cmp	r2, #0
 8006986:	d101      	bne.n	800698c <__lo0bits+0x3e>
 8006988:	3008      	adds	r0, #8
 800698a:	0a1b      	lsrs	r3, r3, #8
 800698c:	071a      	lsls	r2, r3, #28
 800698e:	d101      	bne.n	8006994 <__lo0bits+0x46>
 8006990:	3004      	adds	r0, #4
 8006992:	091b      	lsrs	r3, r3, #4
 8006994:	079a      	lsls	r2, r3, #30
 8006996:	d101      	bne.n	800699c <__lo0bits+0x4e>
 8006998:	3002      	adds	r0, #2
 800699a:	089b      	lsrs	r3, r3, #2
 800699c:	07da      	lsls	r2, r3, #31
 800699e:	d4e8      	bmi.n	8006972 <__lo0bits+0x24>
 80069a0:	085b      	lsrs	r3, r3, #1
 80069a2:	d001      	beq.n	80069a8 <__lo0bits+0x5a>
 80069a4:	3001      	adds	r0, #1
 80069a6:	e7e4      	b.n	8006972 <__lo0bits+0x24>
 80069a8:	2020      	movs	r0, #32
 80069aa:	e7e0      	b.n	800696e <__lo0bits+0x20>

080069ac <__i2b>:
 80069ac:	b510      	push	{r4, lr}
 80069ae:	000c      	movs	r4, r1
 80069b0:	2101      	movs	r1, #1
 80069b2:	f7ff ff23 	bl	80067fc <_Balloc>
 80069b6:	2301      	movs	r3, #1
 80069b8:	6144      	str	r4, [r0, #20]
 80069ba:	6103      	str	r3, [r0, #16]
 80069bc:	bd10      	pop	{r4, pc}

080069be <__multiply>:
 80069be:	b5f0      	push	{r4, r5, r6, r7, lr}
 80069c0:	690b      	ldr	r3, [r1, #16]
 80069c2:	0014      	movs	r4, r2
 80069c4:	6912      	ldr	r2, [r2, #16]
 80069c6:	b089      	sub	sp, #36	; 0x24
 80069c8:	000d      	movs	r5, r1
 80069ca:	4293      	cmp	r3, r2
 80069cc:	da01      	bge.n	80069d2 <__multiply+0x14>
 80069ce:	0025      	movs	r5, r4
 80069d0:	000c      	movs	r4, r1
 80069d2:	692f      	ldr	r7, [r5, #16]
 80069d4:	6926      	ldr	r6, [r4, #16]
 80069d6:	6869      	ldr	r1, [r5, #4]
 80069d8:	19bb      	adds	r3, r7, r6
 80069da:	9302      	str	r3, [sp, #8]
 80069dc:	68ab      	ldr	r3, [r5, #8]
 80069de:	19ba      	adds	r2, r7, r6
 80069e0:	4293      	cmp	r3, r2
 80069e2:	da00      	bge.n	80069e6 <__multiply+0x28>
 80069e4:	3101      	adds	r1, #1
 80069e6:	f7ff ff09 	bl	80067fc <_Balloc>
 80069ea:	0002      	movs	r2, r0
 80069ec:	19bb      	adds	r3, r7, r6
 80069ee:	3214      	adds	r2, #20
 80069f0:	009b      	lsls	r3, r3, #2
 80069f2:	18d3      	adds	r3, r2, r3
 80069f4:	469c      	mov	ip, r3
 80069f6:	2100      	movs	r1, #0
 80069f8:	0013      	movs	r3, r2
 80069fa:	9004      	str	r0, [sp, #16]
 80069fc:	4563      	cmp	r3, ip
 80069fe:	d31d      	bcc.n	8006a3c <__multiply+0x7e>
 8006a00:	3514      	adds	r5, #20
 8006a02:	00bf      	lsls	r7, r7, #2
 8006a04:	19eb      	adds	r3, r5, r7
 8006a06:	3414      	adds	r4, #20
 8006a08:	00b6      	lsls	r6, r6, #2
 8006a0a:	9305      	str	r3, [sp, #20]
 8006a0c:	19a3      	adds	r3, r4, r6
 8006a0e:	9503      	str	r5, [sp, #12]
 8006a10:	9401      	str	r4, [sp, #4]
 8006a12:	9307      	str	r3, [sp, #28]
 8006a14:	9b07      	ldr	r3, [sp, #28]
 8006a16:	9901      	ldr	r1, [sp, #4]
 8006a18:	4299      	cmp	r1, r3
 8006a1a:	d311      	bcc.n	8006a40 <__multiply+0x82>
 8006a1c:	9b02      	ldr	r3, [sp, #8]
 8006a1e:	2b00      	cmp	r3, #0
 8006a20:	dd06      	ble.n	8006a30 <__multiply+0x72>
 8006a22:	2304      	movs	r3, #4
 8006a24:	425b      	negs	r3, r3
 8006a26:	449c      	add	ip, r3
 8006a28:	4663      	mov	r3, ip
 8006a2a:	681b      	ldr	r3, [r3, #0]
 8006a2c:	2b00      	cmp	r3, #0
 8006a2e:	d051      	beq.n	8006ad4 <__multiply+0x116>
 8006a30:	9b04      	ldr	r3, [sp, #16]
 8006a32:	9a02      	ldr	r2, [sp, #8]
 8006a34:	0018      	movs	r0, r3
 8006a36:	611a      	str	r2, [r3, #16]
 8006a38:	b009      	add	sp, #36	; 0x24
 8006a3a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006a3c:	c302      	stmia	r3!, {r1}
 8006a3e:	e7dd      	b.n	80069fc <__multiply+0x3e>
 8006a40:	9b01      	ldr	r3, [sp, #4]
 8006a42:	681b      	ldr	r3, [r3, #0]
 8006a44:	b298      	uxth	r0, r3
 8006a46:	2800      	cmp	r0, #0
 8006a48:	d01c      	beq.n	8006a84 <__multiply+0xc6>
 8006a4a:	0015      	movs	r5, r2
 8006a4c:	2600      	movs	r6, #0
 8006a4e:	9f03      	ldr	r7, [sp, #12]
 8006a50:	cf02      	ldmia	r7!, {r1}
 8006a52:	682c      	ldr	r4, [r5, #0]
 8006a54:	b28b      	uxth	r3, r1
 8006a56:	4343      	muls	r3, r0
 8006a58:	0c09      	lsrs	r1, r1, #16
 8006a5a:	4341      	muls	r1, r0
 8006a5c:	b2a4      	uxth	r4, r4
 8006a5e:	191b      	adds	r3, r3, r4
 8006a60:	199b      	adds	r3, r3, r6
 8006a62:	000e      	movs	r6, r1
 8006a64:	6829      	ldr	r1, [r5, #0]
 8006a66:	9506      	str	r5, [sp, #24]
 8006a68:	0c09      	lsrs	r1, r1, #16
 8006a6a:	1871      	adds	r1, r6, r1
 8006a6c:	0c1e      	lsrs	r6, r3, #16
 8006a6e:	1989      	adds	r1, r1, r6
 8006a70:	0c0e      	lsrs	r6, r1, #16
 8006a72:	b29b      	uxth	r3, r3
 8006a74:	0409      	lsls	r1, r1, #16
 8006a76:	430b      	orrs	r3, r1
 8006a78:	c508      	stmia	r5!, {r3}
 8006a7a:	9b05      	ldr	r3, [sp, #20]
 8006a7c:	42bb      	cmp	r3, r7
 8006a7e:	d8e7      	bhi.n	8006a50 <__multiply+0x92>
 8006a80:	9b06      	ldr	r3, [sp, #24]
 8006a82:	605e      	str	r6, [r3, #4]
 8006a84:	9b01      	ldr	r3, [sp, #4]
 8006a86:	681b      	ldr	r3, [r3, #0]
 8006a88:	0c1d      	lsrs	r5, r3, #16
 8006a8a:	d01e      	beq.n	8006aca <__multiply+0x10c>
 8006a8c:	0010      	movs	r0, r2
 8006a8e:	2700      	movs	r7, #0
 8006a90:	6813      	ldr	r3, [r2, #0]
 8006a92:	9e03      	ldr	r6, [sp, #12]
 8006a94:	6831      	ldr	r1, [r6, #0]
 8006a96:	6804      	ldr	r4, [r0, #0]
 8006a98:	b289      	uxth	r1, r1
 8006a9a:	4369      	muls	r1, r5
 8006a9c:	0c24      	lsrs	r4, r4, #16
 8006a9e:	1909      	adds	r1, r1, r4
 8006aa0:	19c9      	adds	r1, r1, r7
 8006aa2:	040f      	lsls	r7, r1, #16
 8006aa4:	b29b      	uxth	r3, r3
 8006aa6:	433b      	orrs	r3, r7
 8006aa8:	6003      	str	r3, [r0, #0]
 8006aaa:	ce80      	ldmia	r6!, {r7}
 8006aac:	6843      	ldr	r3, [r0, #4]
 8006aae:	0c3f      	lsrs	r7, r7, #16
 8006ab0:	436f      	muls	r7, r5
 8006ab2:	b29b      	uxth	r3, r3
 8006ab4:	18fb      	adds	r3, r7, r3
 8006ab6:	0c09      	lsrs	r1, r1, #16
 8006ab8:	185b      	adds	r3, r3, r1
 8006aba:	9905      	ldr	r1, [sp, #20]
 8006abc:	9006      	str	r0, [sp, #24]
 8006abe:	0c1f      	lsrs	r7, r3, #16
 8006ac0:	3004      	adds	r0, #4
 8006ac2:	42b1      	cmp	r1, r6
 8006ac4:	d8e6      	bhi.n	8006a94 <__multiply+0xd6>
 8006ac6:	9906      	ldr	r1, [sp, #24]
 8006ac8:	604b      	str	r3, [r1, #4]
 8006aca:	9b01      	ldr	r3, [sp, #4]
 8006acc:	3204      	adds	r2, #4
 8006ace:	3304      	adds	r3, #4
 8006ad0:	9301      	str	r3, [sp, #4]
 8006ad2:	e79f      	b.n	8006a14 <__multiply+0x56>
 8006ad4:	9b02      	ldr	r3, [sp, #8]
 8006ad6:	3b01      	subs	r3, #1
 8006ad8:	9302      	str	r3, [sp, #8]
 8006ada:	e79f      	b.n	8006a1c <__multiply+0x5e>

08006adc <__pow5mult>:
 8006adc:	2303      	movs	r3, #3
 8006ade:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006ae0:	4013      	ands	r3, r2
 8006ae2:	0005      	movs	r5, r0
 8006ae4:	000e      	movs	r6, r1
 8006ae6:	0014      	movs	r4, r2
 8006ae8:	2b00      	cmp	r3, #0
 8006aea:	d008      	beq.n	8006afe <__pow5mult+0x22>
 8006aec:	4922      	ldr	r1, [pc, #136]	; (8006b78 <__pow5mult+0x9c>)
 8006aee:	3b01      	subs	r3, #1
 8006af0:	009a      	lsls	r2, r3, #2
 8006af2:	5852      	ldr	r2, [r2, r1]
 8006af4:	2300      	movs	r3, #0
 8006af6:	0031      	movs	r1, r6
 8006af8:	f7ff fed1 	bl	800689e <__multadd>
 8006afc:	0006      	movs	r6, r0
 8006afe:	10a3      	asrs	r3, r4, #2
 8006b00:	9301      	str	r3, [sp, #4]
 8006b02:	d036      	beq.n	8006b72 <__pow5mult+0x96>
 8006b04:	6a6c      	ldr	r4, [r5, #36]	; 0x24
 8006b06:	2c00      	cmp	r4, #0
 8006b08:	d107      	bne.n	8006b1a <__pow5mult+0x3e>
 8006b0a:	2010      	movs	r0, #16
 8006b0c:	f7ff fe58 	bl	80067c0 <malloc>
 8006b10:	6268      	str	r0, [r5, #36]	; 0x24
 8006b12:	6044      	str	r4, [r0, #4]
 8006b14:	6084      	str	r4, [r0, #8]
 8006b16:	6004      	str	r4, [r0, #0]
 8006b18:	60c4      	str	r4, [r0, #12]
 8006b1a:	6a6f      	ldr	r7, [r5, #36]	; 0x24
 8006b1c:	68bc      	ldr	r4, [r7, #8]
 8006b1e:	2c00      	cmp	r4, #0
 8006b20:	d107      	bne.n	8006b32 <__pow5mult+0x56>
 8006b22:	4916      	ldr	r1, [pc, #88]	; (8006b7c <__pow5mult+0xa0>)
 8006b24:	0028      	movs	r0, r5
 8006b26:	f7ff ff41 	bl	80069ac <__i2b>
 8006b2a:	2300      	movs	r3, #0
 8006b2c:	0004      	movs	r4, r0
 8006b2e:	60b8      	str	r0, [r7, #8]
 8006b30:	6003      	str	r3, [r0, #0]
 8006b32:	2201      	movs	r2, #1
 8006b34:	9b01      	ldr	r3, [sp, #4]
 8006b36:	4213      	tst	r3, r2
 8006b38:	d00a      	beq.n	8006b50 <__pow5mult+0x74>
 8006b3a:	0031      	movs	r1, r6
 8006b3c:	0022      	movs	r2, r4
 8006b3e:	0028      	movs	r0, r5
 8006b40:	f7ff ff3d 	bl	80069be <__multiply>
 8006b44:	0007      	movs	r7, r0
 8006b46:	0031      	movs	r1, r6
 8006b48:	0028      	movs	r0, r5
 8006b4a:	f7ff fe8f 	bl	800686c <_Bfree>
 8006b4e:	003e      	movs	r6, r7
 8006b50:	9b01      	ldr	r3, [sp, #4]
 8006b52:	105b      	asrs	r3, r3, #1
 8006b54:	9301      	str	r3, [sp, #4]
 8006b56:	d00c      	beq.n	8006b72 <__pow5mult+0x96>
 8006b58:	6820      	ldr	r0, [r4, #0]
 8006b5a:	2800      	cmp	r0, #0
 8006b5c:	d107      	bne.n	8006b6e <__pow5mult+0x92>
 8006b5e:	0022      	movs	r2, r4
 8006b60:	0021      	movs	r1, r4
 8006b62:	0028      	movs	r0, r5
 8006b64:	f7ff ff2b 	bl	80069be <__multiply>
 8006b68:	2300      	movs	r3, #0
 8006b6a:	6020      	str	r0, [r4, #0]
 8006b6c:	6003      	str	r3, [r0, #0]
 8006b6e:	0004      	movs	r4, r0
 8006b70:	e7df      	b.n	8006b32 <__pow5mult+0x56>
 8006b72:	0030      	movs	r0, r6
 8006b74:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8006b76:	46c0      	nop			; (mov r8, r8)
 8006b78:	080075e0 	.word	0x080075e0
 8006b7c:	00000271 	.word	0x00000271

08006b80 <__lshift>:
 8006b80:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006b82:	000d      	movs	r5, r1
 8006b84:	0017      	movs	r7, r2
 8006b86:	692b      	ldr	r3, [r5, #16]
 8006b88:	1154      	asrs	r4, r2, #5
 8006b8a:	b085      	sub	sp, #20
 8006b8c:	18e3      	adds	r3, r4, r3
 8006b8e:	9301      	str	r3, [sp, #4]
 8006b90:	3301      	adds	r3, #1
 8006b92:	9300      	str	r3, [sp, #0]
 8006b94:	6849      	ldr	r1, [r1, #4]
 8006b96:	68ab      	ldr	r3, [r5, #8]
 8006b98:	9002      	str	r0, [sp, #8]
 8006b9a:	9a00      	ldr	r2, [sp, #0]
 8006b9c:	4293      	cmp	r3, r2
 8006b9e:	db35      	blt.n	8006c0c <__lshift+0x8c>
 8006ba0:	9802      	ldr	r0, [sp, #8]
 8006ba2:	f7ff fe2b 	bl	80067fc <_Balloc>
 8006ba6:	2300      	movs	r3, #0
 8006ba8:	0002      	movs	r2, r0
 8006baa:	0006      	movs	r6, r0
 8006bac:	0019      	movs	r1, r3
 8006bae:	3214      	adds	r2, #20
 8006bb0:	42a3      	cmp	r3, r4
 8006bb2:	db2e      	blt.n	8006c12 <__lshift+0x92>
 8006bb4:	43e3      	mvns	r3, r4
 8006bb6:	17db      	asrs	r3, r3, #31
 8006bb8:	401c      	ands	r4, r3
 8006bba:	002b      	movs	r3, r5
 8006bbc:	00a4      	lsls	r4, r4, #2
 8006bbe:	1914      	adds	r4, r2, r4
 8006bc0:	692a      	ldr	r2, [r5, #16]
 8006bc2:	3314      	adds	r3, #20
 8006bc4:	0092      	lsls	r2, r2, #2
 8006bc6:	189a      	adds	r2, r3, r2
 8006bc8:	4694      	mov	ip, r2
 8006bca:	221f      	movs	r2, #31
 8006bcc:	4017      	ands	r7, r2
 8006bce:	d024      	beq.n	8006c1a <__lshift+0x9a>
 8006bd0:	3201      	adds	r2, #1
 8006bd2:	1bd2      	subs	r2, r2, r7
 8006bd4:	9203      	str	r2, [sp, #12]
 8006bd6:	2200      	movs	r2, #0
 8006bd8:	6819      	ldr	r1, [r3, #0]
 8006bda:	0020      	movs	r0, r4
 8006bdc:	40b9      	lsls	r1, r7
 8006bde:	430a      	orrs	r2, r1
 8006be0:	c404      	stmia	r4!, {r2}
 8006be2:	cb04      	ldmia	r3!, {r2}
 8006be4:	9903      	ldr	r1, [sp, #12]
 8006be6:	40ca      	lsrs	r2, r1
 8006be8:	459c      	cmp	ip, r3
 8006bea:	d8f5      	bhi.n	8006bd8 <__lshift+0x58>
 8006bec:	6042      	str	r2, [r0, #4]
 8006bee:	2a00      	cmp	r2, #0
 8006bf0:	d002      	beq.n	8006bf8 <__lshift+0x78>
 8006bf2:	9b01      	ldr	r3, [sp, #4]
 8006bf4:	3302      	adds	r3, #2
 8006bf6:	9300      	str	r3, [sp, #0]
 8006bf8:	9b00      	ldr	r3, [sp, #0]
 8006bfa:	9802      	ldr	r0, [sp, #8]
 8006bfc:	3b01      	subs	r3, #1
 8006bfe:	6133      	str	r3, [r6, #16]
 8006c00:	0029      	movs	r1, r5
 8006c02:	f7ff fe33 	bl	800686c <_Bfree>
 8006c06:	0030      	movs	r0, r6
 8006c08:	b005      	add	sp, #20
 8006c0a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006c0c:	3101      	adds	r1, #1
 8006c0e:	005b      	lsls	r3, r3, #1
 8006c10:	e7c3      	b.n	8006b9a <__lshift+0x1a>
 8006c12:	0098      	lsls	r0, r3, #2
 8006c14:	5011      	str	r1, [r2, r0]
 8006c16:	3301      	adds	r3, #1
 8006c18:	e7ca      	b.n	8006bb0 <__lshift+0x30>
 8006c1a:	cb04      	ldmia	r3!, {r2}
 8006c1c:	c404      	stmia	r4!, {r2}
 8006c1e:	459c      	cmp	ip, r3
 8006c20:	d8fb      	bhi.n	8006c1a <__lshift+0x9a>
 8006c22:	e7e9      	b.n	8006bf8 <__lshift+0x78>

08006c24 <__mcmp>:
 8006c24:	690a      	ldr	r2, [r1, #16]
 8006c26:	6903      	ldr	r3, [r0, #16]
 8006c28:	b530      	push	{r4, r5, lr}
 8006c2a:	1a9b      	subs	r3, r3, r2
 8006c2c:	d10d      	bne.n	8006c4a <__mcmp+0x26>
 8006c2e:	0092      	lsls	r2, r2, #2
 8006c30:	3014      	adds	r0, #20
 8006c32:	3114      	adds	r1, #20
 8006c34:	1884      	adds	r4, r0, r2
 8006c36:	1889      	adds	r1, r1, r2
 8006c38:	3c04      	subs	r4, #4
 8006c3a:	3904      	subs	r1, #4
 8006c3c:	6825      	ldr	r5, [r4, #0]
 8006c3e:	680a      	ldr	r2, [r1, #0]
 8006c40:	4295      	cmp	r5, r2
 8006c42:	d004      	beq.n	8006c4e <__mcmp+0x2a>
 8006c44:	2301      	movs	r3, #1
 8006c46:	4295      	cmp	r5, r2
 8006c48:	d304      	bcc.n	8006c54 <__mcmp+0x30>
 8006c4a:	0018      	movs	r0, r3
 8006c4c:	bd30      	pop	{r4, r5, pc}
 8006c4e:	42a0      	cmp	r0, r4
 8006c50:	d3f2      	bcc.n	8006c38 <__mcmp+0x14>
 8006c52:	e7fa      	b.n	8006c4a <__mcmp+0x26>
 8006c54:	425b      	negs	r3, r3
 8006c56:	e7f8      	b.n	8006c4a <__mcmp+0x26>

08006c58 <__mdiff>:
 8006c58:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006c5a:	000d      	movs	r5, r1
 8006c5c:	b085      	sub	sp, #20
 8006c5e:	0007      	movs	r7, r0
 8006c60:	0011      	movs	r1, r2
 8006c62:	0028      	movs	r0, r5
 8006c64:	0014      	movs	r4, r2
 8006c66:	f7ff ffdd 	bl	8006c24 <__mcmp>
 8006c6a:	1e06      	subs	r6, r0, #0
 8006c6c:	d108      	bne.n	8006c80 <__mdiff+0x28>
 8006c6e:	0001      	movs	r1, r0
 8006c70:	0038      	movs	r0, r7
 8006c72:	f7ff fdc3 	bl	80067fc <_Balloc>
 8006c76:	2301      	movs	r3, #1
 8006c78:	6146      	str	r6, [r0, #20]
 8006c7a:	6103      	str	r3, [r0, #16]
 8006c7c:	b005      	add	sp, #20
 8006c7e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006c80:	2301      	movs	r3, #1
 8006c82:	9301      	str	r3, [sp, #4]
 8006c84:	2800      	cmp	r0, #0
 8006c86:	db04      	blt.n	8006c92 <__mdiff+0x3a>
 8006c88:	0023      	movs	r3, r4
 8006c8a:	002c      	movs	r4, r5
 8006c8c:	001d      	movs	r5, r3
 8006c8e:	2300      	movs	r3, #0
 8006c90:	9301      	str	r3, [sp, #4]
 8006c92:	6861      	ldr	r1, [r4, #4]
 8006c94:	0038      	movs	r0, r7
 8006c96:	f7ff fdb1 	bl	80067fc <_Balloc>
 8006c9a:	002f      	movs	r7, r5
 8006c9c:	2200      	movs	r2, #0
 8006c9e:	9b01      	ldr	r3, [sp, #4]
 8006ca0:	6926      	ldr	r6, [r4, #16]
 8006ca2:	60c3      	str	r3, [r0, #12]
 8006ca4:	3414      	adds	r4, #20
 8006ca6:	00b3      	lsls	r3, r6, #2
 8006ca8:	18e3      	adds	r3, r4, r3
 8006caa:	9302      	str	r3, [sp, #8]
 8006cac:	692b      	ldr	r3, [r5, #16]
 8006cae:	3714      	adds	r7, #20
 8006cb0:	009b      	lsls	r3, r3, #2
 8006cb2:	18fb      	adds	r3, r7, r3
 8006cb4:	9303      	str	r3, [sp, #12]
 8006cb6:	0003      	movs	r3, r0
 8006cb8:	4694      	mov	ip, r2
 8006cba:	3314      	adds	r3, #20
 8006cbc:	cc20      	ldmia	r4!, {r5}
 8006cbe:	cf04      	ldmia	r7!, {r2}
 8006cc0:	9201      	str	r2, [sp, #4]
 8006cc2:	b2aa      	uxth	r2, r5
 8006cc4:	4494      	add	ip, r2
 8006cc6:	466a      	mov	r2, sp
 8006cc8:	4661      	mov	r1, ip
 8006cca:	8892      	ldrh	r2, [r2, #4]
 8006ccc:	0c2d      	lsrs	r5, r5, #16
 8006cce:	1a8a      	subs	r2, r1, r2
 8006cd0:	9901      	ldr	r1, [sp, #4]
 8006cd2:	0c09      	lsrs	r1, r1, #16
 8006cd4:	1a69      	subs	r1, r5, r1
 8006cd6:	1415      	asrs	r5, r2, #16
 8006cd8:	1949      	adds	r1, r1, r5
 8006cda:	140d      	asrs	r5, r1, #16
 8006cdc:	b292      	uxth	r2, r2
 8006cde:	0409      	lsls	r1, r1, #16
 8006ce0:	430a      	orrs	r2, r1
 8006ce2:	601a      	str	r2, [r3, #0]
 8006ce4:	9a03      	ldr	r2, [sp, #12]
 8006ce6:	46ac      	mov	ip, r5
 8006ce8:	3304      	adds	r3, #4
 8006cea:	42ba      	cmp	r2, r7
 8006cec:	d8e6      	bhi.n	8006cbc <__mdiff+0x64>
 8006cee:	9902      	ldr	r1, [sp, #8]
 8006cf0:	001a      	movs	r2, r3
 8006cf2:	428c      	cmp	r4, r1
 8006cf4:	d305      	bcc.n	8006d02 <__mdiff+0xaa>
 8006cf6:	3a04      	subs	r2, #4
 8006cf8:	6813      	ldr	r3, [r2, #0]
 8006cfa:	2b00      	cmp	r3, #0
 8006cfc:	d00e      	beq.n	8006d1c <__mdiff+0xc4>
 8006cfe:	6106      	str	r6, [r0, #16]
 8006d00:	e7bc      	b.n	8006c7c <__mdiff+0x24>
 8006d02:	cc04      	ldmia	r4!, {r2}
 8006d04:	b291      	uxth	r1, r2
 8006d06:	4461      	add	r1, ip
 8006d08:	140d      	asrs	r5, r1, #16
 8006d0a:	0c12      	lsrs	r2, r2, #16
 8006d0c:	1952      	adds	r2, r2, r5
 8006d0e:	1415      	asrs	r5, r2, #16
 8006d10:	b289      	uxth	r1, r1
 8006d12:	0412      	lsls	r2, r2, #16
 8006d14:	430a      	orrs	r2, r1
 8006d16:	46ac      	mov	ip, r5
 8006d18:	c304      	stmia	r3!, {r2}
 8006d1a:	e7e8      	b.n	8006cee <__mdiff+0x96>
 8006d1c:	3e01      	subs	r6, #1
 8006d1e:	e7ea      	b.n	8006cf6 <__mdiff+0x9e>

08006d20 <__d2b>:
 8006d20:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006d22:	001d      	movs	r5, r3
 8006d24:	2101      	movs	r1, #1
 8006d26:	0014      	movs	r4, r2
 8006d28:	9f08      	ldr	r7, [sp, #32]
 8006d2a:	f7ff fd67 	bl	80067fc <_Balloc>
 8006d2e:	032b      	lsls	r3, r5, #12
 8006d30:	006d      	lsls	r5, r5, #1
 8006d32:	0006      	movs	r6, r0
 8006d34:	0b1b      	lsrs	r3, r3, #12
 8006d36:	0d6d      	lsrs	r5, r5, #21
 8006d38:	d124      	bne.n	8006d84 <__d2b+0x64>
 8006d3a:	9301      	str	r3, [sp, #4]
 8006d3c:	2c00      	cmp	r4, #0
 8006d3e:	d027      	beq.n	8006d90 <__d2b+0x70>
 8006d40:	4668      	mov	r0, sp
 8006d42:	9400      	str	r4, [sp, #0]
 8006d44:	f7ff fe03 	bl	800694e <__lo0bits>
 8006d48:	9c00      	ldr	r4, [sp, #0]
 8006d4a:	2800      	cmp	r0, #0
 8006d4c:	d01e      	beq.n	8006d8c <__d2b+0x6c>
 8006d4e:	9b01      	ldr	r3, [sp, #4]
 8006d50:	2120      	movs	r1, #32
 8006d52:	001a      	movs	r2, r3
 8006d54:	1a09      	subs	r1, r1, r0
 8006d56:	408a      	lsls	r2, r1
 8006d58:	40c3      	lsrs	r3, r0
 8006d5a:	4322      	orrs	r2, r4
 8006d5c:	6172      	str	r2, [r6, #20]
 8006d5e:	9301      	str	r3, [sp, #4]
 8006d60:	9c01      	ldr	r4, [sp, #4]
 8006d62:	61b4      	str	r4, [r6, #24]
 8006d64:	1e63      	subs	r3, r4, #1
 8006d66:	419c      	sbcs	r4, r3
 8006d68:	3401      	adds	r4, #1
 8006d6a:	6134      	str	r4, [r6, #16]
 8006d6c:	2d00      	cmp	r5, #0
 8006d6e:	d018      	beq.n	8006da2 <__d2b+0x82>
 8006d70:	4b12      	ldr	r3, [pc, #72]	; (8006dbc <__d2b+0x9c>)
 8006d72:	18ed      	adds	r5, r5, r3
 8006d74:	2335      	movs	r3, #53	; 0x35
 8006d76:	182d      	adds	r5, r5, r0
 8006d78:	603d      	str	r5, [r7, #0]
 8006d7a:	1a18      	subs	r0, r3, r0
 8006d7c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006d7e:	6018      	str	r0, [r3, #0]
 8006d80:	0030      	movs	r0, r6
 8006d82:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8006d84:	2280      	movs	r2, #128	; 0x80
 8006d86:	0352      	lsls	r2, r2, #13
 8006d88:	4313      	orrs	r3, r2
 8006d8a:	e7d6      	b.n	8006d3a <__d2b+0x1a>
 8006d8c:	6174      	str	r4, [r6, #20]
 8006d8e:	e7e7      	b.n	8006d60 <__d2b+0x40>
 8006d90:	a801      	add	r0, sp, #4
 8006d92:	f7ff fddc 	bl	800694e <__lo0bits>
 8006d96:	2401      	movs	r4, #1
 8006d98:	9b01      	ldr	r3, [sp, #4]
 8006d9a:	6134      	str	r4, [r6, #16]
 8006d9c:	6173      	str	r3, [r6, #20]
 8006d9e:	3020      	adds	r0, #32
 8006da0:	e7e4      	b.n	8006d6c <__d2b+0x4c>
 8006da2:	4b07      	ldr	r3, [pc, #28]	; (8006dc0 <__d2b+0xa0>)
 8006da4:	18c0      	adds	r0, r0, r3
 8006da6:	4b07      	ldr	r3, [pc, #28]	; (8006dc4 <__d2b+0xa4>)
 8006da8:	6038      	str	r0, [r7, #0]
 8006daa:	18e3      	adds	r3, r4, r3
 8006dac:	009b      	lsls	r3, r3, #2
 8006dae:	18f3      	adds	r3, r6, r3
 8006db0:	6958      	ldr	r0, [r3, #20]
 8006db2:	f7ff fdb2 	bl	800691a <__hi0bits>
 8006db6:	0164      	lsls	r4, r4, #5
 8006db8:	1a20      	subs	r0, r4, r0
 8006dba:	e7df      	b.n	8006d7c <__d2b+0x5c>
 8006dbc:	fffffbcd 	.word	0xfffffbcd
 8006dc0:	fffffbce 	.word	0xfffffbce
 8006dc4:	3fffffff 	.word	0x3fffffff

08006dc8 <_calloc_r>:
 8006dc8:	434a      	muls	r2, r1
 8006dca:	b570      	push	{r4, r5, r6, lr}
 8006dcc:	0011      	movs	r1, r2
 8006dce:	0014      	movs	r4, r2
 8006dd0:	f000 f852 	bl	8006e78 <_malloc_r>
 8006dd4:	1e05      	subs	r5, r0, #0
 8006dd6:	d003      	beq.n	8006de0 <_calloc_r+0x18>
 8006dd8:	0022      	movs	r2, r4
 8006dda:	2100      	movs	r1, #0
 8006ddc:	f7fe f9c6 	bl	800516c <memset>
 8006de0:	0028      	movs	r0, r5
 8006de2:	bd70      	pop	{r4, r5, r6, pc}

08006de4 <_free_r>:
 8006de4:	b570      	push	{r4, r5, r6, lr}
 8006de6:	0005      	movs	r5, r0
 8006de8:	2900      	cmp	r1, #0
 8006dea:	d010      	beq.n	8006e0e <_free_r+0x2a>
 8006dec:	1f0c      	subs	r4, r1, #4
 8006dee:	6823      	ldr	r3, [r4, #0]
 8006df0:	2b00      	cmp	r3, #0
 8006df2:	da00      	bge.n	8006df6 <_free_r+0x12>
 8006df4:	18e4      	adds	r4, r4, r3
 8006df6:	0028      	movs	r0, r5
 8006df8:	f000 fa33 	bl	8007262 <__malloc_lock>
 8006dfc:	4a1d      	ldr	r2, [pc, #116]	; (8006e74 <_free_r+0x90>)
 8006dfe:	6813      	ldr	r3, [r2, #0]
 8006e00:	2b00      	cmp	r3, #0
 8006e02:	d105      	bne.n	8006e10 <_free_r+0x2c>
 8006e04:	6063      	str	r3, [r4, #4]
 8006e06:	6014      	str	r4, [r2, #0]
 8006e08:	0028      	movs	r0, r5
 8006e0a:	f000 fa2b 	bl	8007264 <__malloc_unlock>
 8006e0e:	bd70      	pop	{r4, r5, r6, pc}
 8006e10:	42a3      	cmp	r3, r4
 8006e12:	d909      	bls.n	8006e28 <_free_r+0x44>
 8006e14:	6821      	ldr	r1, [r4, #0]
 8006e16:	1860      	adds	r0, r4, r1
 8006e18:	4283      	cmp	r3, r0
 8006e1a:	d1f3      	bne.n	8006e04 <_free_r+0x20>
 8006e1c:	6818      	ldr	r0, [r3, #0]
 8006e1e:	685b      	ldr	r3, [r3, #4]
 8006e20:	1841      	adds	r1, r0, r1
 8006e22:	6021      	str	r1, [r4, #0]
 8006e24:	e7ee      	b.n	8006e04 <_free_r+0x20>
 8006e26:	0013      	movs	r3, r2
 8006e28:	685a      	ldr	r2, [r3, #4]
 8006e2a:	2a00      	cmp	r2, #0
 8006e2c:	d001      	beq.n	8006e32 <_free_r+0x4e>
 8006e2e:	42a2      	cmp	r2, r4
 8006e30:	d9f9      	bls.n	8006e26 <_free_r+0x42>
 8006e32:	6819      	ldr	r1, [r3, #0]
 8006e34:	1858      	adds	r0, r3, r1
 8006e36:	42a0      	cmp	r0, r4
 8006e38:	d10b      	bne.n	8006e52 <_free_r+0x6e>
 8006e3a:	6820      	ldr	r0, [r4, #0]
 8006e3c:	1809      	adds	r1, r1, r0
 8006e3e:	1858      	adds	r0, r3, r1
 8006e40:	6019      	str	r1, [r3, #0]
 8006e42:	4282      	cmp	r2, r0
 8006e44:	d1e0      	bne.n	8006e08 <_free_r+0x24>
 8006e46:	6810      	ldr	r0, [r2, #0]
 8006e48:	6852      	ldr	r2, [r2, #4]
 8006e4a:	1841      	adds	r1, r0, r1
 8006e4c:	6019      	str	r1, [r3, #0]
 8006e4e:	605a      	str	r2, [r3, #4]
 8006e50:	e7da      	b.n	8006e08 <_free_r+0x24>
 8006e52:	42a0      	cmp	r0, r4
 8006e54:	d902      	bls.n	8006e5c <_free_r+0x78>
 8006e56:	230c      	movs	r3, #12
 8006e58:	602b      	str	r3, [r5, #0]
 8006e5a:	e7d5      	b.n	8006e08 <_free_r+0x24>
 8006e5c:	6821      	ldr	r1, [r4, #0]
 8006e5e:	1860      	adds	r0, r4, r1
 8006e60:	4282      	cmp	r2, r0
 8006e62:	d103      	bne.n	8006e6c <_free_r+0x88>
 8006e64:	6810      	ldr	r0, [r2, #0]
 8006e66:	6852      	ldr	r2, [r2, #4]
 8006e68:	1841      	adds	r1, r0, r1
 8006e6a:	6021      	str	r1, [r4, #0]
 8006e6c:	6062      	str	r2, [r4, #4]
 8006e6e:	605c      	str	r4, [r3, #4]
 8006e70:	e7ca      	b.n	8006e08 <_free_r+0x24>
 8006e72:	46c0      	nop			; (mov r8, r8)
 8006e74:	20000208 	.word	0x20000208

08006e78 <_malloc_r>:
 8006e78:	2303      	movs	r3, #3
 8006e7a:	b570      	push	{r4, r5, r6, lr}
 8006e7c:	1ccd      	adds	r5, r1, #3
 8006e7e:	439d      	bics	r5, r3
 8006e80:	3508      	adds	r5, #8
 8006e82:	0006      	movs	r6, r0
 8006e84:	2d0c      	cmp	r5, #12
 8006e86:	d21e      	bcs.n	8006ec6 <_malloc_r+0x4e>
 8006e88:	250c      	movs	r5, #12
 8006e8a:	42a9      	cmp	r1, r5
 8006e8c:	d81d      	bhi.n	8006eca <_malloc_r+0x52>
 8006e8e:	0030      	movs	r0, r6
 8006e90:	f000 f9e7 	bl	8007262 <__malloc_lock>
 8006e94:	4a25      	ldr	r2, [pc, #148]	; (8006f2c <_malloc_r+0xb4>)
 8006e96:	6814      	ldr	r4, [r2, #0]
 8006e98:	0021      	movs	r1, r4
 8006e9a:	2900      	cmp	r1, #0
 8006e9c:	d119      	bne.n	8006ed2 <_malloc_r+0x5a>
 8006e9e:	4c24      	ldr	r4, [pc, #144]	; (8006f30 <_malloc_r+0xb8>)
 8006ea0:	6823      	ldr	r3, [r4, #0]
 8006ea2:	2b00      	cmp	r3, #0
 8006ea4:	d103      	bne.n	8006eae <_malloc_r+0x36>
 8006ea6:	0030      	movs	r0, r6
 8006ea8:	f000 f9a4 	bl	80071f4 <_sbrk_r>
 8006eac:	6020      	str	r0, [r4, #0]
 8006eae:	0029      	movs	r1, r5
 8006eb0:	0030      	movs	r0, r6
 8006eb2:	f000 f99f 	bl	80071f4 <_sbrk_r>
 8006eb6:	1c43      	adds	r3, r0, #1
 8006eb8:	d12b      	bne.n	8006f12 <_malloc_r+0x9a>
 8006eba:	230c      	movs	r3, #12
 8006ebc:	0030      	movs	r0, r6
 8006ebe:	6033      	str	r3, [r6, #0]
 8006ec0:	f000 f9d0 	bl	8007264 <__malloc_unlock>
 8006ec4:	e003      	b.n	8006ece <_malloc_r+0x56>
 8006ec6:	2d00      	cmp	r5, #0
 8006ec8:	dadf      	bge.n	8006e8a <_malloc_r+0x12>
 8006eca:	230c      	movs	r3, #12
 8006ecc:	6033      	str	r3, [r6, #0]
 8006ece:	2000      	movs	r0, #0
 8006ed0:	bd70      	pop	{r4, r5, r6, pc}
 8006ed2:	680b      	ldr	r3, [r1, #0]
 8006ed4:	1b5b      	subs	r3, r3, r5
 8006ed6:	d419      	bmi.n	8006f0c <_malloc_r+0x94>
 8006ed8:	2b0b      	cmp	r3, #11
 8006eda:	d903      	bls.n	8006ee4 <_malloc_r+0x6c>
 8006edc:	600b      	str	r3, [r1, #0]
 8006ede:	18cc      	adds	r4, r1, r3
 8006ee0:	6025      	str	r5, [r4, #0]
 8006ee2:	e003      	b.n	8006eec <_malloc_r+0x74>
 8006ee4:	684b      	ldr	r3, [r1, #4]
 8006ee6:	428c      	cmp	r4, r1
 8006ee8:	d10d      	bne.n	8006f06 <_malloc_r+0x8e>
 8006eea:	6013      	str	r3, [r2, #0]
 8006eec:	0030      	movs	r0, r6
 8006eee:	f000 f9b9 	bl	8007264 <__malloc_unlock>
 8006ef2:	0020      	movs	r0, r4
 8006ef4:	2207      	movs	r2, #7
 8006ef6:	300b      	adds	r0, #11
 8006ef8:	1d23      	adds	r3, r4, #4
 8006efa:	4390      	bics	r0, r2
 8006efc:	1ac3      	subs	r3, r0, r3
 8006efe:	d0e7      	beq.n	8006ed0 <_malloc_r+0x58>
 8006f00:	425a      	negs	r2, r3
 8006f02:	50e2      	str	r2, [r4, r3]
 8006f04:	e7e4      	b.n	8006ed0 <_malloc_r+0x58>
 8006f06:	6063      	str	r3, [r4, #4]
 8006f08:	000c      	movs	r4, r1
 8006f0a:	e7ef      	b.n	8006eec <_malloc_r+0x74>
 8006f0c:	000c      	movs	r4, r1
 8006f0e:	6849      	ldr	r1, [r1, #4]
 8006f10:	e7c3      	b.n	8006e9a <_malloc_r+0x22>
 8006f12:	2303      	movs	r3, #3
 8006f14:	1cc4      	adds	r4, r0, #3
 8006f16:	439c      	bics	r4, r3
 8006f18:	42a0      	cmp	r0, r4
 8006f1a:	d0e1      	beq.n	8006ee0 <_malloc_r+0x68>
 8006f1c:	1a21      	subs	r1, r4, r0
 8006f1e:	0030      	movs	r0, r6
 8006f20:	f000 f968 	bl	80071f4 <_sbrk_r>
 8006f24:	1c43      	adds	r3, r0, #1
 8006f26:	d1db      	bne.n	8006ee0 <_malloc_r+0x68>
 8006f28:	e7c7      	b.n	8006eba <_malloc_r+0x42>
 8006f2a:	46c0      	nop			; (mov r8, r8)
 8006f2c:	20000208 	.word	0x20000208
 8006f30:	2000020c 	.word	0x2000020c

08006f34 <__ssputs_r>:
 8006f34:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006f36:	688e      	ldr	r6, [r1, #8]
 8006f38:	b085      	sub	sp, #20
 8006f3a:	0007      	movs	r7, r0
 8006f3c:	000c      	movs	r4, r1
 8006f3e:	9203      	str	r2, [sp, #12]
 8006f40:	9301      	str	r3, [sp, #4]
 8006f42:	429e      	cmp	r6, r3
 8006f44:	d83c      	bhi.n	8006fc0 <__ssputs_r+0x8c>
 8006f46:	2390      	movs	r3, #144	; 0x90
 8006f48:	898a      	ldrh	r2, [r1, #12]
 8006f4a:	00db      	lsls	r3, r3, #3
 8006f4c:	421a      	tst	r2, r3
 8006f4e:	d034      	beq.n	8006fba <__ssputs_r+0x86>
 8006f50:	2503      	movs	r5, #3
 8006f52:	6909      	ldr	r1, [r1, #16]
 8006f54:	6823      	ldr	r3, [r4, #0]
 8006f56:	1a5b      	subs	r3, r3, r1
 8006f58:	9302      	str	r3, [sp, #8]
 8006f5a:	6963      	ldr	r3, [r4, #20]
 8006f5c:	9802      	ldr	r0, [sp, #8]
 8006f5e:	435d      	muls	r5, r3
 8006f60:	0feb      	lsrs	r3, r5, #31
 8006f62:	195d      	adds	r5, r3, r5
 8006f64:	9b01      	ldr	r3, [sp, #4]
 8006f66:	106d      	asrs	r5, r5, #1
 8006f68:	3301      	adds	r3, #1
 8006f6a:	181b      	adds	r3, r3, r0
 8006f6c:	42ab      	cmp	r3, r5
 8006f6e:	d900      	bls.n	8006f72 <__ssputs_r+0x3e>
 8006f70:	001d      	movs	r5, r3
 8006f72:	0553      	lsls	r3, r2, #21
 8006f74:	d532      	bpl.n	8006fdc <__ssputs_r+0xa8>
 8006f76:	0029      	movs	r1, r5
 8006f78:	0038      	movs	r0, r7
 8006f7a:	f7ff ff7d 	bl	8006e78 <_malloc_r>
 8006f7e:	1e06      	subs	r6, r0, #0
 8006f80:	d109      	bne.n	8006f96 <__ssputs_r+0x62>
 8006f82:	230c      	movs	r3, #12
 8006f84:	603b      	str	r3, [r7, #0]
 8006f86:	2340      	movs	r3, #64	; 0x40
 8006f88:	2001      	movs	r0, #1
 8006f8a:	89a2      	ldrh	r2, [r4, #12]
 8006f8c:	4240      	negs	r0, r0
 8006f8e:	4313      	orrs	r3, r2
 8006f90:	81a3      	strh	r3, [r4, #12]
 8006f92:	b005      	add	sp, #20
 8006f94:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006f96:	9a02      	ldr	r2, [sp, #8]
 8006f98:	6921      	ldr	r1, [r4, #16]
 8006f9a:	f7ff fc26 	bl	80067ea <memcpy>
 8006f9e:	89a3      	ldrh	r3, [r4, #12]
 8006fa0:	4a14      	ldr	r2, [pc, #80]	; (8006ff4 <__ssputs_r+0xc0>)
 8006fa2:	401a      	ands	r2, r3
 8006fa4:	2380      	movs	r3, #128	; 0x80
 8006fa6:	4313      	orrs	r3, r2
 8006fa8:	81a3      	strh	r3, [r4, #12]
 8006faa:	9b02      	ldr	r3, [sp, #8]
 8006fac:	6126      	str	r6, [r4, #16]
 8006fae:	18f6      	adds	r6, r6, r3
 8006fb0:	6026      	str	r6, [r4, #0]
 8006fb2:	6165      	str	r5, [r4, #20]
 8006fb4:	9e01      	ldr	r6, [sp, #4]
 8006fb6:	1aed      	subs	r5, r5, r3
 8006fb8:	60a5      	str	r5, [r4, #8]
 8006fba:	9b01      	ldr	r3, [sp, #4]
 8006fbc:	429e      	cmp	r6, r3
 8006fbe:	d900      	bls.n	8006fc2 <__ssputs_r+0x8e>
 8006fc0:	9e01      	ldr	r6, [sp, #4]
 8006fc2:	0032      	movs	r2, r6
 8006fc4:	9903      	ldr	r1, [sp, #12]
 8006fc6:	6820      	ldr	r0, [r4, #0]
 8006fc8:	f000 f938 	bl	800723c <memmove>
 8006fcc:	68a3      	ldr	r3, [r4, #8]
 8006fce:	2000      	movs	r0, #0
 8006fd0:	1b9b      	subs	r3, r3, r6
 8006fd2:	60a3      	str	r3, [r4, #8]
 8006fd4:	6823      	ldr	r3, [r4, #0]
 8006fd6:	199e      	adds	r6, r3, r6
 8006fd8:	6026      	str	r6, [r4, #0]
 8006fda:	e7da      	b.n	8006f92 <__ssputs_r+0x5e>
 8006fdc:	002a      	movs	r2, r5
 8006fde:	0038      	movs	r0, r7
 8006fe0:	f000 f941 	bl	8007266 <_realloc_r>
 8006fe4:	1e06      	subs	r6, r0, #0
 8006fe6:	d1e0      	bne.n	8006faa <__ssputs_r+0x76>
 8006fe8:	6921      	ldr	r1, [r4, #16]
 8006fea:	0038      	movs	r0, r7
 8006fec:	f7ff fefa 	bl	8006de4 <_free_r>
 8006ff0:	e7c7      	b.n	8006f82 <__ssputs_r+0x4e>
 8006ff2:	46c0      	nop			; (mov r8, r8)
 8006ff4:	fffffb7f 	.word	0xfffffb7f

08006ff8 <_svfiprintf_r>:
 8006ff8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006ffa:	b0a1      	sub	sp, #132	; 0x84
 8006ffc:	9003      	str	r0, [sp, #12]
 8006ffe:	001d      	movs	r5, r3
 8007000:	898b      	ldrh	r3, [r1, #12]
 8007002:	000f      	movs	r7, r1
 8007004:	0016      	movs	r6, r2
 8007006:	061b      	lsls	r3, r3, #24
 8007008:	d511      	bpl.n	800702e <_svfiprintf_r+0x36>
 800700a:	690b      	ldr	r3, [r1, #16]
 800700c:	2b00      	cmp	r3, #0
 800700e:	d10e      	bne.n	800702e <_svfiprintf_r+0x36>
 8007010:	2140      	movs	r1, #64	; 0x40
 8007012:	f7ff ff31 	bl	8006e78 <_malloc_r>
 8007016:	6038      	str	r0, [r7, #0]
 8007018:	6138      	str	r0, [r7, #16]
 800701a:	2800      	cmp	r0, #0
 800701c:	d105      	bne.n	800702a <_svfiprintf_r+0x32>
 800701e:	230c      	movs	r3, #12
 8007020:	9a03      	ldr	r2, [sp, #12]
 8007022:	3801      	subs	r0, #1
 8007024:	6013      	str	r3, [r2, #0]
 8007026:	b021      	add	sp, #132	; 0x84
 8007028:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800702a:	2340      	movs	r3, #64	; 0x40
 800702c:	617b      	str	r3, [r7, #20]
 800702e:	2300      	movs	r3, #0
 8007030:	ac08      	add	r4, sp, #32
 8007032:	6163      	str	r3, [r4, #20]
 8007034:	3320      	adds	r3, #32
 8007036:	7663      	strb	r3, [r4, #25]
 8007038:	3310      	adds	r3, #16
 800703a:	76a3      	strb	r3, [r4, #26]
 800703c:	9507      	str	r5, [sp, #28]
 800703e:	0035      	movs	r5, r6
 8007040:	782b      	ldrb	r3, [r5, #0]
 8007042:	2b00      	cmp	r3, #0
 8007044:	d001      	beq.n	800704a <_svfiprintf_r+0x52>
 8007046:	2b25      	cmp	r3, #37	; 0x25
 8007048:	d146      	bne.n	80070d8 <_svfiprintf_r+0xe0>
 800704a:	1bab      	subs	r3, r5, r6
 800704c:	9305      	str	r3, [sp, #20]
 800704e:	d00c      	beq.n	800706a <_svfiprintf_r+0x72>
 8007050:	0032      	movs	r2, r6
 8007052:	0039      	movs	r1, r7
 8007054:	9803      	ldr	r0, [sp, #12]
 8007056:	f7ff ff6d 	bl	8006f34 <__ssputs_r>
 800705a:	1c43      	adds	r3, r0, #1
 800705c:	d100      	bne.n	8007060 <_svfiprintf_r+0x68>
 800705e:	e0ae      	b.n	80071be <_svfiprintf_r+0x1c6>
 8007060:	6962      	ldr	r2, [r4, #20]
 8007062:	9b05      	ldr	r3, [sp, #20]
 8007064:	4694      	mov	ip, r2
 8007066:	4463      	add	r3, ip
 8007068:	6163      	str	r3, [r4, #20]
 800706a:	782b      	ldrb	r3, [r5, #0]
 800706c:	2b00      	cmp	r3, #0
 800706e:	d100      	bne.n	8007072 <_svfiprintf_r+0x7a>
 8007070:	e0a5      	b.n	80071be <_svfiprintf_r+0x1c6>
 8007072:	2201      	movs	r2, #1
 8007074:	2300      	movs	r3, #0
 8007076:	4252      	negs	r2, r2
 8007078:	6062      	str	r2, [r4, #4]
 800707a:	a904      	add	r1, sp, #16
 800707c:	3254      	adds	r2, #84	; 0x54
 800707e:	1852      	adds	r2, r2, r1
 8007080:	1c6e      	adds	r6, r5, #1
 8007082:	6023      	str	r3, [r4, #0]
 8007084:	60e3      	str	r3, [r4, #12]
 8007086:	60a3      	str	r3, [r4, #8]
 8007088:	7013      	strb	r3, [r2, #0]
 800708a:	65a3      	str	r3, [r4, #88]	; 0x58
 800708c:	7831      	ldrb	r1, [r6, #0]
 800708e:	2205      	movs	r2, #5
 8007090:	4853      	ldr	r0, [pc, #332]	; (80071e0 <_svfiprintf_r+0x1e8>)
 8007092:	f7ff fb9f 	bl	80067d4 <memchr>
 8007096:	1c75      	adds	r5, r6, #1
 8007098:	2800      	cmp	r0, #0
 800709a:	d11f      	bne.n	80070dc <_svfiprintf_r+0xe4>
 800709c:	6822      	ldr	r2, [r4, #0]
 800709e:	06d3      	lsls	r3, r2, #27
 80070a0:	d504      	bpl.n	80070ac <_svfiprintf_r+0xb4>
 80070a2:	2353      	movs	r3, #83	; 0x53
 80070a4:	a904      	add	r1, sp, #16
 80070a6:	185b      	adds	r3, r3, r1
 80070a8:	2120      	movs	r1, #32
 80070aa:	7019      	strb	r1, [r3, #0]
 80070ac:	0713      	lsls	r3, r2, #28
 80070ae:	d504      	bpl.n	80070ba <_svfiprintf_r+0xc2>
 80070b0:	2353      	movs	r3, #83	; 0x53
 80070b2:	a904      	add	r1, sp, #16
 80070b4:	185b      	adds	r3, r3, r1
 80070b6:	212b      	movs	r1, #43	; 0x2b
 80070b8:	7019      	strb	r1, [r3, #0]
 80070ba:	7833      	ldrb	r3, [r6, #0]
 80070bc:	2b2a      	cmp	r3, #42	; 0x2a
 80070be:	d016      	beq.n	80070ee <_svfiprintf_r+0xf6>
 80070c0:	0035      	movs	r5, r6
 80070c2:	2100      	movs	r1, #0
 80070c4:	200a      	movs	r0, #10
 80070c6:	68e3      	ldr	r3, [r4, #12]
 80070c8:	782a      	ldrb	r2, [r5, #0]
 80070ca:	1c6e      	adds	r6, r5, #1
 80070cc:	3a30      	subs	r2, #48	; 0x30
 80070ce:	2a09      	cmp	r2, #9
 80070d0:	d94e      	bls.n	8007170 <_svfiprintf_r+0x178>
 80070d2:	2900      	cmp	r1, #0
 80070d4:	d018      	beq.n	8007108 <_svfiprintf_r+0x110>
 80070d6:	e010      	b.n	80070fa <_svfiprintf_r+0x102>
 80070d8:	3501      	adds	r5, #1
 80070da:	e7b1      	b.n	8007040 <_svfiprintf_r+0x48>
 80070dc:	4b40      	ldr	r3, [pc, #256]	; (80071e0 <_svfiprintf_r+0x1e8>)
 80070de:	6822      	ldr	r2, [r4, #0]
 80070e0:	1ac0      	subs	r0, r0, r3
 80070e2:	2301      	movs	r3, #1
 80070e4:	4083      	lsls	r3, r0
 80070e6:	4313      	orrs	r3, r2
 80070e8:	6023      	str	r3, [r4, #0]
 80070ea:	002e      	movs	r6, r5
 80070ec:	e7ce      	b.n	800708c <_svfiprintf_r+0x94>
 80070ee:	9b07      	ldr	r3, [sp, #28]
 80070f0:	1d19      	adds	r1, r3, #4
 80070f2:	681b      	ldr	r3, [r3, #0]
 80070f4:	9107      	str	r1, [sp, #28]
 80070f6:	2b00      	cmp	r3, #0
 80070f8:	db01      	blt.n	80070fe <_svfiprintf_r+0x106>
 80070fa:	930b      	str	r3, [sp, #44]	; 0x2c
 80070fc:	e004      	b.n	8007108 <_svfiprintf_r+0x110>
 80070fe:	425b      	negs	r3, r3
 8007100:	60e3      	str	r3, [r4, #12]
 8007102:	2302      	movs	r3, #2
 8007104:	4313      	orrs	r3, r2
 8007106:	6023      	str	r3, [r4, #0]
 8007108:	782b      	ldrb	r3, [r5, #0]
 800710a:	2b2e      	cmp	r3, #46	; 0x2e
 800710c:	d10a      	bne.n	8007124 <_svfiprintf_r+0x12c>
 800710e:	786b      	ldrb	r3, [r5, #1]
 8007110:	2b2a      	cmp	r3, #42	; 0x2a
 8007112:	d135      	bne.n	8007180 <_svfiprintf_r+0x188>
 8007114:	9b07      	ldr	r3, [sp, #28]
 8007116:	3502      	adds	r5, #2
 8007118:	1d1a      	adds	r2, r3, #4
 800711a:	681b      	ldr	r3, [r3, #0]
 800711c:	9207      	str	r2, [sp, #28]
 800711e:	2b00      	cmp	r3, #0
 8007120:	db2b      	blt.n	800717a <_svfiprintf_r+0x182>
 8007122:	9309      	str	r3, [sp, #36]	; 0x24
 8007124:	4e2f      	ldr	r6, [pc, #188]	; (80071e4 <_svfiprintf_r+0x1ec>)
 8007126:	7829      	ldrb	r1, [r5, #0]
 8007128:	2203      	movs	r2, #3
 800712a:	0030      	movs	r0, r6
 800712c:	f7ff fb52 	bl	80067d4 <memchr>
 8007130:	2800      	cmp	r0, #0
 8007132:	d006      	beq.n	8007142 <_svfiprintf_r+0x14a>
 8007134:	2340      	movs	r3, #64	; 0x40
 8007136:	1b80      	subs	r0, r0, r6
 8007138:	4083      	lsls	r3, r0
 800713a:	6822      	ldr	r2, [r4, #0]
 800713c:	3501      	adds	r5, #1
 800713e:	4313      	orrs	r3, r2
 8007140:	6023      	str	r3, [r4, #0]
 8007142:	7829      	ldrb	r1, [r5, #0]
 8007144:	2206      	movs	r2, #6
 8007146:	4828      	ldr	r0, [pc, #160]	; (80071e8 <_svfiprintf_r+0x1f0>)
 8007148:	1c6e      	adds	r6, r5, #1
 800714a:	7621      	strb	r1, [r4, #24]
 800714c:	f7ff fb42 	bl	80067d4 <memchr>
 8007150:	2800      	cmp	r0, #0
 8007152:	d03c      	beq.n	80071ce <_svfiprintf_r+0x1d6>
 8007154:	4b25      	ldr	r3, [pc, #148]	; (80071ec <_svfiprintf_r+0x1f4>)
 8007156:	2b00      	cmp	r3, #0
 8007158:	d125      	bne.n	80071a6 <_svfiprintf_r+0x1ae>
 800715a:	2207      	movs	r2, #7
 800715c:	9b07      	ldr	r3, [sp, #28]
 800715e:	3307      	adds	r3, #7
 8007160:	4393      	bics	r3, r2
 8007162:	3308      	adds	r3, #8
 8007164:	9307      	str	r3, [sp, #28]
 8007166:	6963      	ldr	r3, [r4, #20]
 8007168:	9a04      	ldr	r2, [sp, #16]
 800716a:	189b      	adds	r3, r3, r2
 800716c:	6163      	str	r3, [r4, #20]
 800716e:	e766      	b.n	800703e <_svfiprintf_r+0x46>
 8007170:	4343      	muls	r3, r0
 8007172:	2101      	movs	r1, #1
 8007174:	189b      	adds	r3, r3, r2
 8007176:	0035      	movs	r5, r6
 8007178:	e7a6      	b.n	80070c8 <_svfiprintf_r+0xd0>
 800717a:	2301      	movs	r3, #1
 800717c:	425b      	negs	r3, r3
 800717e:	e7d0      	b.n	8007122 <_svfiprintf_r+0x12a>
 8007180:	2300      	movs	r3, #0
 8007182:	200a      	movs	r0, #10
 8007184:	001a      	movs	r2, r3
 8007186:	3501      	adds	r5, #1
 8007188:	6063      	str	r3, [r4, #4]
 800718a:	7829      	ldrb	r1, [r5, #0]
 800718c:	1c6e      	adds	r6, r5, #1
 800718e:	3930      	subs	r1, #48	; 0x30
 8007190:	2909      	cmp	r1, #9
 8007192:	d903      	bls.n	800719c <_svfiprintf_r+0x1a4>
 8007194:	2b00      	cmp	r3, #0
 8007196:	d0c5      	beq.n	8007124 <_svfiprintf_r+0x12c>
 8007198:	9209      	str	r2, [sp, #36]	; 0x24
 800719a:	e7c3      	b.n	8007124 <_svfiprintf_r+0x12c>
 800719c:	4342      	muls	r2, r0
 800719e:	2301      	movs	r3, #1
 80071a0:	1852      	adds	r2, r2, r1
 80071a2:	0035      	movs	r5, r6
 80071a4:	e7f1      	b.n	800718a <_svfiprintf_r+0x192>
 80071a6:	ab07      	add	r3, sp, #28
 80071a8:	9300      	str	r3, [sp, #0]
 80071aa:	003a      	movs	r2, r7
 80071ac:	4b10      	ldr	r3, [pc, #64]	; (80071f0 <_svfiprintf_r+0x1f8>)
 80071ae:	0021      	movs	r1, r4
 80071b0:	9803      	ldr	r0, [sp, #12]
 80071b2:	f7fe f87f 	bl	80052b4 <_printf_float>
 80071b6:	9004      	str	r0, [sp, #16]
 80071b8:	9b04      	ldr	r3, [sp, #16]
 80071ba:	3301      	adds	r3, #1
 80071bc:	d1d3      	bne.n	8007166 <_svfiprintf_r+0x16e>
 80071be:	89bb      	ldrh	r3, [r7, #12]
 80071c0:	980d      	ldr	r0, [sp, #52]	; 0x34
 80071c2:	065b      	lsls	r3, r3, #25
 80071c4:	d400      	bmi.n	80071c8 <_svfiprintf_r+0x1d0>
 80071c6:	e72e      	b.n	8007026 <_svfiprintf_r+0x2e>
 80071c8:	2001      	movs	r0, #1
 80071ca:	4240      	negs	r0, r0
 80071cc:	e72b      	b.n	8007026 <_svfiprintf_r+0x2e>
 80071ce:	ab07      	add	r3, sp, #28
 80071d0:	9300      	str	r3, [sp, #0]
 80071d2:	003a      	movs	r2, r7
 80071d4:	4b06      	ldr	r3, [pc, #24]	; (80071f0 <_svfiprintf_r+0x1f8>)
 80071d6:	0021      	movs	r1, r4
 80071d8:	9803      	ldr	r0, [sp, #12]
 80071da:	f7fe fb25 	bl	8005828 <_printf_i>
 80071de:	e7ea      	b.n	80071b6 <_svfiprintf_r+0x1be>
 80071e0:	080075ec 	.word	0x080075ec
 80071e4:	080075f2 	.word	0x080075f2
 80071e8:	080075f6 	.word	0x080075f6
 80071ec:	080052b5 	.word	0x080052b5
 80071f0:	08006f35 	.word	0x08006f35

080071f4 <_sbrk_r>:
 80071f4:	2300      	movs	r3, #0
 80071f6:	b570      	push	{r4, r5, r6, lr}
 80071f8:	4c06      	ldr	r4, [pc, #24]	; (8007214 <_sbrk_r+0x20>)
 80071fa:	0005      	movs	r5, r0
 80071fc:	0008      	movs	r0, r1
 80071fe:	6023      	str	r3, [r4, #0]
 8007200:	f7fc fb88 	bl	8003914 <_sbrk>
 8007204:	1c43      	adds	r3, r0, #1
 8007206:	d103      	bne.n	8007210 <_sbrk_r+0x1c>
 8007208:	6823      	ldr	r3, [r4, #0]
 800720a:	2b00      	cmp	r3, #0
 800720c:	d000      	beq.n	8007210 <_sbrk_r+0x1c>
 800720e:	602b      	str	r3, [r5, #0]
 8007210:	bd70      	pop	{r4, r5, r6, pc}
 8007212:	46c0      	nop			; (mov r8, r8)
 8007214:	20000294 	.word	0x20000294

08007218 <__ascii_mbtowc>:
 8007218:	b082      	sub	sp, #8
 800721a:	2900      	cmp	r1, #0
 800721c:	d100      	bne.n	8007220 <__ascii_mbtowc+0x8>
 800721e:	a901      	add	r1, sp, #4
 8007220:	1e10      	subs	r0, r2, #0
 8007222:	d006      	beq.n	8007232 <__ascii_mbtowc+0x1a>
 8007224:	2b00      	cmp	r3, #0
 8007226:	d006      	beq.n	8007236 <__ascii_mbtowc+0x1e>
 8007228:	7813      	ldrb	r3, [r2, #0]
 800722a:	600b      	str	r3, [r1, #0]
 800722c:	7810      	ldrb	r0, [r2, #0]
 800722e:	1e43      	subs	r3, r0, #1
 8007230:	4198      	sbcs	r0, r3
 8007232:	b002      	add	sp, #8
 8007234:	4770      	bx	lr
 8007236:	2002      	movs	r0, #2
 8007238:	4240      	negs	r0, r0
 800723a:	e7fa      	b.n	8007232 <__ascii_mbtowc+0x1a>

0800723c <memmove>:
 800723c:	b510      	push	{r4, lr}
 800723e:	4288      	cmp	r0, r1
 8007240:	d902      	bls.n	8007248 <memmove+0xc>
 8007242:	188b      	adds	r3, r1, r2
 8007244:	4298      	cmp	r0, r3
 8007246:	d303      	bcc.n	8007250 <memmove+0x14>
 8007248:	2300      	movs	r3, #0
 800724a:	e007      	b.n	800725c <memmove+0x20>
 800724c:	5c8b      	ldrb	r3, [r1, r2]
 800724e:	5483      	strb	r3, [r0, r2]
 8007250:	3a01      	subs	r2, #1
 8007252:	d2fb      	bcs.n	800724c <memmove+0x10>
 8007254:	bd10      	pop	{r4, pc}
 8007256:	5ccc      	ldrb	r4, [r1, r3]
 8007258:	54c4      	strb	r4, [r0, r3]
 800725a:	3301      	adds	r3, #1
 800725c:	429a      	cmp	r2, r3
 800725e:	d1fa      	bne.n	8007256 <memmove+0x1a>
 8007260:	e7f8      	b.n	8007254 <memmove+0x18>

08007262 <__malloc_lock>:
 8007262:	4770      	bx	lr

08007264 <__malloc_unlock>:
 8007264:	4770      	bx	lr

08007266 <_realloc_r>:
 8007266:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007268:	0007      	movs	r7, r0
 800726a:	000d      	movs	r5, r1
 800726c:	0016      	movs	r6, r2
 800726e:	2900      	cmp	r1, #0
 8007270:	d105      	bne.n	800727e <_realloc_r+0x18>
 8007272:	0011      	movs	r1, r2
 8007274:	f7ff fe00 	bl	8006e78 <_malloc_r>
 8007278:	0004      	movs	r4, r0
 800727a:	0020      	movs	r0, r4
 800727c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800727e:	2a00      	cmp	r2, #0
 8007280:	d103      	bne.n	800728a <_realloc_r+0x24>
 8007282:	f7ff fdaf 	bl	8006de4 <_free_r>
 8007286:	0034      	movs	r4, r6
 8007288:	e7f7      	b.n	800727a <_realloc_r+0x14>
 800728a:	f000 f81e 	bl	80072ca <_malloc_usable_size_r>
 800728e:	002c      	movs	r4, r5
 8007290:	42b0      	cmp	r0, r6
 8007292:	d2f2      	bcs.n	800727a <_realloc_r+0x14>
 8007294:	0031      	movs	r1, r6
 8007296:	0038      	movs	r0, r7
 8007298:	f7ff fdee 	bl	8006e78 <_malloc_r>
 800729c:	1e04      	subs	r4, r0, #0
 800729e:	d0ec      	beq.n	800727a <_realloc_r+0x14>
 80072a0:	0029      	movs	r1, r5
 80072a2:	0032      	movs	r2, r6
 80072a4:	f7ff faa1 	bl	80067ea <memcpy>
 80072a8:	0029      	movs	r1, r5
 80072aa:	0038      	movs	r0, r7
 80072ac:	f7ff fd9a 	bl	8006de4 <_free_r>
 80072b0:	e7e3      	b.n	800727a <_realloc_r+0x14>

080072b2 <__ascii_wctomb>:
 80072b2:	1e0b      	subs	r3, r1, #0
 80072b4:	d004      	beq.n	80072c0 <__ascii_wctomb+0xe>
 80072b6:	2aff      	cmp	r2, #255	; 0xff
 80072b8:	d904      	bls.n	80072c4 <__ascii_wctomb+0x12>
 80072ba:	238a      	movs	r3, #138	; 0x8a
 80072bc:	6003      	str	r3, [r0, #0]
 80072be:	3b8b      	subs	r3, #139	; 0x8b
 80072c0:	0018      	movs	r0, r3
 80072c2:	4770      	bx	lr
 80072c4:	700a      	strb	r2, [r1, #0]
 80072c6:	2301      	movs	r3, #1
 80072c8:	e7fa      	b.n	80072c0 <__ascii_wctomb+0xe>

080072ca <_malloc_usable_size_r>:
 80072ca:	1f0b      	subs	r3, r1, #4
 80072cc:	681b      	ldr	r3, [r3, #0]
 80072ce:	1f18      	subs	r0, r3, #4
 80072d0:	2b00      	cmp	r3, #0
 80072d2:	da01      	bge.n	80072d8 <_malloc_usable_size_r+0xe>
 80072d4:	580b      	ldr	r3, [r1, r0]
 80072d6:	18c0      	adds	r0, r0, r3
 80072d8:	4770      	bx	lr
	...

080072dc <_init>:
 80072dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80072de:	46c0      	nop			; (mov r8, r8)
 80072e0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80072e2:	bc08      	pop	{r3}
 80072e4:	469e      	mov	lr, r3
 80072e6:	4770      	bx	lr

080072e8 <_fini>:
 80072e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80072ea:	46c0      	nop			; (mov r8, r8)
 80072ec:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80072ee:	bc08      	pop	{r3}
 80072f0:	469e      	mov	lr, r3
 80072f2:	4770      	bx	lr

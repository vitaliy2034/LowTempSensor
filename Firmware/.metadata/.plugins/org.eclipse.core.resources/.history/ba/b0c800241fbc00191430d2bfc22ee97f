#include <TempMes.h>

extern "C"{
void TIM1_BRK_UP_TRG_COM_IRQHandler(void){
	int16_t d;
	TIM1->CR1&=~(TIM_CR1_CEN);
int u= TEMP110_CAL_ADDR;
	read_Temp(d);
	GPIOA->ODR^=GPIO_ODR_4;

	TIM1->SR&=~(TIM_SR_UIF);
	TIM1->CR1|=(TIM_CR1_CEN);

}
}

void Init_Adc(){
	RCC->AHBENR|=RCC_AHBENR_GPIOAEN;
	GPIOA->MODER|= GPIO_MODER_MODER1;


	GPIOA->MODER|=GPIO_MODER_MODER4_0;
	GPIOA->BSRR|= GPIO_BSRR_BS_4;


	RCC->APB2ENR|= RCC_APB2ENR_ADCEN;

//	NVIC_EnableIRQ(ADC1_IRQn);
	//NVIC_SetPriority(ADC1_IRQn, 0);

	ADC1->ISR|=ADC_ISR_ADRDY;
	ADC1->CR|=ADC_CR_ADEN;

	while(!(ADC_ISR_ADRDY&ADC1->ISR));
	//ADC1->CFGR1;
	ADC->CCR|= ADC_CCR_TSEN;
	ADC1->IER|= ADC_IER_ADRDYIE;
	ADC1->CFGR2|=ADC_CFGR2_CKMODE_0;
	ADC1->CHSELR|=ADC_CHSELR_CHSEL1 | ADC_CHSELR_CHSEL16;
	ADC1->SMPR|=ADC_SMPR1_SMPR_2;

}
void read_Temp(float& data){
	ADC1->CR|=ADC_CR_ADSTART;
	while(!(ADC1->ISR&ADC_ISR_EOC));
	data=ADC1->DR;
	while(!(ADC1->ISR&ADC_ISR_EOC));
	data=ADC1->DR;



}
void Init_Timer(){
	NVIC_EnableIRQ(TIM1_BRK_UP_TRG_COM_IRQn);
//	NVIC_SetPriority(TIM1_BRK_UP_TRG_COM_IRQn, 2);
	RCC->APB2ENR|=RCC_APB2ENR_TIM1EN;
	TIM1->ARR=40000;
	TIM1->DIER|=TIM_DIER_UIE;
	TIM1->PSC=2;
	TIM1->CR1|=TIM_CR1_ARPE|TIM_CR1_DIR|TIM_CR1_CEN;

}

